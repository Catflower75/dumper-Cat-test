{
  "pulse_system.dll": {
    "classes": {
      "CBasePulseGraphInstance": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseArraylib": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Base": {
        "fields": {
          "m_nEditorNodeID": 8
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseFlow": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseLerp": {
        "fields": {
          "m_WakeResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseLerp__CursorState_t": {
        "fields": {
          "m_EndTime": 4,
          "m_StartTime": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseRequirement": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseState": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseValue": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseYieldingInflow": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BooleanSwitchState": {
        "fields": {
          "m_Condition": 72,
          "m_SubGraph": 192,
          "m_WhenFalse": 336,
          "m_WhenTrue": 264
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_CursorQueue": {
        "fields": {
          "m_nCursorsAllowedToRunParallel": 152
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_ExampleCriteria": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_ExampleCriteria__Criteria_t": {
        "fields": {
          "m_bMyBool": 8,
          "m_flFloatValue1": 0,
          "m_flFloatValue2": 4
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_ExampleSelector": {
        "fields": {
          "m_OutflowList": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_FireCursors": {
        "fields": {
          "m_OnCanceled": 176,
          "m_OnFinished": 104,
          "m_Outflows": 72,
          "m_bWaitForChildOutflows": 96
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_BaseEntrypoint": {
        "fields": {
          "m_EntryChunk": 72,
          "m_RegisterMap": 80
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_EntOutputHandler": {
        "fields": {
          "m_ExpectedParamType": 160,
          "m_SourceEntity": 128,
          "m_SourceOutput": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_EventHandler": {
        "fields": {
          "m_EventName": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_GraphHook": {
        "fields": {
          "m_HookName": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_Method": {
        "fields": {
          "m_Args": 184,
          "m_Description": 144,
          "m_MethodName": 128,
          "m_ReturnType": 160,
          "m_bIsPublic": 152
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_ObservableVariableListener": {
        "fields": {
          "m_bSelfReference": 130,
          "m_nBlackboardReference": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_Wait": {
        "fields": {
          "m_WakeResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_Yield": {
        "fields": {
          "m_UnyieldResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_InlineNodeSkipSelector": {
        "fields": {
          "m_FailOutflow": 104,
          "m_PassOutflow": 80,
          "m_bAnd": 76,
          "m_nFlowNodeID": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IntervalTimer": {
        "fields": {
          "m_Completed": 72,
          "m_OnInterval": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IntervalTimer__CursorState_t": {
        "fields": {
          "m_EndTime": 4,
          "m_StartTime": 0,
          "m_bCompleteOnNextWake": 16,
          "m_flWaitInterval": 8,
          "m_flWaitIntervalHigh": 12
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IsRequirementValid": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IsRequirementValid__Criteria_t": {
        "fields": {
          "m_bIsValid": 0
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_LimitCount": {
        "fields": {
          "m_nLimitCount": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseRequirementPass",
            "type": "Unknown"
          },
          {
            "name": "MPulseRequirementSummaryExpr",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_LimitCount__Criteria_t": {
        "fields": {
          "m_bLimitCountPasses": 0
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_LimitCount__InstanceState_t": {
        "fields": {
          "m_nCurrentCount": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleOrdered": {
        "fields": {
          "m_Outputs": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleOrdered__InstanceState_t": {
        "fields": {
          "m_nNextIndex": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleRandom": {
        "fields": {
          "m_Outputs": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleShuffled": {
        "fields": {
          "m_Outputs": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleShuffled__InstanceState_t": {
        "fields": {
          "m_Shuffle": 0,
          "m_nNextShuffle": 32
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_IntSwitch": {
        "fields": {
          "m_CaseOutflows": 144,
          "m_DefaultCaseOutflow": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_StringSwitch": {
        "fields": {
          "m_CaseOutflows": 144,
          "m_DefaultCaseOutflow": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_TestExplicitYesNo": {
        "fields": {
          "m_No": 144,
          "m_Yes": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_TestRandomYesNo": {
        "fields": {
          "m_No": 144,
          "m_Yes": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_PickBestOutflowSelector": {
        "fields": {
          "m_OutflowList": 80,
          "m_nCheckType": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_CallExternalMethod": {
        "fields": {
          "m_ExpectedArgs": 104,
          "m_GameBlackboard": 88,
          "m_MethodName": 72,
          "m_OnFinished": 128,
          "m_nAsyncCallMode": 120
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_DebugLog": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_PublicOutput": {
        "fields": {
          "m_OutputIndex": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_TestDomainCreateFakeEntity": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_TestDomainDestroyFakeEntity": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_TestDomainEntFire": {
        "fields": {
          "m_Input": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderText",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_TestDomainTracepoint": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_TestWaitWithCursorState": {
        "fields": {
          "m_WakeCancel": 144,
          "m_WakeFail": 216,
          "m_WakeResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_TestWaitWithCursorState__CursorState_t": {
        "fields": {
          "bFailOnCancel": 4,
          "flWaitValue": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Test_MultiInflow_NoDefault": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Test_MultiInflow_WithDefault": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Test_MultiOutflow_WithParams": {
        "fields": {
          "m_Out1": 72,
          "m_Out2": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Test_MultiOutflow_WithParams_Yielding": {
        "fields": {
          "m_AsyncChild1": 144,
          "m_AsyncChild2": 216,
          "m_Out1": 72,
          "m_YieldResume1": 288,
          "m_YieldResume2": 360
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Test_MultiOutflow_WithParams_Yielding__CursorState_t": {
        "fields": {
          "nTestStep": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Test_NoInflow": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Timeline": {
        "fields": {
          "m_OnCanceled": 176,
          "m_OnFinished": 104,
          "m_TimelineEvents": 72,
          "m_bWaitForChildOutflows": 96
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Timeline__TimelineEvent_t": {
        "fields": {
          "m_EventOutflow": 8,
          "m_flTimeFromPrevious": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Unknown": {
        "fields": {
          "m_UnknownKeys": 72
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_Val_TestDomainFindEntityByName": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Val_TestDomainGetEntityName": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_Curve": {
        "fields": {
          "m_Curve": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_Gradient": {
        "fields": {
          "m_Gradient": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_RandomFloat": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_RandomInt": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_TestValue50": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_WaitForCursorsWithTag": {
        "fields": {
          "m_bTagSelfWhenComplete": 152,
          "m_nDesiredKillPriority": 156
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_WaitForCursorsWithTagBase": {
        "fields": {
          "m_WaitComplete": 80,
          "m_nCursorsAllowedToWait": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_WaitForCursorsWithTagBase__CursorState_t": {
        "fields": {
          "m_TagName": 0
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_WaitForObservable": {
        "fields": {
          "m_Condition": 72,
          "m_OnTrue": 192
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCursorFuncs": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseExecCursor": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CPulseGraphDef": {
        "fields": {
          "m_BlackboardReferences": 272,
          "m_CallInfos": 200,
          "m_Cells": 104,
          "m_Chunks": 80,
          "m_Constants": 224,
          "m_DomainIdentifier": 8,
          "m_DomainSubType": 24,
          "m_DomainValues": 248,
          "m_InvokeBindings": 176,
          "m_OutputConnections": 296,
          "m_ParentMapName": 48,
          "m_ParentXmlName": 64,
          "m_PublicOutputs": 152,
          "m_Vars": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphInstance_TestDomain": {
        "fields": {
          "m_Tracepoints": 296,
          "m_bExpectingCursorTerminatedDueToMaxInstructions": 284,
          "m_bExpectingToDestroyWithYieldedCursors": 282,
          "m_bExplicitTimeStepping": 281,
          "m_bIsRunningUnitTests": 280,
          "m_bQuietTracepoints": 283,
          "m_bTestYesOrNoPath": 320,
          "m_nCursorsTerminatedDueToMaxInstructions": 288,
          "m_nNextValidateIndex": 292
        },
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInVariableKeysSource",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphInstance_TestDomain_Derived": {
        "fields": {
          "m_nInstanceValueX": 328
        },
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphInstance_TestDomain_FakeEntityOwner": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInFeatureTag",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphInstance_TurtleGraphics": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseMathlib": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseTestFuncs_LibraryA": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseTestScriptLib": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseTurtleGraphicsCursor": {
        "fields": {
          "m_Color": 208,
          "m_bPenUp": 224,
          "m_flHeadingDeg": 220,
          "m_vPos": 212
        },
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_BlackboardReference": {
        "fields": {
          "m_BlackboardResource": 8,
          "m_NodeName": 32,
          "m_hBlackboardResource": 0,
          "m_nNodeID": 24
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_CallInfo": {
        "fields": {
          "m_CallMethodID": 72,
          "m_PortName": 0,
          "m_RegisterMap": 24,
          "m_nEditorNodeID": 16,
          "m_nSrcChunk": 76,
          "m_nSrcInstruction": 80
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_InvokeBinding": {
        "fields": {
          "m_FuncName": 48,
          "m_RegisterMap": 0,
          "m_nCellIndex": 64,
          "m_nSrcChunk": 68,
          "m_nSrcInstruction": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_OutflowConnection": {
        "fields": {
          "m_OutflowRegisterMap": 24,
          "m_SourceOutflowName": 0,
          "m_nDestChunk": 16,
          "m_nInstruction": 20
        },
        "metadata": [],
        "parent": null
      },
      "CPulse_ResumePoint": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CTestDomainDerived_Cursor": {
        "fields": {
          "m_nCursorValueA": 208,
          "m_nCursorValueB": 212
        },
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "FakeEntityDerivedA_tAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "FakeEntityDerivedB_tAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "FakeEntity_tAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "OutflowWithRequirements_t": {
        "fields": {
          "m_Connection": 0,
          "m_DestinationFlowNodeID": 72,
          "m_RequirementNodeIDs": 80,
          "m_nCursorStateBlockIndex": 104
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseNodeDynamicOutflows_t": {
        "fields": {
          "m_Outflows": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseNodeDynamicOutflows_t__DynamicOutflow_t": {
        "fields": {
          "m_Connection": 8,
          "m_OutflowID": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseObservableBoolExpression_t": {
        "fields": {
          "m_DependentObservableBlackboardReferences": 96,
          "m_DependentObservableVars": 72,
          "m_EvaluateConnection": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseSelectorOutflowList_t": {
        "fields": {
          "m_Outflows": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SignatureOutflow_Continue": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "SignatureOutflow_Resume": {
        "fields": {},
        "metadata": [],
        "parent": null
      }
    },
    "enums": {
      "PulseBestOutflowRules_t": {
        "alignment": 4,
        "members": {
          "SORT_BY_NUMBER_OF_VALID_CRITERIA": 0,
          "SORT_BY_OUTFLOW_INDEX": 1
        },
        "type": "uint32"
      },
      "PulseCursorCancelPriority_t": {
        "alignment": 4,
        "members": {
          "CancelOnSucceeded": 1,
          "HardCancel": 3,
          "None": 0,
          "SoftCancel": 2
        },
        "type": "uint32"
      },
      "PulseMethodCallMode_t": {
        "alignment": 4,
        "members": {
          "ASYNC_FIRE_AND_FORGET": 1,
          "SYNC_WAIT_FOR_COMPLETION": 0
        },
        "type": "uint32"
      }
    }
  }
}