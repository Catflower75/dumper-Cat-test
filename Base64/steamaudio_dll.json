{
  "steamaudio.dll": {
    "classes": {
      "CSteamAudioAmbisonicsField": {
        "fields": {
          "m_field": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioBakedDimensionsData": {
        "fields": {
          "m_probes": 24,
          "m_settings": 0,
          "m_vecInOut": 32,
          "m_vecInsideSmallSizeField": 104,
          "m_vecOutsideField": 80,
          "m_vecSize": 56
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioBakedMaterialsData": {
        "fields": {
          "m_probes": 0,
          "m_vecMaterialTokens": 8,
          "m_vecMaterialWeights": 32
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioBakedOcclusionData": {
        "fields": {
          "m_probes": 16,
          "m_settings": 0,
          "m_vecPathingDeviation": 48,
          "m_vecPathingRatio": 24,
          "m_vecReflectionRatio": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioBakedPathingData": {
        "fields": {
          "m_probes": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioBakedReverbData": {
        "fields": {
          "m_clusteredProbes": 40,
          "m_compressedClusteredData": 168,
          "m_compressedData": 72,
          "m_probes": 0,
          "m_reverbClusteringSettings": 24,
          "m_reverbCompressionSettings": 36,
          "m_reverbSettings": 8,
          "m_vecClusterForProbe": 48,
          "m_vecMovableReverbAABBs": 312,
          "m_vecMovableReverbInitialTransforms": 288,
          "m_vecMovableReverbKeyTokens": 360,
          "m_vecMovableReverbKeys": 336,
          "m_vecMovableReverbOBBs": 408,
          "m_vecMovableReverbTransforms": 384,
          "m_vecMovableReverbs": 264
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioCompressedReverb": {
        "fields": {
          "m_nBands": 4,
          "m_nBins": 8,
          "m_nChannels": 0,
          "m_nProbes": 12,
          "m_pCompressedData": 88,
          "m_vecCompressedData": 64,
          "m_vecDictionary": 40,
          "m_vecNumSingularValues": 16
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CSteamAudioProbeData": {
        "fields": {
          "m_pProbeBatch": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SteamAudioCustomDataDimensionsSettings_t": {
        "fields": {
          "m_flInsideThreshold": 16,
          "m_flOutsideThreshold": 8,
          "m_flSizeThreshold": 12,
          "m_nAmbisonicsOrderInsideSizeField": 4,
          "m_nAmbisonicsOrderOutsideField": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SteamAudioCustomDataOcclusionSettings_t": {
        "fields": {
          "m_bEnablePathing": 0,
          "m_bEnableReflections": 1,
          "m_nReflectionBounces": 8,
          "m_nReflectionRays": 4
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SteamAudioPathSettings_t": {
        "fields": {
          "m_flProbePathRange": 12,
          "m_flProbeVisRadius": 4,
          "m_flProbeVisThreshold": 8,
          "m_nNumVisSamples": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SteamAudioReverbClusteringSettings_t": {
        "fields": {
          "m_bEnableClustering": 0,
          "m_flDepthThreshold": 8,
          "m_nCubeMapResolution": 4
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SteamAudioReverbCompressionSettings_t": {
        "fields": {
          "m_bEnableCompression": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SteamAudioReverbSettings_t": {
        "fields": {
          "m_flIRDuration": 8,
          "m_nAmbisonicsOrder": 12,
          "m_nNumBounces": 4,
          "m_nNumRays": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      }
    },
    "enums": {}
  }
}