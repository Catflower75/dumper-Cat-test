{
  "server.dll": {
    "classes": {
      "ActiveModelConfig_t": {
        "fields": {
          "m_AssociatedEntities": 64,
          "m_AssociatedEntityNames": 88,
          "m_Handle": 48,
          "m_Name": 56
        },
        "metadata": [
          {
            "name": "m_Handle",
            "type": "NetworkVarNames",
            "type_name": "ModelConfigHandle_t"
          },
          {
            "name": "m_Name",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_AssociatedEntities",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseModelEntity>"
          },
          {
            "name": "m_AssociatedEntityNames",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": ""
      },
      "CAI_ChangeHintGroup": {
        "fields": {
          "m_flRadius": 1288,
          "m_iSearchType": 1264,
          "m_strNewHintGroup": 1280,
          "m_strSearchName": 1272
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CAK47": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CAmbientGeneric": {
        "fields": {
          "m_dpv": 1276,
          "m_fActive": 1376,
          "m_fLooping": 1377,
          "m_flMaxRadius": 1268,
          "m_hSoundSource": 1400,
          "m_iSoundLevel": 1272,
          "m_iszSound": 1384,
          "m_nSoundSourceEntIndex": 1404,
          "m_radius": 1264,
          "m_sSourceEntName": 1392
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CAnimGraphNetworkedVariables": {
        "fields": {
          "m_OwnerOnlyPredNetBoolVariables": 248,
          "m_OwnerOnlyPredNetByteVariables": 272,
          "m_OwnerOnlyPredNetFloatVariables": 392,
          "m_OwnerOnlyPredNetGlobalSymbolVariables": 464,
          "m_OwnerOnlyPredNetIntVariables": 320,
          "m_OwnerOnlyPredNetQuaternionVariables": 440,
          "m_OwnerOnlyPredNetUInt16Variables": 296,
          "m_OwnerOnlyPredNetUInt32Variables": 344,
          "m_OwnerOnlyPredNetUInt64Variables": 368,
          "m_OwnerOnlyPredNetVectorVariables": 416,
          "m_PredNetBoolVariables": 8,
          "m_PredNetByteVariables": 32,
          "m_PredNetFloatVariables": 152,
          "m_PredNetGlobalSymbolVariables": 224,
          "m_PredNetIntVariables": 80,
          "m_PredNetQuaternionVariables": 200,
          "m_PredNetUInt16Variables": 56,
          "m_PredNetUInt32Variables": 104,
          "m_PredNetUInt64Variables": 128,
          "m_PredNetVectorVariables": 176,
          "m_flLastTeleportTime": 500,
          "m_nBoolVariablesCount": 488,
          "m_nOwnerOnlyBoolVariablesCount": 492,
          "m_nRandomSeedOffset": 496
        },
        "metadata": [
          {
            "name": "m_PredNetBoolVariables",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_PredNetByteVariables",
            "type": "NetworkVarNames",
            "type_name": "byte"
          },
          {
            "name": "m_PredNetUInt16Variables",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_PredNetIntVariables",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_PredNetUInt32Variables",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_PredNetUInt64Variables",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_PredNetFloatVariables",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_PredNetVectorVariables",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_PredNetQuaternionVariables",
            "type": "NetworkVarNames",
            "type_name": "Quaternion"
          },
          {
            "name": "m_PredNetGlobalSymbolVariables",
            "type": "NetworkVarNames",
            "type_name": "CGlobalSymbol"
          },
          {
            "name": "m_OwnerOnlyPredNetBoolVariables",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_OwnerOnlyPredNetByteVariables",
            "type": "NetworkVarNames",
            "type_name": "byte"
          },
          {
            "name": "m_OwnerOnlyPredNetUInt16Variables",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_OwnerOnlyPredNetIntVariables",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_OwnerOnlyPredNetUInt32Variables",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_OwnerOnlyPredNetUInt64Variables",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_OwnerOnlyPredNetFloatVariables",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_OwnerOnlyPredNetVectorVariables",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_OwnerOnlyPredNetQuaternionVariables",
            "type": "NetworkVarNames",
            "type_name": "Quaternion"
          },
          {
            "name": "m_OwnerOnlyPredNetGlobalSymbolVariables",
            "type": "NetworkVarNames",
            "type_name": "CGlobalSymbol"
          },
          {
            "name": "m_nBoolVariablesCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nOwnerOnlyBoolVariablesCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nRandomSeedOffset",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flLastTeleportTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": ""
      },
      "CAttributeContainer": {
        "fields": {
          "m_Item": 80
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_Item",
            "type": "NetworkVarNames",
            "type_name": "CEconItemView"
          }
        ],
        "parent": "CAttributeManager"
      },
      "CAttributeList": {
        "fields": {
          "m_Attributes": 8,
          "m_pManager": 112
        },
        "metadata": [
          {
            "name": "m_Attributes",
            "type": "NetworkVarNames",
            "type_name": "CEconItemAttribute"
          }
        ],
        "parent": ""
      },
      "CAttributeManager": {
        "fields": {
          "m_CachedResults": 48,
          "m_ProviderType": 44,
          "m_Providers": 8,
          "m_bPreventLoopback": 40,
          "m_hOuter": 36,
          "m_iReapplyProvisionParity": 32
        },
        "metadata": [
          {
            "name": "m_iReapplyProvisionParity",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_hOuter",
            "type": "NetworkVarNames",
            "type_name": "EHANDLE"
          },
          {
            "name": "m_ProviderType",
            "type": "NetworkVarNames",
            "type_name": "attributeprovidertypes_t"
          }
        ],
        "parent": ""
      },
      "CAttributeManager__cached_attribute_float_t": {
        "fields": {
          "flIn": 0,
          "flOut": 16,
          "iAttribHook": 8
        },
        "metadata": [],
        "parent": null
      },
      "CBarnLight": {
        "fields": {
          "m_Color": 2032,
          "m_LightStyleEvents": 2120,
          "m_LightStyleString": 2080,
          "m_LightStyleTargets": 2144,
          "m_QueuedLightStyleStrings": 2096,
          "m_StyleEvent": 2168,
          "m_VisClusters": 2800,
          "m_bContactShadow": 2444,
          "m_bEnabled": 2024,
          "m_bFogMixedShadows": 2492,
          "m_bForceShadowsEnabled": 2445,
          "m_bPrecomputedFieldsValid": 2512,
          "m_bPvsModifyEntity": 2796,
          "m_fAlternateColorBrightness": 2472,
          "m_flBounceScale": 2452,
          "m_flBrightness": 2040,
          "m_flBrightnessScale": 2044,
          "m_flColorTemperature": 2036,
          "m_flFadeSizeEnd": 2500,
          "m_flFadeSizeStart": 2496,
          "m_flFogScale": 2488,
          "m_flFogStrength": 2480,
          "m_flLightStyleStartTime": 2088,
          "m_flLuminaireAnisotropy": 2072,
          "m_flLuminaireSize": 2068,
          "m_flMinRoughness": 2456,
          "m_flRange": 2400,
          "m_flShadowFadeSizeEnd": 2508,
          "m_flShadowFadeSizeStart": 2504,
          "m_flShape": 2368,
          "m_flSkirt": 2380,
          "m_flSkirtNear": 2384,
          "m_flSoftX": 2372,
          "m_flSoftY": 2376,
          "m_hLightCookie": 2360,
          "m_nBakeSpecularToCubemaps": 2416,
          "m_nBakedShadowIndex": 2052,
          "m_nBounceLight": 2448,
          "m_nCastShadows": 2432,
          "m_nColorMode": 2028,
          "m_nDirectLight": 2048,
          "m_nFog": 2476,
          "m_nFogShadows": 2484,
          "m_nLightMapUniqueId": 2060,
          "m_nLightPathUniqueId": 2056,
          "m_nLuminaireShape": 2064,
          "m_nPrecomputedSubFrusta": 2576,
          "m_nShadowMapSize": 2436,
          "m_nShadowPriority": 2440,
          "m_vAlternateColor": 2460,
          "m_vBakeSpecularToCubemapsSize": 2420,
          "m_vPrecomputedBoundsMaxs": 2528,
          "m_vPrecomputedBoundsMins": 2516,
          "m_vPrecomputedOBBAngles": 2552,
          "m_vPrecomputedOBBAngles0": 2592,
          "m_vPrecomputedOBBAngles1": 2628,
          "m_vPrecomputedOBBAngles2": 2664,
          "m_vPrecomputedOBBAngles3": 2700,
          "m_vPrecomputedOBBAngles4": 2736,
          "m_vPrecomputedOBBAngles5": 2772,
          "m_vPrecomputedOBBExtent": 2564,
          "m_vPrecomputedOBBExtent0": 2604,
          "m_vPrecomputedOBBExtent1": 2640,
          "m_vPrecomputedOBBExtent2": 2676,
          "m_vPrecomputedOBBExtent3": 2712,
          "m_vPrecomputedOBBExtent4": 2748,
          "m_vPrecomputedOBBExtent5": 2784,
          "m_vPrecomputedOBBOrigin": 2540,
          "m_vPrecomputedOBBOrigin0": 2580,
          "m_vPrecomputedOBBOrigin1": 2616,
          "m_vPrecomputedOBBOrigin2": 2652,
          "m_vPrecomputedOBBOrigin3": 2688,
          "m_vPrecomputedOBBOrigin4": 2724,
          "m_vPrecomputedOBBOrigin5": 2760,
          "m_vShear": 2404,
          "m_vSizeParams": 2388
        },
        "metadata": [
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nColorMode",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Color",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flColorTemperature",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flBrightness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flBrightnessScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nDirectLight",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nBakedShadowIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nLightPathUniqueId",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nLightMapUniqueId",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nLuminaireShape",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flLuminaireSize",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flLuminaireAnisotropy",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_LightStyleString",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_flLightStyleStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_QueuedLightStyleStrings",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_LightStyleEvents",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_LightStyleTargets",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseModelEntity>"
          },
          {
            "name": "m_hLightCookie",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_flShape",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSoftX",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSoftY",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSkirt",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSkirtNear",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vSizeParams",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flRange",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vShear",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nBakeSpecularToCubemaps",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vBakeSpecularToCubemapsSize",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nCastShadows",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowMapSize",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowPriority",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bContactShadow",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bForceShadowsEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nBounceLight",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flBounceScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flMinRoughness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vAlternateColor",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_fAlternateColorBrightness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nFog",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFogStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nFogShadows",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFogScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bFogMixedShadows",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFadeSizeStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeSizeEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowFadeSizeStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowFadeSizeEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bPrecomputedFieldsValid",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vPrecomputedBoundsMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedBoundsMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nPrecomputedSubFrusta",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vPrecomputedOBBOrigin0",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles0",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent0",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin1",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles1",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent1",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin2",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles2",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent2",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin3",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles3",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent3",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin4",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles4",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent4",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin5",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles5",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent5",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_VisClusters",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CBaseAnimGraph": {
        "fields": {
          "m_RagdollPose": 2224,
          "m_bAnimGraphUpdateEnabled": 2168,
          "m_bAnimationUpdateScheduled": 2188,
          "m_bInitiallyPopulateInterpHistory": 2152,
          "m_bRagdollClientSide": 2265,
          "m_bRagdollEnabled": 2264,
          "m_flMaxSlopeDistance": 2172,
          "m_nForceBone": 2204,
          "m_pChoreoServices": 2160,
          "m_vLastSlopeCheckPos": 2176,
          "m_vecForce": 2192
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_bInitiallyPopulateInterpHistory",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bAnimGraphUpdateEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vecForce",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nForceBone",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_RagdollPose",
            "type": "NetworkVarNames",
            "type_name": "PhysicsRagdollPose_t"
          },
          {
            "name": "m_bRagdollEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bRagdollClientSide",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CBaseAnimGraphController": {
        "fields": {
          "m_animGraphNetworkedVars": 24,
          "m_bIsUsingAG2": 1424,
          "m_bLastUpdateSkipped": 588,
          "m_bNetworkedAnimationInputsChanged": 586,
          "m_bNetworkedSequenceChanged": 587,
          "m_bSequenceFinished": 544,
          "m_flPlaybackRate": 572,
          "m_flPrevAnimUpdateTime": 592,
          "m_flSeqFixedCycle": 564,
          "m_flSeqStartTime": 560,
          "m_flSoundSyncTime": 548,
          "m_hGraphDefinitionAG2": 1416,
          "m_hSequence": 556,
          "m_nActiveIKChainMask": 552,
          "m_nAnimLoopMode": 568,
          "m_nGraphCreationFlagsAG2": 1460,
          "m_nNotifyState": 584,
          "m_nSerializePoseRecipeSizeAG2": 1456,
          "m_nServerGraphDefReloadCountAG2": 1528,
          "m_serializedPoseRecipeAG2": 1432
        },
        "metadata": [
          {
            "name": "m_animGraphNetworkedVars",
            "type": "NetworkVarNames",
            "type_name": "CAnimGraphNetworkedVariables"
          },
          {
            "name": "m_hSequence",
            "type": "NetworkVarNames",
            "type_name": "HSequence"
          },
          {
            "name": "m_flSeqStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flSeqFixedCycle",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nAnimLoopMode",
            "type": "NetworkVarNames",
            "type_name": "AnimLoopMode_t"
          },
          {
            "name": "m_hGraphDefinitionAG2",
            "type": "NetworkVarNames",
            "type_name": "HNmGraphDefinitionStrong"
          },
          {
            "name": "m_bIsUsingAG2",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_serializedPoseRecipeAG2",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nSerializePoseRecipeSizeAG2",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nGraphCreationFlagsAG2",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nServerGraphDefReloadCountAG2",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CSkeletonAnimationController"
      },
      "CBaseButton": {
        "fields": {
          "m_OnDamaged": 2248,
          "m_OnIn": 2368,
          "m_OnOut": 2408,
          "m_OnPressed": 2288,
          "m_OnUseLocked": 2328,
          "m_angMoveEntitySpace": 2152,
          "m_bDisabled": 2233,
          "m_bForceNpcExclude": 2460,
          "m_bLocked": 2232,
          "m_bSolidBsp": 2240,
          "m_fRotating": 2165,
          "m_fStayPushed": 2164,
          "m_flUseLockedTime": 2236,
          "m_glowEntity": 2472,
          "m_hConstraint": 2452,
          "m_hConstraintParent": 2456,
          "m_ls": 2168,
          "m_nState": 2448,
          "m_sGlowEntity": 2464,
          "m_sLockedSound": 2208,
          "m_sOverrideAnticipationName": 2224,
          "m_sUnlockedSound": 2216,
          "m_sUseSound": 2200,
          "m_szDisplayText": 2480,
          "m_usable": 2476
        },
        "metadata": [
          {
            "name": "m_glowEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseModelEntity>"
          },
          {
            "name": "m_usable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_szDisplayText",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": "CBaseToggle"
      },
      "CBaseCSGrenade": {
        "fields": {
          "m_bIsHeldByPlayer": 4153,
          "m_bJumpThrow": 4155,
          "m_bJustPulledPin": 4176,
          "m_bPinPulled": 4154,
          "m_bRedraw": 4152,
          "m_bThrowAnimating": 4156,
          "m_fDropTime": 4168,
          "m_fPinPullTime": 4172,
          "m_fThrowTime": 4160,
          "m_flNextHoldFrac": 4184,
          "m_flThrowStrength": 4164,
          "m_hSwitchToWeaponAfterThrow": 4188,
          "m_nNextHoldTick": 4180
        },
        "metadata": [
          {
            "name": "m_bRedraw",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsHeldByPlayer",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bPinPulled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bJumpThrow",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bThrowAnimating",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fThrowTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flThrowStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fDropTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_fPinPullTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bJustPulledPin",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nNextHoldTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_flNextHoldFrac",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_hSwitchToWeaponAfterThrow",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSWeaponBase>"
          }
        ],
        "parent": "CCSWeaponBase"
      },
      "CBaseCSGrenadeProjectile": {
        "fields": {
          "m_bDetonationRecorded": 3053,
          "m_bHasEverHitEnemy": 3100,
          "m_flLastBounceSoundTime": 3068,
          "m_flSpawnTime": 3048,
          "m_nBounces": 3016,
          "m_nExplodeEffectIndex": 3024,
          "m_nExplodeEffectTickBegin": 3032,
          "m_nItemIndex": 3054,
          "m_nTicksAtZeroVelocity": 3096,
          "m_unOGSExtraFlags": 3052,
          "m_vInitialPosition": 2992,
          "m_vInitialVelocity": 3004,
          "m_vecExplodeEffectOrigin": 3036,
          "m_vecGrenadeSpin": 3072,
          "m_vecLastHitSurfaceNormal": 3084,
          "m_vecOriginalSpawnLocation": 3056
        },
        "metadata": [
          {
            "name": "m_vInitialPosition",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vInitialVelocity",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nBounces",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nExplodeEffectIndex",
            "type": "NetworkVarNames",
            "type_name": "HParticleSystemDefinitionStrong"
          },
          {
            "name": "m_nExplodeEffectTickBegin",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vecExplodeEffectOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CBaseGrenade"
      },
      "CBaseClientUIEntity": {
        "fields": {
          "m_CustomOutput0": 2056,
          "m_CustomOutput1": 2096,
          "m_CustomOutput2": 2136,
          "m_CustomOutput3": 2176,
          "m_CustomOutput4": 2216,
          "m_CustomOutput5": 2256,
          "m_CustomOutput6": 2296,
          "m_CustomOutput7": 2336,
          "m_CustomOutput8": 2376,
          "m_CustomOutput9": 2416,
          "m_DialogXMLName": 2032,
          "m_PanelClassName": 2040,
          "m_PanelID": 2048,
          "m_bEnabled": 2024
        },
        "metadata": [
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_DialogXMLName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_PanelClassName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_PanelID",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CBaseCombatCharacter": {
        "fields": {
          "m_bApplyStressDamage": 2864,
          "m_bDeathEventsDispatched": 2865,
          "m_bForceServerRagdoll": 2824,
          "m_eHull": 2960,
          "m_hMyWearables": 2832,
          "m_iDamageCount": 2936,
          "m_impactEnergyScale": 2856,
          "m_movementStats": 2968,
          "m_nMinVehicleDamageToTempRagdoll": 2860,
          "m_nNavHullIdx": 2964,
          "m_pVecRelationships": 2944,
          "m_strRelationships": 2952
        },
        "metadata": [
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "m_hMyWearables",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CEconWearable>"
          }
        ],
        "parent": "CBaseFlex"
      },
      "CBaseDMStart": {
        "fields": {
          "m_Master": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CBaseDoor": {
        "fields": {
          "m_ChainTarget": 2272,
          "m_NoiseArrived": 2248,
          "m_NoiseArrivedClosed": 2264,
          "m_NoiseMoving": 2240,
          "m_NoiseMovingClosed": 2256,
          "m_OnBlockedClosing": 2280,
          "m_OnBlockedOpening": 2320,
          "m_OnClose": 2520,
          "m_OnFullyClosed": 2440,
          "m_OnFullyOpen": 2480,
          "m_OnLockedUse": 2600,
          "m_OnOpen": 2560,
          "m_OnUnblockedClosing": 2360,
          "m_OnUnblockedOpening": 2400,
          "m_angMoveEntitySpace": 2168,
          "m_bCreateNavObstacle": 2672,
          "m_bDoorGroup": 2225,
          "m_bForceClosed": 2224,
          "m_bIgnoreDebris": 2227,
          "m_bIsUsable": 2674,
          "m_bLocked": 2226,
          "m_bLoopMoveSound": 2640,
          "m_bNoNPCs": 2228,
          "m_eSpawnPosition": 2232,
          "m_flBlockDamage": 2236,
          "m_isChaining": 2673,
          "m_ls": 2192,
          "m_vecMoveDirParentSpace": 2180
        },
        "metadata": [
          {
            "name": "m_bIsUsable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseToggle"
      },
      "CBaseEntity": {
        "fields": {
          "m_CBodyComponent": 56,
          "m_MoveCollide": 754,
          "m_MoveType": 755,
          "m_NetworkTransmitComponent": 64,
          "m_OnKilled": 872,
          "m_OnUser1": 1056,
          "m_OnUser2": 1096,
          "m_OnUser3": 1136,
          "m_OnUser4": 1176,
          "m_ResponseContexts": 656,
          "m_aThinkFunctions": 584,
          "m_bAnimatedEveryTick": 1041,
          "m_bClientSideRagdoll": 812,
          "m_bDisableLowViolence": 1049,
          "m_bDisabledContextThinks": 616,
          "m_bGravityActuallyDisabled": 1048,
          "m_bGravityDisabled": 1040,
          "m_bLagCompensate": 1237,
          "m_bNetworkQuantizeOriginAndAngles": 1236,
          "m_bRestoreInHierarchy": 759,
          "m_bTakesDamage": 736,
          "m_fEffects": 1008,
          "m_fFlags": 912,
          "m_flActualGravityScale": 1044,
          "m_flAnimTime": 800,
          "m_flCreateTime": 808,
          "m_flDamageAccumulator": 732,
          "m_flElasticity": 1024,
          "m_flFriction": 1020,
          "m_flGravityScale": 1028,
          "m_flLocalTime": 1244,
          "m_flMoveDoneTime": 784,
          "m_flNavIgnoreUntilTime": 1220,
          "m_flSimulationTime": 804,
          "m_flSpeed": 844,
          "m_flTimeScale": 1032,
          "m_flVPhysicsUpdateLocalTime": 1248,
          "m_flWaterLevel": 1036,
          "m_hDamageFilter": 768,
          "m_hEffectEntity": 1000,
          "m_hGroundEntity": 1012,
          "m_hOwnerEntity": 1004,
          "m_iCurrentThinkContext": 608,
          "m_iEFlags": 1052,
          "m_iGlobalname": 832,
          "m_iHealth": 720,
          "m_iInitialTeamNum": 1216,
          "m_iMaxHealth": 724,
          "m_iSentToClients": 840,
          "m_iTeamNum": 828,
          "m_isSteadyState": 632,
          "m_iszDamageFilterName": 776,
          "m_iszResponseContext": 680,
          "m_lastNetworkChange": 640,
          "m_lifeState": 728,
          "m_nActualMoveType": 756,
          "m_nBloodType": 1252,
          "m_nGroundBodyIndex": 1016,
          "m_nLastThinkTick": 612,
          "m_nNextThinkTick": 860,
          "m_nPlatformType": 752,
          "m_nPushEnumCount": 988,
          "m_nSimulationTick": 864,
          "m_nSlimeTouch": 758,
          "m_nSubclassID": 788,
          "m_nTakeDamageFlags": 744,
          "m_nWaterTouch": 757,
          "m_nWaterType": 1050,
          "m_pBlocker": 1240,
          "m_pCollision": 992,
          "m_pPulseGraphInstance": 1256,
          "m_sUniqueHammerID": 848,
          "m_spawnflags": 856,
          "m_target": 760,
          "m_ubInterpolationFrame": 813,
          "m_vPrevVPhysicsUpdatePos": 816,
          "m_vecAbsVelocity": 916,
          "m_vecAngVelocity": 1224,
          "m_vecBaseVelocity": 976,
          "m_vecVelocity": 928
        },
        "metadata": [
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_CBodyComponent",
            "type": "NetworkVarNames",
            "type_name": "CBodyComponent::Storage_t"
          },
          {
            "name": "m_iHealth",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_iMaxHealth",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_lifeState",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_bTakesDamage",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nTakeDamageFlags",
            "type": "NetworkVarNames",
            "type_name": "TakeDamageFlags_t"
          },
          {
            "name": "m_nPlatformType",
            "type": "NetworkVarNames",
            "type_name": "EntityPlatformTypes_t"
          },
          {
            "name": "m_MoveCollide",
            "type": "NetworkVarNames",
            "type_name": "MoveCollide_t"
          },
          {
            "name": "m_MoveType",
            "type": "NetworkVarNames",
            "type_name": "MoveType_t"
          },
          {
            "name": "m_nSubclassID",
            "type": "NetworkVarNames",
            "type_name": "EntitySubclassID_t"
          },
          {
            "name": "m_flAnimTime",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flSimulationTime",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flCreateTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bClientSideRagdoll",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_ubInterpolationFrame",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_iTeamNum",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_flSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_spawnflags",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nNextThinkTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_fFlags",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_vecVelocity",
            "type": "NetworkVarNames",
            "type_name": "CNetworkVelocityVector"
          },
          {
            "name": "m_vecBaseVelocity",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_hEffectEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_hOwnerEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_fEffects",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_hGroundEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_nGroundBodyIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFriction",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flElasticity",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flGravityScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flTimeScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flWaterLevel",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bGravityDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bAnimatedEveryTick",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flNavIgnoreUntilTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_nBloodType",
            "type": "NetworkVarNames",
            "type_name": "BloodType"
          }
        ],
        "parent": ""
      },
      "CBaseEntityAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBaseFilter": {
        "fields": {
          "m_OnFail": 1312,
          "m_OnPass": 1272,
          "m_bNegated": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CBaseFlex": {
        "fields": {
          "m_bUpdateLayerPriorities": 2812,
          "m_blinktoggle": 2716,
          "m_flAllowResponsesEndTime": 2800,
          "m_flLastFlexAnimationTime": 2804,
          "m_flexWeight": 2680,
          "m_nNextSceneEventId": 2808,
          "m_vLookTargetPosition": 2704
        },
        "metadata": [
          {
            "name": "m_flexWeight",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_vLookTargetPosition",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_blinktoggle",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseAnimGraph"
      },
      "CBaseFlexAlias_funCBaseFlex": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseFlex"
      },
      "CBaseGrenade": {
        "fields": {
          "m_DmgRadius": 2916,
          "m_ExplosionSound": 2944,
          "m_OnExplode": 2872,
          "m_OnPlayerPickup": 2832,
          "m_bHasWarnedAI": 2912,
          "m_bIsLive": 2914,
          "m_bIsSmokeGrenade": 2913,
          "m_flDamage": 2928,
          "m_flDetonateTime": 2920,
          "m_flNextAttack": 2980,
          "m_flWarnAITime": 2924,
          "m_hOriginalThrower": 2984,
          "m_hThrower": 2956,
          "m_iszBounceSound": 2936
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_bIsLive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_DmgRadius",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flDetonateTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flDamage",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_hThrower",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          }
        ],
        "parent": "CBaseFlex"
      },
      "CBaseModelEntity": {
        "fields": {
          "m_CHitboxComponent": 1272,
          "m_CRenderComponent": 1264,
          "m_Collision": 1584,
          "m_ConfigEntitiesToPropagateMaterialDecalsTo": 1912,
          "m_Glow": 1760,
          "m_LastHitGroup": 1360,
          "m_OnIgnite": 1392,
          "m_bAllowFadeInView": 1434,
          "m_bNoInterpolate": 1577,
          "m_bRenderToCubemaps": 1576,
          "m_clrRender": 1464,
          "m_fadeMaxDist": 1856,
          "m_fadeMinDist": 1852,
          "m_flDecalHealBloodRate": 1900,
          "m_flDecalHealHeightRate": 1904,
          "m_flDissolveStartTime": 1388,
          "m_flFadeScale": 1860,
          "m_flGlowBackfaceMult": 1848,
          "m_flShadowStrength": 1864,
          "m_nAddDecal": 1872,
          "m_nDestructiblePartInitialStateDestructed0": 1312,
          "m_nDestructiblePartInitialStateDestructed0_PartIndex": 1332,
          "m_nDestructiblePartInitialStateDestructed1": 1316,
          "m_nDestructiblePartInitialStateDestructed1_PartIndex": 1336,
          "m_nDestructiblePartInitialStateDestructed2": 1320,
          "m_nDestructiblePartInitialStateDestructed2_PartIndex": 1340,
          "m_nDestructiblePartInitialStateDestructed3": 1324,
          "m_nDestructiblePartInitialStateDestructed3_PartIndex": 1344,
          "m_nDestructiblePartInitialStateDestructed4": 1328,
          "m_nDestructiblePartInitialStateDestructed4_PartIndex": 1348,
          "m_nObjectCulling": 1868,
          "m_nRenderFX": 1433,
          "m_nRenderMode": 1432,
          "m_pDestructiblePartsSystemComponent": 1352,
          "m_sLastDamageSourceName": 1368,
          "m_vDecalForwardAxis": 1888,
          "m_vDecalPosition": 1876,
          "m_vLastDamagePosition": 1376,
          "m_vecRenderAttributes": 1472,
          "m_vecViewOffset": 1976
        },
        "metadata": [
          {
            "name": "m_CRenderComponent",
            "type": "NetworkVarNames",
            "type_name": "CRenderComponent::Storage_t"
          },
          {
            "name": "m_CHitboxComponent",
            "type": "NetworkVarNames",
            "type_name": "CHitboxComponent::Storage_t"
          },
          {
            "name": "m_pDestructiblePartsSystemComponent",
            "type": "NetworkVarNames",
            "type_name": "CDestructiblePartsSystemComponent*"
          },
          {
            "name": "m_nRenderMode",
            "type": "NetworkVarNames",
            "type_name": "RenderMode_t"
          },
          {
            "name": "m_nRenderFX",
            "type": "NetworkVarNames",
            "type_name": "RenderFx_t"
          },
          {
            "name": "m_clrRender",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_vecRenderAttributes",
            "type": "NetworkVarNames",
            "type_name": "EntityRenderAttribute_t"
          },
          {
            "name": "m_bRenderToCubemaps",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bNoInterpolate",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Collision",
            "type": "NetworkVarNames",
            "type_name": "CCollisionProperty"
          },
          {
            "name": "m_Glow",
            "type": "NetworkVarNames",
            "type_name": "CGlowProperty"
          },
          {
            "name": "m_flGlowBackfaceMult",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fadeMinDist",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fadeMaxDist",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flShadowStrength",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nObjectCulling",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nAddDecal",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vDecalPosition",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vDecalForwardAxis",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flDecalHealBloodRate",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDecalHealHeightRate",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_ConfigEntitiesToPropagateMaterialDecalsTo",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseModelEntity>"
          },
          {
            "name": "m_vecViewOffset",
            "type": "NetworkVarNames",
            "type_name": "CNetworkViewOffsetVector"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CBaseModelEntityAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBaseMoveBehavior": {
        "fields": {
          "m_flAnimEndTime": 1372,
          "m_flAnimStartTime": 1368,
          "m_flAverageSpeedAcrossFrame": 1376,
          "m_flTimeIntoFrame": 1416,
          "m_iDirection": 1420,
          "m_iPositionInterpolator": 1360,
          "m_iRotationInterpolator": 1364,
          "m_pCurrentKeyFrame": 1384,
          "m_pPostKeyFrame": 1408,
          "m_pPreKeyFrame": 1400,
          "m_pTargetKeyFrame": 1392
        },
        "metadata": [],
        "parent": "CPathKeyFrame"
      },
      "CBasePlatTrain": {
        "fields": {
          "m_NoiseArrived": 2160,
          "m_NoiseMoving": 2152,
          "m_flTLength": 2184,
          "m_flTWidth": 2180,
          "m_volume": 2176
        },
        "metadata": [],
        "parent": "CBaseToggle"
      },
      "CBasePlayerController": {
        "fields": {
          "m_bGamePaused": 1517,
          "m_bHasAnySteadyStateEnts": 1848,
          "m_bIsHLTV": 1360,
          "m_bIsLowViolence": 1516,
          "m_bKnownTeamMismatch": 1324,
          "m_bLagCompensation": 1508,
          "m_bNoClipEnabled": 1872,
          "m_bPredict": 1509,
          "m_fLerpTime": 1504,
          "m_flLastEntitySteadyState": 1840,
          "m_flLastPlayerTalkTime": 1836,
          "m_hPawn": 1320,
          "m_hSplitOwner": 1332,
          "m_hSplitScreenPlayers": 1336,
          "m_iConnected": 1364,
          "m_iDesiredFOV": 1876,
          "m_iIgnoreGlobalChat": 1832,
          "m_iszPlayerName": 1368,
          "m_nAvailableEntitySteadyState": 1844,
          "m_nInButtonsWhichAreToggles": 1272,
          "m_nSplitScreenSlot": 1328,
          "m_nTickBase": 1280,
          "m_steamID": 1864,
          "m_szNetworkIDString": 1496
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "m_nTickBase",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_hPawn",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerPawn>"
          },
          {
            "name": "m_bKnownTeamMismatch",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iConnected",
            "type": "NetworkVarNames",
            "type_name": "PlayerConnectedState"
          },
          {
            "name": "m_iszPlayerName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_steamID",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_bNoClipEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iDesiredFOV",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CBasePlayerControllerAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBasePlayerPawn": {
        "fields": {
          "m_ServerViewAngleChanges": 3112,
          "m_fHltvReplayDelay": 3428,
          "m_fHltvReplayEnd": 3432,
          "m_fInitHUD": 3404,
          "m_fNextSuicideTime": 3400,
          "m_fTimeLastHurt": 3392,
          "m_flDeathTime": 3396,
          "m_hController": 3416,
          "m_hDefaultController": 3420,
          "m_iHideHUD": 3240,
          "m_iHltvReplayEntity": 3436,
          "m_pAutoaimServices": 3048,
          "m_pCameraServices": 3088,
          "m_pExpresser": 3408,
          "m_pFlashlightServices": 3080,
          "m_pItemServices": 3040,
          "m_pMovementServices": 3096,
          "m_pObserverServices": 3056,
          "m_pUseServices": 3072,
          "m_pWaterServices": 3064,
          "m_pWeaponServices": 3032,
          "m_skybox3d": 3248,
          "m_sndOpvarLatchData": 3440,
          "v_angle": 3216,
          "v_anglePrevious": 3228
        },
        "metadata": [
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_pWeaponServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_WeaponServices*"
          },
          {
            "name": "m_pItemServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_ItemServices*"
          },
          {
            "name": "m_pAutoaimServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_AutoaimServices*"
          },
          {
            "name": "m_pObserverServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_ObserverServices*"
          },
          {
            "name": "m_pWaterServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_WaterServices*"
          },
          {
            "name": "m_pUseServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_UseServices*"
          },
          {
            "name": "m_pFlashlightServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_FlashlightServices*"
          },
          {
            "name": "m_pCameraServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_CameraServices*"
          },
          {
            "name": "m_pMovementServices",
            "type": "NetworkVarNames",
            "type_name": "CPlayer_MovementServices*"
          },
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "m_ServerViewAngleChanges",
            "type": "NetworkVarNames",
            "type_name": "ViewAngleServerChange_t"
          },
          {
            "name": "m_iHideHUD",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_skybox3d",
            "type": "NetworkVarNames",
            "type_name": "sky3dparams_t"
          },
          {
            "name": "m_flDeathTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_hController",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerController>"
          },
          {
            "name": "m_hDefaultController",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerController>"
          }
        ],
        "parent": "CBaseCombatCharacter"
      },
      "CBasePlayerVData": {
        "fields": {
          "m_flArmDamageMultiplier": 312,
          "m_flChestDamageMultiplier": 280,
          "m_flCrouchTime": 372,
          "m_flDrowningDamageInterval": 348,
          "m_flHeadDamageMultiplier": 264,
          "m_flHoldBreathTime": 344,
          "m_flLegDamageMultiplier": 328,
          "m_flStomachDamageMultiplier": 296,
          "m_flUseAngleTolerance": 368,
          "m_flUseRange": 364,
          "m_nDrowningDamageInitial": 352,
          "m_nDrowningDamageMax": 356,
          "m_nWaterSpeed": 360,
          "m_sModelName": 40
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBasePlayerWeapon": {
        "fields": {
          "m_OnPlayerUse": 3664,
          "m_flNextPrimaryAttackTickRatio": 3636,
          "m_flNextSecondaryAttackTickRatio": 3644,
          "m_iClip1": 3648,
          "m_iClip2": 3652,
          "m_nNextPrimaryAttackTick": 3632,
          "m_nNextSecondaryAttackTick": 3640,
          "m_pReserveAmmo": 3656
        },
        "metadata": [
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "m_nNextPrimaryAttackTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_flNextPrimaryAttackTickRatio",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nNextSecondaryAttackTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_flNextSecondaryAttackTickRatio",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_iClip1",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_iClip2",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_pReserveAmmo",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CEconEntity"
      },
      "CBasePlayerWeaponVData": {
        "fields": {
          "m_aShootSounds": 1040,
          "m_bAllowFlipping": 489,
          "m_bAutoSwitchFrom": 1017,
          "m_bAutoSwitchTo": 1016,
          "m_bBuiltRightHanded": 488,
          "m_bLinkedCooldowns": 988,
          "m_bReserveAmmoAsClips": 1008,
          "m_bTreatAsSingleClip": 1009,
          "m_flDropSpeed": 1024,
          "m_flMuzzleSmokeDecrementRate": 984,
          "m_flMuzzleSmokeTimeout": 980,
          "m_iDefaultClip1": 1000,
          "m_iDefaultClip2": 1004,
          "m_iFlags": 989,
          "m_iMaxClip1": 992,
          "m_iMaxClip2": 996,
          "m_iPosition": 1032,
          "m_iRumbleEffect": 1020,
          "m_iSlot": 1028,
          "m_iWeight": 1012,
          "m_nMuzzleSmokeShotThreshold": 976,
          "m_nPrimaryAmmoType": 990,
          "m_nSecondaryAmmoType": 991,
          "m_sMuzzleAttachment": 496,
          "m_sToolsOnlyOwnerModelName": 264,
          "m_szBarrelSmokeParticle": 752,
          "m_szMuzzleFlashParticle": 528,
          "m_szWorldModel": 40
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBaseProp": {
        "fields": {
          "m_bConformToCollisionBounds": 2688,
          "m_bModelOverrodeBlockLOS": 2680,
          "m_iShapeType": 2684,
          "m_mPreferredCatchTransform": 2704
        },
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CBasePropDoor": {
        "fields": {
          "m_OnAjarOpen": 4016,
          "m_OnBlockedClosing": 3656,
          "m_OnBlockedOpening": 3696,
          "m_OnClose": 3896,
          "m_OnFullyClosed": 3816,
          "m_OnFullyOpen": 3856,
          "m_OnLockedUse": 3976,
          "m_OnOpen": 3936,
          "m_OnUnblockedClosing": 3736,
          "m_OnUnblockedOpening": 3776,
          "m_SlaveName": 3640,
          "m_SoundClose": 3576,
          "m_SoundJiggle": 3616,
          "m_SoundLatch": 3600,
          "m_SoundLock": 3584,
          "m_SoundLockedAnim": 3624,
          "m_SoundMoving": 3560,
          "m_SoundOpen": 3568,
          "m_SoundPound": 3608,
          "m_SoundUnlock": 3592,
          "m_bFirstBlocked": 3484,
          "m_bForceClosed": 3520,
          "m_bLocked": 3452,
          "m_bNeedsHardware": 3444,
          "m_bNoNPCs": 3453,
          "m_closedAngles": 3468,
          "m_closedPosition": 3456,
          "m_eDoorState": 3448,
          "m_flAutoReturnDelay": 3408,
          "m_hActivator": 3536,
          "m_hBlocker": 3480,
          "m_hDoorList": 3416,
          "m_hMaster": 3648,
          "m_ls": 3488,
          "m_nHardwareType": 3440,
          "m_nPhysicsMaterial": 3636,
          "m_numCloseAttempts": 3632,
          "m_vecLatchWorldPosition": 3524
        },
        "metadata": [
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_eDoorState",
            "type": "NetworkVarNames",
            "type_name": "DoorState_t"
          },
          {
            "name": "m_bLocked",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bNoNPCs",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_closedPosition",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_closedAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_hMaster",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePropDoor>"
          }
        ],
        "parent": "CDynamicProp"
      },
      "CBasePulseGraphInstance": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBaseToggle": {
        "fields": {
          "m_bAlwaysFireBlockedOutputs": 2040,
          "m_flHeight": 2104,
          "m_flLip": 2036,
          "m_flMoveDistance": 2028,
          "m_flWait": 2032,
          "m_hActivator": 2108,
          "m_movementType": 2136,
          "m_sMaster": 2144,
          "m_toggle_state": 2024,
          "m_vecAngle1": 2080,
          "m_vecAngle2": 2092,
          "m_vecFinalAngle": 2124,
          "m_vecFinalDest": 2112,
          "m_vecMoveAng": 2068,
          "m_vecPosition1": 2044,
          "m_vecPosition2": 2056
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CBaseTrigger": {
        "fields": {
          "m_OnEndTouch": 2232,
          "m_OnEndTouchAll": 2272,
          "m_OnNotTouching": 2392,
          "m_OnStartTouch": 2152,
          "m_OnStartTouchAll": 2192,
          "m_OnTouching": 2312,
          "m_OnTouchingEachEntity": 2352,
          "m_bDisabled": 2468,
          "m_bUseAsyncQueries": 2480,
          "m_hFilter": 2464,
          "m_hTouchingEntities": 2432,
          "m_iFilterName": 2456
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_bDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseToggle"
      },
      "CBaseTriggerAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CBeam": {
        "fields": {
          "m_bTurnedOff": 2160,
          "m_fAmplitude": 2140,
          "m_fEndWidth": 2128,
          "m_fFadeLength": 2132,
          "m_fHaloScale": 2136,
          "m_fSpeed": 2148,
          "m_fStartFrame": 2144,
          "m_fWidth": 2124,
          "m_flDamage": 2036,
          "m_flFireTime": 2032,
          "m_flFrame": 2152,
          "m_flFrameRate": 2024,
          "m_flHDRColorScale": 2028,
          "m_hAttachEntity": 2072,
          "m_hBaseMaterial": 2048,
          "m_hEndEntity": 2176,
          "m_nAttachIndex": 2112,
          "m_nBeamFlags": 2068,
          "m_nBeamType": 2064,
          "m_nClipStyle": 2156,
          "m_nDissolveType": 2180,
          "m_nHaloIndex": 2056,
          "m_nNumBeamEnts": 2040,
          "m_vecEndPos": 2164
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "m_flFrameRate",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flHDRColorScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nNumBeamEnts",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_hBaseMaterial",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_nHaloIndex",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_nBeamType",
            "type": "NetworkVarNames",
            "type_name": "BeamType_t"
          },
          {
            "name": "m_nBeamFlags",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_hAttachEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_nAttachIndex",
            "type": "NetworkVarNames",
            "type_name": "AttachmentHandle_t"
          },
          {
            "name": "m_fWidth",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fEndWidth",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fFadeLength",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fHaloScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fAmplitude",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fStartFrame",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_fSpeed",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFrame",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nClipStyle",
            "type": "NetworkVarNames",
            "type_name": "BeamClipStyle_t"
          },
          {
            "name": "m_bTurnedOff",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vecEndPos",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CBlood": {
        "fields": {
          "m_Color": 1292,
          "m_flAmount": 1288,
          "m_vecSprayAngles": 1264,
          "m_vecSprayDir": 1276
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CBodyComponent": {
        "fields": {
          "__m_pChainEntity": 72,
          "m_pSceneNode": 8
        },
        "metadata": [],
        "parent": "CEntityComponent"
      },
      "CBodyComponentBaseAnimGraph": {
        "fields": {
          "m_animationController": 1296
        },
        "metadata": [
          {
            "name": "m_animationController",
            "type": "NetworkVarNames",
            "type_name": "CBaseAnimGraphController"
          }
        ],
        "parent": "CBodyComponentSkeletonInstance"
      },
      "CBodyComponentBaseModelEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBodyComponentSkeletonInstance"
      },
      "CBodyComponentPoint": {
        "fields": {
          "m_sceneNode": 128
        },
        "metadata": [
          {
            "name": "m_sceneNode",
            "type": "NetworkVarNames",
            "type_name": "CGameSceneNode"
          }
        ],
        "parent": "CBodyComponent"
      },
      "CBodyComponentSkeletonInstance": {
        "fields": {
          "m_skeletonInstance": 128
        },
        "metadata": [
          {
            "name": "m_skeletonInstance",
            "type": "NetworkVarNames",
            "type_name": "CSkeletonInstance"
          }
        ],
        "parent": "CBodyComponent"
      },
      "CBombTarget": {
        "fields": {
          "m_OnBombDefused": 2568,
          "m_OnBombExplode": 2488,
          "m_OnBombPlanted": 2528,
          "m_bBombPlantedHere": 2610,
          "m_bIsBombSiteB": 2608,
          "m_bIsHeistBombTarget": 2609,
          "m_hInstructorHint": 2624,
          "m_nBombSiteDesignation": 2628,
          "m_szMountTarget": 2616
        },
        "metadata": [
          {
            "name": "m_bBombPlantedHere",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CBot": {
        "fields": {
          "m_bHasSpawned": 32,
          "m_buttonFlags": 208,
          "m_forwardSpeed": 196,
          "m_id": 36,
          "m_isCrouching": 193,
          "m_isRunning": 192,
          "m_jumpTimestamp": 216,
          "m_leftSpeed": 200,
          "m_pController": 16,
          "m_pPlayer": 24,
          "m_postureStackIndex": 248,
          "m_verticalSpeed": 204,
          "m_viewForward": 220
        },
        "metadata": [],
        "parent": ""
      },
      "CBreakable": {
        "fields": {
          "m_CPropDataComponent": 2032,
          "m_Explosion": 2104,
          "m_Material": 2096,
          "m_OnBreak": 2144,
          "m_OnHealthChanged": 2184,
          "m_PerformanceMode": 2224,
          "m_flLastPhysicsInfluenceTime": 2232,
          "m_flPressureDelay": 2120,
          "m_hBreaker": 2100,
          "m_hPhysicsAttacker": 2228,
          "m_iMinHealthDmg": 2124,
          "m_impactEnergyScale": 2136,
          "m_iszPropData": 2128,
          "m_iszSpawnObject": 2112,
          "m_nOverrideBlockLOS": 2140
        },
        "metadata": [
          {
            "name": "m_CPropDataComponent",
            "type": "NetworkVarNames",
            "type_name": "CPropDataComponent::Storage_t"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CBreakableProp": {
        "fields": {
          "m_BreakableContentsType": 3020,
          "m_CPropDataComponent": 2744,
          "m_OnBreak": 2848,
          "m_OnHealthChanged": 2888,
          "m_OnStartDeath": 2808,
          "m_OnTakeDamage": 2928,
          "m_PerformanceMode": 3012,
          "m_bHasBreakPiecesOrCommands": 3040,
          "m_bOriginalBlockLOS": 3121,
          "m_bUsePuntSound": 3120,
          "m_explodeDamage": 3044,
          "m_explodeRadius": 3048,
          "m_explosionBuildupSound": 3064,
          "m_explosionCustomEffect": 3072,
          "m_explosionCustomSound": 3080,
          "m_explosionDelay": 3056,
          "m_explosionModifier": 3088,
          "m_flDefBurstScale": 2992,
          "m_flDefaultFadeScale": 3104,
          "m_flLastPhysicsInfluenceTime": 3100,
          "m_flPressureDelay": 2988,
          "m_flPreventDamageBeforeTime": 3016,
          "m_hBreaker": 3008,
          "m_hLastAttacker": 3108,
          "m_hPhysicsAttacker": 3096,
          "m_iMinHealthDmg": 2972,
          "m_impactEnergyScale": 2968,
          "m_iszPuntSound": 3112,
          "m_preferredCarryAngles": 2976,
          "m_strBreakableContentsParticleOverride": 3032,
          "m_strBreakableContentsPropGroupOverride": 3024,
          "m_vDefBurstOffset": 2996
        },
        "metadata": [
          {
            "name": "m_CPropDataComponent",
            "type": "NetworkVarNames",
            "type_name": "CPropDataComponent::Storage_t"
          }
        ],
        "parent": "CBaseProp"
      },
      "CBtActionAim": {
        "fields": {
          "m_AimTimer": 168,
          "m_FocusIntervalTimer": 216,
          "m_NextLookTarget": 156,
          "m_SniperHoldTimer": 192,
          "m_bAcquired": 240,
          "m_bDoneAiming": 140,
          "m_flLerpStartTime": 144,
          "m_flNextLookTargetLerpTime": 148,
          "m_flPenaltyReductionRatio": 152,
          "m_flZoomCooldownTimestamp": 136,
          "m_szAimReadyKey": 128,
          "m_szSensorInputKey": 104
        },
        "metadata": [],
        "parent": null
      },
      "CBtActionCombatPositioning": {
        "fields": {
          "m_ActionTimer": 136,
          "m_bCrouching": 160,
          "m_szIsAttackingKey": 128,
          "m_szSensorInputKey": 104
        },
        "metadata": [],
        "parent": null
      },
      "CBtActionMoveTo": {
        "fields": {
          "m_CheckApproximateCornersTimer": 144,
          "m_CheckHighPriorityItem": 168,
          "m_RepathTimer": 192,
          "m_bAutoLookAdjust": 132,
          "m_bComputePath": 133,
          "m_flAdditionalArrivalEpsilon2D": 220,
          "m_flArrivalEpsilon": 216,
          "m_flDamagingAreasPenaltyCost": 136,
          "m_flHidingSpotCheckDistanceThreshold": 224,
          "m_flNearestAreaDistanceThreshold": 228,
          "m_szDestinationInputKey": 96,
          "m_szHidingSpotInputKey": 104,
          "m_szThreatInputKey": 112,
          "m_vecDestination": 120
        },
        "metadata": [],
        "parent": null
      },
      "CBtActionParachutePositioning": {
        "fields": {
          "m_ActionTimer": 88
        },
        "metadata": [],
        "parent": null
      },
      "CBtNodeCondition": {
        "fields": {
          "m_bNegated": 88
        },
        "metadata": [],
        "parent": null
      },
      "CBtNodeConditionInactive": {
        "fields": {
          "m_SensorInactivityTimer": 128,
          "m_flRoundStartThresholdSeconds": 120,
          "m_flSensorInactivityThresholdSeconds": 124
        },
        "metadata": [],
        "parent": null
      },
      "CBuoyancyHelper": {
        "fields": {
          "m_bNeutrallyBuoyant": 44,
          "m_flFluidDensity": 28,
          "m_flNeutrallyBuoyantAngularDamping": 40,
          "m_flNeutrallyBuoyantGravity": 32,
          "m_flNeutrallyBuoyantLinearDamping": 36,
          "m_nFluidType": 24,
          "m_vecFractionOfWheelSubmergedForWheelDrag": 96,
          "m_vecFractionOfWheelSubmergedForWheelFriction": 48,
          "m_vecWheelDrag": 120,
          "m_vecWheelFrictionScales": 72
        },
        "metadata": [],
        "parent": ""
      },
      "CBuyZone": {
        "fields": {
          "m_LegacyTeamNum": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CC4": {
        "fields": {
          "m_bBombPlacedAnimation": 4232,
          "m_bBombPlanted": 4275,
          "m_bDoValidDroppedPositionCheck": 4224,
          "m_bIsPlantingViaUse": 4233,
          "m_bPlayedArmingBeeps": 4268,
          "m_bStartedArming": 4225,
          "m_entitySpottedState": 4240,
          "m_fArmedTime": 4228,
          "m_nSpotRules": 4264,
          "m_vecLastValidDroppedPosition": 4212,
          "m_vecLastValidPlayerHeldPosition": 4200
        },
        "metadata": [
          {
            "name": "m_bStartedArming",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fArmedTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bBombPlacedAnimation",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsPlantingViaUse",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_entitySpottedState",
            "type": "NetworkVarNames",
            "type_name": "EntitySpottedState_t"
          }
        ],
        "parent": "CCSWeaponBase"
      },
      "CCSBot": {
        "fields": {
          "m_aimError": 26832,
          "m_aimFocus": 26860,
          "m_aimFocusInterval": 26864,
          "m_aimFocusNextUpdate": 26868,
          "m_aimGoal": 26844,
          "m_alertTimer": 464,
          "m_allowAutoFollowTime": 436,
          "m_approachPointCount": 25640,
          "m_approachPointViewPosition": 25644,
          "m_areaEnteredTimestamp": 24092,
          "m_attackedTimestamp": 27508,
          "m_attacker": 27504,
          "m_attentionInterval": 27488,
          "m_avgVel": 27876,
          "m_avgVelCount": 27920,
          "m_avgVelIndex": 27916,
          "m_avoid": 1276,
          "m_avoidFriendTimer": 24120,
          "m_avoidTimestamp": 1280,
          "m_bAllowActive": 424,
          "m_bEyeAnglesUnderPathFinderControl": 1304,
          "m_bIsSleeping": 27608,
          "m_bendNoisePositionValid": 25180,
          "m_bentNoisePosition": 25168,
          "m_blindFire": 396,
          "m_bomber": 27472,
          "m_burnedByFlamesTimer": 27512,
          "m_checkedHidingSpotCount": 26776,
          "m_closestVisibleFriend": 27480,
          "m_closestVisibleHumanFriend": 27484,
          "m_combatRange": 340,
          "m_currentEnemyAcquireTimestamp": 26932,
          "m_desiredTeam": 25040,
          "m_diedLastRound": 380,
          "m_enemy": 26904,
          "m_enemyDeathTimestamp": 26936,
          "m_enemyQueueAttendIndex": 27802,
          "m_enemyQueueCount": 27801,
          "m_enemyQueueIndex": 27800,
          "m_equipTimer": 27536,
          "m_eyePosition": 264,
          "m_fireWeaponTimestamp": 27576,
          "m_firstSawEnemyTimestamp": 26928,
          "m_followTimestamp": 432,
          "m_forwardAngle": 25192,
          "m_friendDeathTimestamp": 26940,
          "m_goalEntity": 1272,
          "m_goalPosition": 1260,
          "m_hasJoined": 25044,
          "m_hasVisitedEnemySpawn": 1285,
          "m_hostageEscortCount": 25032,
          "m_hostageEscortCountTimestamp": 25036,
          "m_hurryTimer": 440,
          "m_ignoreEnemiesTimer": 26880,
          "m_inhibitLookAroundTimestamp": 25196,
          "m_inhibitWaitingForHostageTimer": 25048,
          "m_isAimingAtEnemy": 27532,
          "m_isAttacking": 1236,
          "m_isAvoidingGrenade": 25712,
          "m_isEnemySniperVisible": 27609,
          "m_isEnemyVisible": 26908,
          "m_isFollowing": 425,
          "m_isFriendInTheWay": 24144,
          "m_isLastEnemyDead": 26944,
          "m_isOpeningDoor": 1237,
          "m_isRapidFiring": 27533,
          "m_isRogue": 344,
          "m_isStopping": 1284,
          "m_isStuck": 27803,
          "m_isWaitingBehindFriend": 24176,
          "m_isWaitingForHostage": 25045,
          "m_lastEnemyPosition": 26912,
          "m_lastOrigin": 27924,
          "m_lastRadioRecievedTimestamp": 27940,
          "m_lastRadioSentTimestamp": 27944,
          "m_lastSawEnemyTimestamp": 26924,
          "m_lastValidReactionQueueFrame": 27976,
          "m_lastVictimID": 27528,
          "m_leader": 428,
          "m_lookAheadAngle": 25188,
          "m_lookAroundStateTimestamp": 25184,
          "m_lookAtDesc": 25240,
          "m_lookAtSpot": 25204,
          "m_lookAtSpotAngleTolerance": 25228,
          "m_lookAtSpotAttack": 25233,
          "m_lookAtSpotClearIfClose": 25232,
          "m_lookAtSpotDuration": 25220,
          "m_lookAtSpotTimestamp": 25224,
          "m_lookForWeaponsOnGroundTimer": 27584,
          "m_lookPitch": 26780,
          "m_lookPitchVel": 26784,
          "m_lookYaw": 26788,
          "m_lookYawVel": 26792,
          "m_mustRunTimer": 24296,
          "m_name": 276,
          "m_nearbyEnemyCount": 26948,
          "m_nearbyFriendCount": 27476,
          "m_nextCleanupCheckTimestamp": 27872,
          "m_noiseBendTimer": 25144,
          "m_noisePosition": 25096,
          "m_noiseSource": 25120,
          "m_noiseTimestamp": 25112,
          "m_noiseTravelDistance": 25108,
          "m_panicTimer": 512,
          "m_pathIndex": 24088,
          "m_pathLadderEnd": 24220,
          "m_peripheralTimestamp": 25248,
          "m_playerTravelDistance": 24368,
          "m_politeTimer": 24152,
          "m_radioPosition": 27952,
          "m_radioSubject": 27948,
          "m_repathTimer": 24096,
          "m_rogueTimer": 352,
          "m_safeTime": 384,
          "m_sawEnemySniperTimer": 27616,
          "m_sneakTimer": 488,
          "m_spotCheckTimestamp": 25744,
          "m_stateTimestamp": 1232,
          "m_stillTimer": 1288,
          "m_stuckJumpTimer": 27848,
          "m_stuckSpot": 27808,
          "m_stuckTimestamp": 27804,
          "m_surpriseTimer": 400,
          "m_targetSpot": 26796,
          "m_targetSpotPredicted": 26820,
          "m_targetSpotTime": 26856,
          "m_targetSpotVelocity": 26808,
          "m_taskEntity": 1244,
          "m_tossGrenadeTimer": 25680,
          "m_travelDistancePhase": 24624,
          "m_updateTravelDistanceTimer": 24344,
          "m_viewSteadyTimer": 25656,
          "m_visibleEnemyParts": 26909,
          "m_voiceEndTimestamp": 27964,
          "m_waitForHostageTimer": 25072,
          "m_waitTimer": 24320,
          "m_wasSafe": 388,
          "m_wiggleTimer": 27824,
          "m_zoomTimer": 27552
        },
        "metadata": [],
        "parent": "CBot"
      },
      "CCSGO_TeamIntroCharacterPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamPreviewCharacterPosition"
      },
      "CCSGO_TeamIntroCounterTerroristPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamIntroCharacterPosition"
      },
      "CCSGO_TeamIntroTerroristPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamIntroCharacterPosition"
      },
      "CCSGO_TeamPreviewCharacterPosition": {
        "fields": {
          "m_agentItem": 1296,
          "m_glovesItem": 1976,
          "m_nOrdinal": 1272,
          "m_nRandom": 1268,
          "m_nVariant": 1264,
          "m_sWeaponName": 1280,
          "m_weaponItem": 2656,
          "m_xuid": 1288
        },
        "metadata": [
          {
            "name": "m_nVariant",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nRandom",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nOrdinal",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_sWeaponName",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_xuid",
            "type": "NetworkVarNames",
            "type_name": "XUID"
          },
          {
            "name": "m_agentItem",
            "type": "NetworkVarNames",
            "type_name": "CEconItemView"
          },
          {
            "name": "m_glovesItem",
            "type": "NetworkVarNames",
            "type_name": "CEconItemView"
          },
          {
            "name": "m_weaponItem",
            "type": "NetworkVarNames",
            "type_name": "CEconItemView"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CCSGO_TeamSelectCharacterPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamPreviewCharacterPosition"
      },
      "CCSGO_TeamSelectCounterTerroristPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamSelectCharacterPosition"
      },
      "CCSGO_TeamSelectTerroristPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamSelectCharacterPosition"
      },
      "CCSGO_WingmanIntroCharacterPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_TeamIntroCharacterPosition"
      },
      "CCSGO_WingmanIntroCounterTerroristPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_WingmanIntroCharacterPosition"
      },
      "CCSGO_WingmanIntroTerroristPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CCSGO_WingmanIntroCharacterPosition"
      },
      "CCSGameModeRules": {
        "fields": {
          "__m_pChainEntity": 8
        },
        "metadata": [],
        "parent": null
      },
      "CCSGameModeRules_ArmsRace": {
        "fields": {
          "m_WeaponSequence": 48
        },
        "metadata": [
          {
            "name": "m_WeaponSequence",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          }
        ],
        "parent": null
      },
      "CCSGameModeRules_Deathmatch": {
        "fields": {
          "m_flDMBonusStartTime": 48,
          "m_flDMBonusTimeLength": 52,
          "m_sDMBonusWeapon": 56
        },
        "metadata": [
          {
            "name": "m_flDMBonusStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flDMBonusTimeLength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_sDMBonusWeapon",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          }
        ],
        "parent": null
      },
      "CCSGameModeRules_Noop": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CCSGameRules": {
        "fields": {
          "mTeamDMLastThinkTime": 3684,
          "mTeamDMLastWinningTeamNumber": 3680,
          "m_BtGlobalBlackboard": 4240,
          "m_CTSpawnPoints": 3992,
          "m_CTSpawnPointsMasterList": 3920,
          "m_MatchDevice": 304,
          "m_MinimapVerticalSectionHeights": 3260,
          "m_RetakeRules": 4400,
          "m_TeamRespawnWaveTimes": 2980,
          "m_TerroristSpawnPoints": 4016,
          "m_TerroristSpawnPointsMasterList": 3944,
          "m_arrProhibitedItemIndices": 2380,
          "m_arrSelectedHostageSpawnIndices": 3472,
          "m_arrTeamUniqueKillWeaponsMatch": 4808,
          "m_arrTournamentActiveCasterAccounts": 2580,
          "m_bAllowWeaponSwitch": 4104,
          "m_bAnyHostageReached": 284,
          "m_bBombDefused": 3825,
          "m_bBombDropped": 2604,
          "m_bBombPlanted": 2605,
          "m_bBuyTimeEnded": 3816,
          "m_bCTCantBuy": 2617,
          "m_bCTTimeOutActive": 213,
          "m_bCanDonateWeapons": 3751,
          "m_bCompleteReset": 3501,
          "m_bFirstConnected": 3500,
          "m_bForceTeamChangeSilent": 3592,
          "m_bFreezePeriod": 200,
          "m_bGameRestart": 252,
          "m_bHasHostageBeenTouched": 3424,
          "m_bHasMatchStarted": 308,
          "m_bHasTriggeredRoundStartMusic": 4204,
          "m_bIsDroppingItems": 2376,
          "m_bIsHltvActive": 2378,
          "m_bIsQuestEligible": 2377,
          "m_bIsQueuedMatchmaking": 288,
          "m_bIsUnreservedGameServer": 4040,
          "m_bIsValveDS": 296,
          "m_bLevelInitialized": 3436,
          "m_bLoadingRoundBackupData": 3593,
          "m_bLogoMap": 297,
          "m_bMapHasBombTarget": 285,
          "m_bMapHasBombZone": 3826,
          "m_bMapHasBuyZone": 287,
          "m_bMapHasRescueZone": 286,
          "m_bMatchWaitingForResume": 233,
          "m_bNeedToAskPlayersForContinueVote": 3540,
          "m_bNoCTsKilled": 3749,
          "m_bNoEnemiesKilled": 3750,
          "m_bNoTerroristsKilled": 3748,
          "m_bPickNewTeamsOnReset": 3502,
          "m_bPlayAllStepSoundsOnServer": 298,
          "m_bPlayedTeamIntroVO": 4964,
          "m_bRespawningAllRespawnablePlayers": 3968,
          "m_bRoundEndNoMusic": 5020,
          "m_bRoundEndShowTimerDefend": 4976,
          "m_bRoundTimeWarningTriggered": 4105,
          "m_bScrambleTeamsOnRestart": 3503,
          "m_bServerVoteOnReset": 3809,
          "m_bSwapTeamsOnRestart": 3504,
          "m_bSwitchingTeamsAtRoundReset": 4205,
          "m_bTCantBuy": 2616,
          "m_bTargetBombed": 3824,
          "m_bTeamIntroPeriod": 4956,
          "m_bTeamLastKillUsedUniqueWeaponMatch": 4904,
          "m_bTechnicalTimeOut": 232,
          "m_bTerroristTimeOutActive": 212,
          "m_bVoiceWonMatchBragFired": 3724,
          "m_bVoteCalled": 3808,
          "m_bWarmupPeriod": 201,
          "m_eRoundEndReason": 4972,
          "m_eRoundWinReason": 2612,
          "m_endMatchOnRoundReset": 3448,
          "m_endMatchOnThink": 3449,
          "m_fAccumulatedRoundOffDamage": 4120,
          "m_fAutobalanceDisplayTime": 4044,
          "m_fAvgPlayerRank": 3548,
          "m_fMatchStartTime": 240,
          "m_fNextUpdateTeamClanNamesTime": 4112,
          "m_fRoundStartTime": 244,
          "m_fTeamIntroPeriodEnd": 4960,
          "m_fWarmupNextChatNoticeTime": 3728,
          "m_fWarmupPeriodEnd": 204,
          "m_fWarmupPeriodStart": 208,
          "m_firstBloodTime": 3764,
          "m_firstKillTime": 3756,
          "m_flCMMItemDropRevealEndTime": 2372,
          "m_flCMMItemDropRevealStartTime": 2368,
          "m_flCTSpawnPointUsedTime": 3976,
          "m_flCTTimeOutRemaining": 220,
          "m_flGameStartTime": 256,
          "m_flIntermissionEndTime": 3432,
          "m_flIntermissionStartTime": 3428,
          "m_flLastPerfSampleTime": 21432,
          "m_flLastThinkTime": 4116,
          "m_flMatchInfoDecidedTime": 3652,
          "m_flNextHostageAnnouncement": 3744,
          "m_flNextRespawnWave": 3108,
          "m_flRestartRoundTime": 248,
          "m_flTeamDMLastAnnouncementTime": 3688,
          "m_flTerroristSpawnPointUsedTime": 3984,
          "m_flTerroristTimeOutRemaining": 216,
          "m_flVoteCheckThrottle": 3812,
          "m_gamePhase": 264,
          "m_hPlayerResource": 4392,
          "m_hostageWasInjured": 3792,
          "m_hostageWasKilled": 3793,
          "m_iAccountCT": 3696,
          "m_iAccountTerrorist": 3692,
          "m_iFreezeTime": 3452,
          "m_iHostagesRemaining": 280,
          "m_iHostagesRescued": 3736,
          "m_iHostagesTouched": 3740,
          "m_iLoserBonusMostRecentTeam": 3716,
          "m_iMatchStats_PlayersAlive_CT": 2740,
          "m_iMatchStats_PlayersAlive_T": 2860,
          "m_iMatchStats_RoundResults": 2620,
          "m_iMaxNumCTs": 3712,
          "m_iMaxNumTerrorists": 3708,
          "m_iNextCTSpawnPoint": 3972,
          "m_iNextTerroristSpawnPoint": 3980,
          "m_iNumCT": 3460,
          "m_iNumConsecutiveCTLoses": 3388,
          "m_iNumConsecutiveTerroristLoses": 3392,
          "m_iNumSpawnableCT": 3468,
          "m_iNumSpawnableTerrorist": 3464,
          "m_iNumTerrorist": 3456,
          "m_iRoundEndFunFactData1": 4996,
          "m_iRoundEndFunFactData2": 5000,
          "m_iRoundEndFunFactData3": 5004,
          "m_iRoundEndFunFactPlayerSlot": 4992,
          "m_iRoundEndLegacy": 5024,
          "m_iRoundEndPlayerCount": 5016,
          "m_iRoundEndTimerTime": 4980,
          "m_iRoundEndWinnerTeam": 4968,
          "m_iRoundStartRoundNumber": 5032,
          "m_iRoundTime": 236,
          "m_iRoundWinStatus": 2608,
          "m_iSpawnPointCount_CT": 3704,
          "m_iSpawnPointCount_Terrorist": 3700,
          "m_iSpectatorSlotCount": 300,
          "m_iTotalRoundsPlayed": 3440,
          "m_iUnBalancedRounds": 3444,
          "m_nCTTeamIntroVariant": 4952,
          "m_nCTTimeOuts": 228,
          "m_nCTsAliveAtFreezetimeEnd": 3584,
          "m_nEndMatchMapGroupVoteOptions": 3344,
          "m_nEndMatchMapGroupVoteTypes": 3304,
          "m_nEndMatchMapVoteWinner": 3384,
          "m_nEndMatchTiedVotes": 3512,
          "m_nHalloweenMaskListSeed": 2600,
          "m_nLastFreezeEndBeep": 3820,
          "m_nMatchAbortedEarlyReason": 4200,
          "m_nMatchEndCount": 4944,
          "m_nMatchInfoShowType": 3648,
          "m_nNextMapInMapgroup": 312,
          "m_nOvertimePlaying": 276,
          "m_nQueuedMatchmakingMode": 292,
          "m_nRoundEndCount": 5028,
          "m_nRoundStartCount": 5036,
          "m_nRoundsPlayedThisPhase": 272,
          "m_nShorthandedBonusLastEvalRound": 4124,
          "m_nSpawnPointsRandomSeed": 3496,
          "m_nTTeamIntroVariant": 4948,
          "m_nTerroristTimeOuts": 224,
          "m_nTerroristsAliveAtFreezetimeEnd": 3588,
          "m_nTournamentPredictionsPct": 2364,
          "m_numBestOfMaps": 2596,
          "m_numQueuedMatchmakingAccounts": 3544,
          "m_numSpectatorsCountMax": 3564,
          "m_numSpectatorsCountMaxLnk": 3572,
          "m_numSpectatorsCountMaxTV": 3568,
          "m_numTotalTournamentDrops": 3560,
          "m_pGameModeRules": 4232,
          "m_pQueuedMatchmakingReservationString": 3552,
          "m_phaseChangeAnnouncementTime": 4108,
          "m_sRoundEndFunFactToken": 4984,
          "m_sRoundEndMessage": 5008,
          "m_szMatchStatTxt": 1340,
          "m_szTournamentEventName": 316,
          "m_szTournamentEventStage": 828,
          "m_szTournamentPredictionsTxt": 1852,
          "m_timeUntilNextPhaseStarts": 260,
          "m_tmNextPeriodicThink": 3720,
          "m_totalRoundsPlayed": 268,
          "m_ullLocalMatchID": 3296,
          "m_vMinimapMaxs": 3248,
          "m_vMinimapMins": 3236,
          "m_vecMainCTSpawnPos": 3904
        },
        "metadata": [
          {
            "name": "m_bFreezePeriod",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bWarmupPeriod",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fWarmupPeriodEnd",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_fWarmupPeriodStart",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bTerroristTimeOutActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bCTTimeOutActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flTerroristTimeOutRemaining",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flCTTimeOutRemaining",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nTerroristTimeOuts",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nCTTimeOuts",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bTechnicalTimeOut",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMatchWaitingForResume",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRoundTime",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_fMatchStartTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fRoundStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flRestartRoundTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bGameRestart",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flGameStartTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_timeUntilNextPhaseStarts",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_gamePhase",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_totalRoundsPlayed",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nRoundsPlayedThisPhase",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nOvertimePlaying",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iHostagesRemaining",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bAnyHostageReached",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMapHasBombTarget",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMapHasRescueZone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMapHasBuyZone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsQueuedMatchmaking",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nQueuedMatchmakingMode",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bIsValveDS",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bLogoMap",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bPlayAllStepSoundsOnServer",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iSpectatorSlotCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_MatchDevice",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bHasMatchStarted",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nNextMapInMapgroup",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_szTournamentEventName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_szTournamentEventStage",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_szMatchStatTxt",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_szTournamentPredictionsTxt",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_nTournamentPredictionsPct",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flCMMItemDropRevealStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flCMMItemDropRevealEndTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bIsDroppingItems",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsQuestEligible",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsHltvActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_arrProhibitedItemIndices",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_arrTournamentActiveCasterAccounts",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_numBestOfMaps",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nHalloweenMaskListSeed",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bBombDropped",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bBombPlanted",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRoundWinStatus",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_eRoundWinReason",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bTCantBuy",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bCTCantBuy",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iMatchStats_RoundResults",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMatchStats_PlayersAlive_CT",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMatchStats_PlayersAlive_T",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_TeamRespawnWaveTimes",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flNextRespawnWave",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_vMinimapMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vMinimapMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_MinimapVerticalSectionHeights",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nEndMatchMapGroupVoteTypes",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nEndMatchMapGroupVoteOptions",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nEndMatchMapVoteWinner",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iNumConsecutiveCTLoses",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iNumConsecutiveTerroristLoses",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMatchAbortedEarlyReason",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_pGameModeRules",
            "type": "NetworkVarNames",
            "type_name": "CCSGameModeRules*"
          },
          {
            "name": "m_RetakeRules",
            "type": "NetworkVarNames",
            "type_name": "CRetakeGameRules"
          },
          {
            "name": "m_nMatchEndCount",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nTTeamIntroVariant",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nCTTeamIntroVariant",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bTeamIntroPeriod",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRoundEndWinnerTeam",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_eRoundEndReason",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bRoundEndShowTimerDefend",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRoundEndTimerTime",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_sRoundEndFunFactToken",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_iRoundEndFunFactPlayerSlot",
            "type": "NetworkVarNames",
            "type_name": "CPlayerSlot"
          },
          {
            "name": "m_iRoundEndFunFactData1",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iRoundEndFunFactData2",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iRoundEndFunFactData3",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_sRoundEndMessage",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_iRoundEndPlayerCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bRoundEndNoMusic",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRoundEndLegacy",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nRoundEndCount",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_iRoundStartRoundNumber",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nRoundStartCount",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          }
        ],
        "parent": null
      },
      "CCSGameRulesProxy": {
        "fields": {
          "m_pGameRules": 1264
        },
        "metadata": [
          {
            "name": "m_pGameRules",
            "type": "NetworkVarNames",
            "type_name": "CCSGameRules*"
          }
        ],
        "parent": "CGameRulesProxy"
      },
      "CCSMinimapBoundary": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CCSObserverPawn": {
        "fields": {},
        "metadata": [
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          }
        ],
        "parent": "CCSPlayerPawnBase"
      },
      "CCSObserver_CameraServices": {
        "fields": {},
        "metadata": [],
        "parent": "CCSPlayerBase_CameraServices"
      },
      "CCSObserver_MovementServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayer_MovementServices"
      },
      "CCSObserver_ObserverServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayer_ObserverServices"
      },
      "CCSObserver_UseServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayer_UseServices"
      },
      "CCSPetPlacement": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CCSPlace": {
        "fields": {
          "m_name": 2048
        },
        "metadata": [],
        "parent": "CServerOnlyModelEntity"
      },
      "CCSPlayerBase_CameraServices": {
        "fields": {
          "m_flFOVRate": 380,
          "m_flFOVTime": 376,
          "m_hLastFogTrigger": 416,
          "m_hTriggerFogList": 392,
          "m_hZoomOwner": 384,
          "m_iFOV": 368,
          "m_iFOVStart": 372
        },
        "metadata": [
          {
            "name": "m_iFOV",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iFOVStart",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_flFOVTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flFOVRate",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_hZoomOwner",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          }
        ],
        "parent": "CPlayer_CameraServices"
      },
      "CCSPlayerController": {
        "fields": {
          "m_DesiredObserverMode": 2348,
          "m_LastTeamDamageWarningTime": 2488,
          "m_LastTimePlayerWasDisconnectedForPawnsRemove": 2492,
          "m_bAbandonAllowsSurrender": 2306,
          "m_bAbandonOffersInstantSurrender": 2307,
          "m_bAttemptedToGetColor": 2117,
          "m_bCanControlObservedBot": 2336,
          "m_bCannotBeKicked": 2304,
          "m_bControllingBot": 2328,
          "m_bDisconnection1MinWarningPrinted": 2308,
          "m_bEverFullyConnected": 2305,
          "m_bEverPlayedOnTeam": 2116,
          "m_bFireBulletsSeedSynchronized": 2665,
          "m_bGaveTeamDamageWarning": 2474,
          "m_bGaveTeamDamageWarningThisRound": 2475,
          "m_bHasBeenControlledByPlayerThisRound": 2330,
          "m_bHasCommunicationAbuseMute": 2084,
          "m_bHasControlledBotThisRound": 2329,
          "m_bHasSeenJoinGame": 2126,
          "m_bInSwitchTeam": 2125,
          "m_bJustBecameSpectator": 2127,
          "m_bJustDidTeamKill": 2472,
          "m_bMvpNoMusic": 2410,
          "m_bPawnHasDefuser": 2368,
          "m_bPawnHasHelmet": 2369,
          "m_bPawnIsAlive": 2356,
          "m_bPunishForTeamKill": 2473,
          "m_bRemoveAllItemsOnNextRoundReset": 2129,
          "m_bScoreReported": 2309,
          "m_bShowHints": 2464,
          "m_bSwitchTeamsOnNextRoundReset": 2128,
          "m_bTeamChanged": 2124,
          "m_dblLastReceivedPacketPlatFloatTime": 2480,
          "m_eMvpReason": 2412,
          "m_eNetworkDisconnectionReason": 2300,
          "m_flForceTeamTime": 2108,
          "m_flLastJoinTeamTime": 2132,
          "m_flSmoothedPing": 2432,
          "m_hDesiredObserverTarget": 2352,
          "m_hObserverPawn": 2344,
          "m_hOriginalControllerOfCurrentPawn": 2384,
          "m_hPlayerPawn": 2340,
          "m_iCoachingTeam": 2176,
          "m_iCompTeammateColor": 2112,
          "m_iCompetitiveRankType": 2208,
          "m_iCompetitiveRanking": 2200,
          "m_iCompetitiveRankingPredicted_Loss": 2216,
          "m_iCompetitiveRankingPredicted_Tie": 2220,
          "m_iCompetitiveRankingPredicted_Win": 2212,
          "m_iCompetitiveWins": 2204,
          "m_iDraftIndex": 2288,
          "m_iMVPs": 2424,
          "m_iMusicKitID": 2416,
          "m_iMusicKitMVPs": 2420,
          "m_iNextTimeCheck": 2468,
          "m_iPawnArmor": 2364,
          "m_iPawnBotDifficulty": 2380,
          "m_iPawnHealth": 2360,
          "m_iPawnLifetimeEnd": 2376,
          "m_iPawnLifetimeStart": 2372,
          "m_iPendingTeamNum": 2104,
          "m_iPing": 2080,
          "m_iRoundScore": 2392,
          "m_iRoundsWon": 2396,
          "m_iScore": 2388,
          "m_iTeammatePreferredColor": 2120,
          "m_lastHeldVoteTimer": 2440,
          "m_msQueuedModeDisconnectionTimestamp": 2292,
          "m_nBotsControlledThisRound": 2332,
          "m_nDisconnectionTick": 2312,
          "m_nEndMatchNextMapVote": 2224,
          "m_nFirstKill": 2408,
          "m_nKillCount": 2409,
          "m_nNonSuspiciousHitStreak": 2500,
          "m_nPawnCharacterDefIndex": 2370,
          "m_nPlayerDominated": 2184,
          "m_nPlayerDominatingMe": 2192,
          "m_nQuestProgressReason": 2236,
          "m_nSuspiciousHitCount": 2496,
          "m_nUpdateCounter": 2428,
          "m_pActionTrackingServices": 2064,
          "m_pDamageServices": 2072,
          "m_pInGameMoneyServices": 2048,
          "m_pInventoryServices": 2056,
          "m_recentKillQueue": 2400,
          "m_rtActiveMissionPeriod": 2232,
          "m_szClan": 2136,
          "m_szClanName": 2144,
          "m_szCrosshairCodes": 2096,
          "m_uiAbandonRecordedReason": 2296,
          "m_uiCommunicationMuteFlags": 2088,
          "m_unActiveQuestId": 2228,
          "m_unPlayerTvControlFlags": 2240
        },
        "metadata": [
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "MNetworkUserGroupProxy",
            "type": "Unknown"
          },
          {
            "name": "m_pInGameMoneyServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayerController_InGameMoneyServices*"
          },
          {
            "name": "m_pInventoryServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayerController_InventoryServices*"
          },
          {
            "name": "m_pActionTrackingServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayerController_ActionTrackingServices*"
          },
          {
            "name": "m_pDamageServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayerController_DamageServices*"
          },
          {
            "name": "m_iPing",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_bHasCommunicationAbuseMute",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_uiCommunicationMuteFlags",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_szCrosshairCodes",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iPendingTeamNum",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_flForceTeamTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_iCompTeammateColor",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bEverPlayedOnTeam",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_szClan",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iCoachingTeam",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPlayerDominated",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_nPlayerDominatingMe",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_iCompetitiveRanking",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iCompetitiveWins",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iCompetitiveRankType",
            "type": "NetworkVarNames",
            "type_name": "int8"
          },
          {
            "name": "m_iCompetitiveRankingPredicted_Win",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iCompetitiveRankingPredicted_Loss",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iCompetitiveRankingPredicted_Tie",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nEndMatchNextMapVote",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_unActiveQuestId",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_rtActiveMissionPeriod",
            "type": "NetworkVarNames",
            "type_name": "RTime32"
          },
          {
            "name": "m_nQuestProgressReason",
            "type": "NetworkVarNames",
            "type_name": "QuestProgress::Reason"
          },
          {
            "name": "m_unPlayerTvControlFlags",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nDisconnectionTick",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bControllingBot",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bHasControlledBotThisRound",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bCanControlObservedBot",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_hPlayerPawn",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_hObserverPawn",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSObserverPawn>"
          },
          {
            "name": "m_bPawnIsAlive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iPawnHealth",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iPawnArmor",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bPawnHasDefuser",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bPawnHasHelmet",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nPawnCharacterDefIndex",
            "type": "NetworkVarNames",
            "type_name": "item_definition_index_t"
          },
          {
            "name": "m_iPawnLifetimeStart",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iPawnLifetimeEnd",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iPawnBotDifficulty",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_hOriginalControllerOfCurrentPawn",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerController>"
          },
          {
            "name": "m_iScore",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_recentKillQueue",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nFirstKill",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nKillCount",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_bMvpNoMusic",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_eMvpReason",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMusicKitID",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMusicKitMVPs",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMVPs",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bFireBulletsSeedSynchronized",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBasePlayerController"
      },
      "CCSPlayerController_ActionTrackingServices": {
        "fields": {
          "m_iNumRoundKills": 392,
          "m_iNumRoundKillsHeadshots": 396,
          "m_matchStats": 200,
          "m_perRoundStats": 64,
          "m_unTotalRoundDamageDealt": 400
        },
        "metadata": [
          {
            "name": "m_perRoundStats",
            "type": "NetworkVarNames",
            "type_name": "CSPerRoundStats_t"
          },
          {
            "name": "m_matchStats",
            "type": "NetworkVarNames",
            "type_name": "CSMatchStats_t"
          },
          {
            "name": "m_iNumRoundKills",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iNumRoundKillsHeadshots",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_unTotalRoundDamageDealt",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": "CPlayerControllerComponent"
      },
      "CCSPlayerController_DamageServices": {
        "fields": {
          "m_DamageList": 72,
          "m_nSendUpdate": 64
        },
        "metadata": [
          {
            "name": "m_nSendUpdate",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_DamageList",
            "type": "NetworkVarNames",
            "type_name": "CDamageRecord"
          }
        ],
        "parent": "CPlayerControllerComponent"
      },
      "CCSPlayerController_InGameMoneyServices": {
        "fields": {
          "m_bReceivesMoneyNextRound": 64,
          "m_iAccount": 72,
          "m_iCashSpentThisRound": 84,
          "m_iMoneyEarnedForNextRound": 68,
          "m_iStartAccount": 76,
          "m_iTotalCashSpent": 80
        },
        "metadata": [
          {
            "name": "m_iAccount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iStartAccount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iTotalCashSpent",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iCashSpentThisRound",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CPlayerControllerComponent"
      },
      "CCSPlayerController_InventoryServices": {
        "fields": {
          "m_nPersonaDataPublicCommendsFriendly": 104,
          "m_nPersonaDataPublicCommendsLeader": 96,
          "m_nPersonaDataPublicCommendsTeacher": 100,
          "m_nPersonaDataPublicLevel": 92,
          "m_nPersonaDataXpTrailLevel": 108,
          "m_rank": 68,
          "m_unEquippedPlayerSprayIDs": 3912,
          "m_unMusicID": 64,
          "m_vecServerAuthoritativeWeaponSlots": 3920
        },
        "metadata": [
          {
            "name": "m_unMusicID",
            "type": "NetworkVarNames",
            "type_name": "item_definition_index_t"
          },
          {
            "name": "m_rank",
            "type": "NetworkVarNames",
            "type_name": "MedalRank_t"
          },
          {
            "name": "m_nPersonaDataPublicLevel",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPersonaDataPublicCommendsLeader",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPersonaDataPublicCommendsTeacher",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPersonaDataPublicCommendsFriendly",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPersonaDataXpTrailLevel",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vecServerAuthoritativeWeaponSlots",
            "type": "NetworkVarNames",
            "type_name": "ServerAuthoritativeWeaponSlot_t"
          }
        ],
        "parent": "CPlayerControllerComponent"
      },
      "CCSPlayerPawn": {
        "fields": {
          "m_ArmorValue": 6988,
          "m_EconGloves": 6064,
          "m_GunGameImmunityColor": 7060,
          "m_LastHealth": 6928,
          "m_LastHitBox": 6924,
          "m_PredictedDamageTags": 7184,
          "m_RetakesMVPBoostExtraUtility": 4116,
          "m_TouchingBuyZones": 4072,
          "m_aimPunchAngle": 4128,
          "m_aimPunchAngleVel": 4140,
          "m_aimPunchCache": 4160,
          "m_aimPunchTickBase": 4152,
          "m_aimPunchTickFraction": 4156,
          "m_allowAutoFollowTime": 6808,
          "m_angShootAngleHistory": 7108,
          "m_angStashedShootAngles": 7072,
          "m_bBotAllowActive": 6944,
          "m_bCommittingSuicideOnTeamChange": 7292,
          "m_bGrenadeParametersStashed": 7068,
          "m_bGunGameImmunity": 7300,
          "m_bHasDeathInfo": 7020,
          "m_bHasFemaleVoice": 3858,
          "m_bInBombZone": 4098,
          "m_bInBombZoneTrigger": 6876,
          "m_bInBuyZone": 4065,
          "m_bInHostageRescueZone": 4097,
          "m_bInHostageResetZone": 4064,
          "m_bInNoDefuseArea": 6864,
          "m_bIsBuyMenuOpen": 4184,
          "m_bIsDefusing": 6854,
          "m_bIsGrabbingHostage": 6855,
          "m_bIsScoped": 6852,
          "m_bIsSpawning": 7004,
          "m_bIsWalking": 6784,
          "m_bKilledByHeadshot": 6920,
          "m_bLastHeadBoneTransformIsValid": 5920,
          "m_bLeftHanded": 6761,
          "m_bNextSprayDecalTimeExpedited": 5948,
          "m_bOnGroundLastTick": 5928,
          "m_bRagdollDamageHeadshot": 6044,
          "m_bResetArmorNextSpawn": 6812,
          "m_bResumeZoom": 6853,
          "m_bRetakesHasDefuseKit": 4108,
          "m_bRetakesMVPLastRound": 4109,
          "m_bSkipOneHeadConstraintUpdate": 6760,
          "m_bWaitForNoAttack": 6912,
          "m_bWasInBombZoneTrigger": 6877,
          "m_bWasInBuyZone": 4096,
          "m_bWasInHostageRescueZone": 4099,
          "m_entitySpottedState": 6824,
          "m_fImmuneToGunGameDamageTime": 7296,
          "m_fLastGivenBombTime": 6792,
          "m_fLastGivenDefuserTime": 6788,
          "m_fMolotovDamageTime": 7304,
          "m_fSwitchedHandednessTime": 6764,
          "m_flDealtDamageToEnemyMostRecentTimestamp": 6796,
          "m_flDeathInfoTime": 7024,
          "m_flEmitSoundTime": 6860,
          "m_flFlinchStack": 6884,
          "m_flHealthShotBoostExpirationTime": 4120,
          "m_flHitHeading": 6892,
          "m_flLandingTimeSeconds": 4124,
          "m_flLastAttackedTeammate": 6804,
          "m_flLastPickupPriorityTime": 6984,
          "m_flNextSprayDecalTime": 5944,
          "m_flSlopeDropHeight": 6964,
          "m_flSlopeDropOffset": 6960,
          "m_flTimeOfLastInjury": 5940,
          "m_flVelocityModifier": 6888,
          "m_flViewmodelFOV": 6780,
          "m_flViewmodelOffsetX": 6768,
          "m_flViewmodelOffsetY": 6772,
          "m_flViewmodelOffsetZ": 6776,
          "m_grenadeParameterStashTime": 7064,
          "m_iBlockingUseActionInProgress": 6856,
          "m_iBombSiteIndex": 6868,
          "m_iDeathFlags": 7016,
          "m_iDisplayHistoryBits": 6800,
          "m_iLastWeaponFireUsercmd": 7000,
          "m_iPlayerLocked": 5932,
          "m_iRetakesMVPBoostItem": 4112,
          "m_iRetakesOffering": 4100,
          "m_iRetakesOfferingCard": 4104,
          "m_iShotsFired": 6880,
          "m_ignoreLadderJumpTime": 6916,
          "m_lastLandTime": 5924,
          "m_nCharacterDefIndex": 3856,
          "m_nEconGlovesChanged": 6744,
          "m_nHighestAppliedDamageTagTick": 7288,
          "m_nHitBodyPart": 6896,
          "m_nLastKillerIndex": 6816,
          "m_nLastPickupPriority": 6980,
          "m_nRagdollDamageBone": 5952,
          "m_nSpotRules": 6848,
          "m_nWhichBombZone": 6872,
          "m_pActionTrackingServices": 3832,
          "m_pBot": 6936,
          "m_pBulletServices": 3808,
          "m_pBuyServices": 3824,
          "m_pDamageReactServices": 3848,
          "m_pHostageServices": 3816,
          "m_pRadioServices": 3840,
          "m_qDeathEyeAngles": 6748,
          "m_strVOPrefix": 3864,
          "m_szLastPlaceName": 3872,
          "m_szRagdollDamageWeaponName": 5980,
          "m_thirdPersonHeading": 6948,
          "m_unCurrentEquipmentValue": 6992,
          "m_unFreezetimeEndEquipmentValue": 6996,
          "m_unRoundStartEquipmentValue": 6994,
          "m_vHeadConstraintOffset": 6968,
          "m_vRagdollDamageForce": 5956,
          "m_vRagdollDamagePosition": 5968,
          "m_vRagdollServerOrigin": 6048,
          "m_vecDeathInfoOrigin": 7028,
          "m_vecPlayerPatchEconIndices": 7040,
          "m_vecStashedGrenadeThrowPosition": 7084,
          "m_vecStashedVelocity": 7096,
          "m_vecThrowPositionHistory": 7132,
          "m_vecTotalBulletForce": 6900,
          "m_vecVelocityHistory": 7156,
          "m_wasNotKilledNaturally": 7293,
          "m_xLastHeadBoneTransform": 5888
        },
        "metadata": [
          {
            "name": "MNetworkOutOfPVSUpdates",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkVarTypeOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_pBulletServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayer_BulletServices*"
          },
          {
            "name": "m_pHostageServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayer_HostageServices*"
          },
          {
            "name": "m_pBuyServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayer_BuyServices*"
          },
          {
            "name": "m_pActionTrackingServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayer_ActionTrackingServices*"
          },
          {
            "name": "m_bHasFemaleVoice",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_szLastPlaceName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_bInBuyZone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bInHostageRescueZone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bInBombZone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRetakesOffering",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iRetakesOfferingCard",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bRetakesHasDefuseKit",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bRetakesMVPLastRound",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRetakesMVPBoostItem",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_RetakesMVPBoostExtraUtility",
            "type": "NetworkVarNames",
            "type_name": "loadout_slot_t"
          },
          {
            "name": "m_flHealthShotBoostExpirationTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_aimPunchAngle",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_aimPunchAngleVel",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_aimPunchTickBase",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_aimPunchTickFraction",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bIsBuyMenuOpen",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flTimeOfLastInjury",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flNextSprayDecalTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_nRagdollDamageBone",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vRagdollDamageForce",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vRagdollDamagePosition",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_szRagdollDamageWeaponName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_bRagdollDamageHeadshot",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vRagdollServerOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_EconGloves",
            "type": "NetworkVarNames",
            "type_name": "CEconItemView"
          },
          {
            "name": "m_nEconGlovesChanged",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_qDeathEyeAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_bLeftHanded",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fSwitchedHandednessTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flViewmodelOffsetX",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flViewmodelOffsetY",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flViewmodelOffsetZ",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flViewmodelFOV",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bIsWalking",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nLastKillerIndex",
            "type": "NetworkVarNames",
            "type_name": "CEntityIndex"
          },
          {
            "name": "m_entitySpottedState",
            "type": "NetworkVarNames",
            "type_name": "EntitySpottedState_t"
          },
          {
            "name": "m_bIsScoped",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bResumeZoom",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsDefusing",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsGrabbingHostage",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iBlockingUseActionInProgress",
            "type": "NetworkVarNames",
            "type_name": "CSPlayerBlockingUseAction_t"
          },
          {
            "name": "m_flEmitSoundTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bInNoDefuseArea",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nWhichBombZone",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iShotsFired",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFlinchStack",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flVelocityModifier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flHitHeading",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nHitBodyPart",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bWaitForNoAttack",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bKilledByHeadshot",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_thirdPersonHeading",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_flSlopeDropOffset",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSlopeDropHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vHeadConstraintOffset",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_ArmorValue",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_unCurrentEquipmentValue",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_unRoundStartEquipmentValue",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_unFreezetimeEndEquipmentValue",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_vecPlayerPatchEconIndices",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_GunGameImmunityColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_PredictedDamageTags",
            "type": "NetworkVarNames",
            "type_name": "PredictedDamageTag_t"
          },
          {
            "name": "m_fImmuneToGunGameDamageTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bGunGameImmunity",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fMolotovDamageTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CCSPlayerPawnBase"
      },
      "CCSPlayerPawnBase": {
        "fields": {
          "m_CTouchExpansionComponent": 3472,
          "m_angEyeAngles": 3780,
          "m_bHasMovedSinceSpawn": 3745,
          "m_bRespawning": 3744,
          "m_blindStartTime": 3564,
          "m_blindUntilTime": 3560,
          "m_fNextRadarUpdateTime": 3760,
          "m_flFlashDuration": 3764,
          "m_flFlashMaxAlpha": 3768,
          "m_flIdleTimeSinceLastAction": 3756,
          "m_flProgressBarStartTime": 3772,
          "m_hOriginalController": 3792,
          "m_iNumSpawns": 3748,
          "m_iPlayerState": 3568,
          "m_iProgressBarDuration": 3776,
          "m_pPingServices": 3552
        },
        "metadata": [
          {
            "name": "m_CTouchExpansionComponent",
            "type": "NetworkVarNames",
            "type_name": "CTouchExpansionComponent::Storage_t"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_pPingServices",
            "type": "NetworkVarNames",
            "type_name": "CCSPlayer_PingServices*"
          },
          {
            "name": "m_iPlayerState",
            "type": "NetworkVarNames",
            "type_name": "CSPlayerState"
          },
          {
            "name": "m_bHasMovedSinceSpawn",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFlashDuration",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFlashMaxAlpha",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flProgressBarStartTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_iProgressBarDuration",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_angEyeAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_hOriginalController",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerController>"
          }
        ],
        "parent": "CBasePlayerPawn"
      },
      "CCSPlayerResource": {
        "fields": {
          "m_bEndMatchNextMapAllVoted": 1408,
          "m_bHostageAlive": 1264,
          "m_bombsiteCenterA": 1336,
          "m_bombsiteCenterB": 1348,
          "m_foundGoalPositions": 1409,
          "m_hostageRescueX": 1360,
          "m_hostageRescueY": 1376,
          "m_hostageRescueZ": 1392,
          "m_iHostageEntityIDs": 1288,
          "m_isHostageFollowingSomeone": 1276
        },
        "metadata": [
          {
            "name": "m_bHostageAlive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_isHostageFollowingSomeone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iHostageEntityIDs",
            "type": "NetworkVarNames",
            "type_name": "CEntityIndex"
          },
          {
            "name": "m_bombsiteCenterA",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bombsiteCenterB",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_hostageRescueX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_hostageRescueY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_hostageRescueZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bEndMatchNextMapAllVoted",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CCSPlayer_ActionTrackingServices": {
        "fields": {
          "m_bIsRescuing": 540,
          "m_hLastWeaponBeforeC4AutoSwitch": 496,
          "m_weaponPurchasesThisMatch": 544,
          "m_weaponPurchasesThisRound": 656
        },
        "metadata": [
          {
            "name": "m_bIsRescuing",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_weaponPurchasesThisMatch",
            "type": "NetworkVarNames",
            "type_name": "WeaponPurchaseTracker_t"
          },
          {
            "name": "m_weaponPurchasesThisRound",
            "type": "NetworkVarNames",
            "type_name": "WeaponPurchaseTracker_t"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_BulletServices": {
        "fields": {
          "m_totalHitsOnServer": 64
        },
        "metadata": [
          {
            "name": "m_totalHitsOnServer",
            "type": "NetworkVarNames",
            "type_name": "int32"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_BuyServices": {
        "fields": {
          "m_vecSellbackPurchaseEntries": 200
        },
        "metadata": [
          {
            "name": "m_vecSellbackPurchaseEntries",
            "type": "NetworkVarNames",
            "type_name": "SellbackPurchaseEntry_t"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_CameraServices": {
        "fields": {},
        "metadata": [],
        "parent": "CCSPlayerBase_CameraServices"
      },
      "CCSPlayer_DamageReactServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_HostageServices": {
        "fields": {
          "m_hCarriedHostage": 64,
          "m_hCarriedHostageProp": 68
        },
        "metadata": [
          {
            "name": "m_hCarriedHostage",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_hCarriedHostageProp",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_ItemServices": {
        "fields": {
          "m_bHasDefuser": 64,
          "m_bHasHelmet": 65
        },
        "metadata": [
          {
            "name": "m_bHasDefuser",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bHasHelmet",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CPlayer_ItemServices"
      },
      "CCSPlayer_MovementServices": {
        "fields": {
          "m_StuckLast": 1244,
          "m_bDesiresDuck": 673,
          "m_bDuckOverride": 672,
          "m_bHasWalkMovedSinceLastJump": 713,
          "m_bInStuckTest": 714,
          "m_bMadeFootstepNoise": 1304,
          "m_bOldJumpPressed": 1312,
          "m_bSpeedCropped": 1248,
          "m_bWasSurfing": 1372,
          "m_duckUntilOnGround": 712,
          "m_fStashGrenadeParameterWhen": 1320,
          "m_flAccumulatedJumpError": 1364,
          "m_flDuckAmount": 664,
          "m_flDuckOffset": 676,
          "m_flDuckSpeed": 668,
          "m_flGroundMoveEfficiency": 1252,
          "m_flHeightAtJumpStart": 1348,
          "m_flJumpPressedTime": 1316,
          "m_flLastDuckTime": 692,
          "m_flMaxJumpHeightLastJump": 1356,
          "m_flMaxJumpHeightThisJump": 1352,
          "m_flOffsetTickCompleteTime": 1336,
          "m_flOffsetTickStashedSpeed": 1340,
          "m_flStamina": 1344,
          "m_flStaminaAtJumpStart": 1360,
          "m_flTicksSinceLastSurfingDetected": 1368,
          "m_flWaterEntryTime": 1260,
          "m_iFootsteps": 1308,
          "m_nButtonDownMaskPrev": 1328,
          "m_nDuckJumpTimeMsecs": 684,
          "m_nDuckTimeMsecs": 680,
          "m_nGameCodeHasMovedPlayerAfterCommand": 1300,
          "m_nJumpTimeMsecs": 688,
          "m_nLadderSurfacePropIndex": 660,
          "m_nOldWaterLevel": 1256,
          "m_nTraceCount": 1240,
          "m_vecForward": 1264,
          "m_vecLadderNormal": 648,
          "m_vecLastPositionAtFullCrouchSpeed": 704,
          "m_vecLeft": 1276,
          "m_vecUp": 1288
        },
        "metadata": [
          {
            "name": "m_vecLadderNormal",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nLadderSurfacePropIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flDuckAmount",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDuckSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bDuckOverride",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bDesiresDuck",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flDuckOffset",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nDuckTimeMsecs",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nDuckJumpTimeMsecs",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nJumpTimeMsecs",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_flLastDuckTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nGameCodeHasMovedPlayerAfterCommand",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bOldJumpPressed",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fStashGrenadeParameterWhen",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_nButtonDownMaskPrev",
            "type": "NetworkVarNames",
            "type_name": "ButtonBitMask_t"
          },
          {
            "name": "m_flOffsetTickCompleteTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flOffsetTickStashedSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flStamina",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bWasSurfing",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CPlayer_MovementServices_Humanoid"
      },
      "CCSPlayer_PingServices": {
        "fields": {
          "m_flPlayerPingTokens": 64,
          "m_hPlayerPing": 84
        },
        "metadata": [
          {
            "name": "m_hPlayerPing",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_RadioServices": {
        "fields": {
          "m_bIgnoreRadio": 88,
          "m_flC4PlantTalkTimer": 72,
          "m_flDefusingTalkTimer": 68,
          "m_flGotHostageTalkTimer": 64,
          "m_flRadioTokenSlots": 76
        },
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CCSPlayer_UseServices": {
        "fields": {
          "m_flLastUseTimeStamp": 68,
          "m_flTimeLastUsedWindow": 72,
          "m_hLastKnownUseEntity": 64
        },
        "metadata": [],
        "parent": "CPlayer_UseServices"
      },
      "CCSPlayer_WaterServices": {
        "fields": {
          "m_AirFinishedTime": 72,
          "m_NextDrownDamageTime": 64,
          "m_flSwimSoundTime": 92,
          "m_flWaterJumpTime": 76,
          "m_nDrownDmgRate": 68,
          "m_vecWaterJumpVel": 80
        },
        "metadata": [],
        "parent": "CPlayer_WaterServices"
      },
      "CCSPlayer_WeaponServices": {
        "fields": {
          "m_bBlockInspectUntilNextGraphUpdate": 6720,
          "m_bDisableAutoDeploy": 215,
          "m_bIsBeingGivenItem": 212,
          "m_bIsHoldingLookAtWeapon": 189,
          "m_bIsLookingAtWeapon": 188,
          "m_bIsPickingUpGroundWeapon": 216,
          "m_bIsPickingUpItemWithUse": 213,
          "m_bPickedUpWeapon": 214,
          "m_flNextAttack": 184,
          "m_hSavedWeapon": 192,
          "m_nTimeToMelee": 196,
          "m_nTimeToPrimary": 204,
          "m_nTimeToSecondary": 200,
          "m_nTimeToSniperRifle": 208,
          "m_networkAnimTiming": 6696
        },
        "metadata": [
          {
            "name": "m_flNextAttack",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bIsLookingAtWeapon",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsHoldingLookAtWeapon",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_networkAnimTiming",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_bBlockInspectUntilNextGraphUpdate",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CPlayer_WeaponServices"
      },
      "CCSPointPulseAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScript": {
        "fields": {
          "m_pParent": 272
        },
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInFeatureTag",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScriptEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CCSPointScriptExtensions_CCSWeaponBaseVData": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScriptExtensions_entity": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScriptExtensions_observer": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScriptExtensions_player": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScriptExtensions_player_controller": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSPointScriptExtensions_weapon_cs_base": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CCSServerPointScriptEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CCSPointScriptEntity"
      },
      "CCSSprite": {
        "fields": {},
        "metadata": [],
        "parent": "CSprite"
      },
      "CCSTeam": {
        "fields": {
          "m_bSurrendered": 1456,
          "m_flNextResourceTime": 2140,
          "m_iClanID": 2120,
          "m_iLastUpdateSentAt": 2144,
          "m_nLastRecievedShorthandedRoundBonus": 1448,
          "m_nShorthandedRoundBonusStartRound": 1452,
          "m_numMapVictories": 1972,
          "m_scoreFirstHalf": 1976,
          "m_scoreOvertime": 1984,
          "m_scoreSecondHalf": 1980,
          "m_szClanTeamname": 1988,
          "m_szTeamFlagImage": 2124,
          "m_szTeamLogoImage": 2132,
          "m_szTeamMatchStat": 1457
        },
        "metadata": [
          {
            "name": "m_bSurrendered",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_szTeamMatchStat",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_numMapVictories",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_scoreFirstHalf",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_scoreSecondHalf",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_scoreOvertime",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_szClanTeamname",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_iClanID",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_szTeamFlagImage",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_szTeamLogoImage",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": "CTeam"
      },
      "CCSWeaponBase": {
        "fields": {
          "m_IronSightController": 4104,
          "m_OnPlayerPickup": 3872,
          "m_bBurstMode": 3956,
          "m_bCanBePickedUp": 4024,
          "m_bDroppedNearBuyZone": 3996,
          "m_bFireOnEmpty": 3864,
          "m_bInReload": 3968,
          "m_bInspectPending": 3788,
          "m_bInspectShouldLoop": 3789,
          "m_bIsHauledBack": 3980,
          "m_bPlayerAmmoStockOnPickup": 3776,
          "m_bRemoveable": 3704,
          "m_bRequireUseToTouch": 3777,
          "m_bSilencerOn": 3981,
          "m_bUseCanOverrideNextOwnerTouchTime": 4025,
          "m_bWasActiveWeaponWhenDropped": 4052,
          "m_bWasOwnedByCT": 4092,
          "m_bWasOwnedByTerrorist": 4093,
          "m_donated": 4084,
          "m_fAccuracyPenalty": 3936,
          "m_fAccuracySmoothedForZoom": 3944,
          "m_fLastShotTime": 4088,
          "m_flDisallowAttackAfterReloadStartUntilTime": 3972,
          "m_flDroppedAtTime": 3976,
          "m_flInspectCancelCompleteTime": 3784,
          "m_flLastAccuracyUpdateTime": 3940,
          "m_flLastLOSTraceFailureTime": 4132,
          "m_flNextAttackRenderTimeOffset": 4000,
          "m_flPostponeFireReadyFrac": 3964,
          "m_flRecoilIndex": 3952,
          "m_flTimeSilencerSwitchComplete": 3984,
          "m_flTurningInaccuracy": 3932,
          "m_flTurningInaccuracyDelta": 3916,
          "m_flWatTickOffset": 4136,
          "m_flWeaponGameplayAnimStateTimestamp": 3780,
          "m_hCurrentThirdPersonSequence": 3736,
          "m_hPrevOwner": 4044,
          "m_iIronSightMode": 4128,
          "m_iMostRecentTeamNumber": 3992,
          "m_iOriginalTeamNumber": 3988,
          "m_iRecoilIndex": 3948,
          "m_iWeaponGameplayAnimState": 3778,
          "m_nDropTick": 4048,
          "m_nLastEmptySoundCmdNum": 3832,
          "m_nPostponeFireReadyTicks": 3960,
          "m_nextOwnerTouchTime": 4028,
          "m_nextPrevOwnerTouchTime": 4032,
          "m_nextPrevOwnerUseTime": 4040,
          "m_numRemoveUnownedWeaponThink": 4096,
          "m_thirdPersonFireSequences": 3712,
          "m_thirdPersonSequences": 3740,
          "m_vecTurningInaccuracyEyeDirLast": 3920,
          "m_weaponMode": 3912
        },
        "metadata": [
          {
            "name": "MNetworkOutOfPVSUpdates",
            "type": "Unknown"
          },
          {
            "name": "m_iWeaponGameplayAnimState",
            "type": "NetworkVarNames",
            "type_name": "WeaponGameplayAnimState"
          },
          {
            "name": "m_flWeaponGameplayAnimStateTimestamp",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flInspectCancelCompleteTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bInspectPending",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_weaponMode",
            "type": "NetworkVarNames",
            "type_name": "CSWeaponMode"
          },
          {
            "name": "m_fAccuracyPenalty",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_iRecoilIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flRecoilIndex",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bBurstMode",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nPostponeFireReadyTicks",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_flPostponeFireReadyFrac",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bInReload",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flDisallowAttackAfterReloadStartUntilTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flDroppedAtTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bIsHauledBack",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bSilencerOn",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flTimeSilencerSwitchComplete",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_iOriginalTeamNumber",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMostRecentTeamNumber",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bDroppedNearBuyZone",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nextPrevOwnerUseTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_hPrevOwner",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_nDropTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_bWasActiveWeaponWhenDropped",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fLastShotTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_iIronSightMode",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flWatTickOffset",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBasePlayerWeapon"
      },
      "CCSWeaponBaseGun": {
        "fields": {
          "m_bNeedsBoltAction": 4173,
          "m_bSkillBoltInterruptAvailable": 4182,
          "m_bSkillBoltLiftedFireKey": 4183,
          "m_bSkillReloadAvailable": 4180,
          "m_bSkillReloadLiftedReloadKey": 4181,
          "m_iBurstShotsRemaining": 4156,
          "m_inPrecache": 4172,
          "m_nRevolverCylinderIdx": 4176,
          "m_silencedModelIndex": 4168,
          "m_zoomLevel": 4152
        },
        "metadata": [
          {
            "name": "m_zoomLevel",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iBurstShotsRemaining",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bNeedsBoltAction",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nRevolverCylinderIdx",
            "type": "NetworkVarNames",
            "type_name": "int32"
          }
        ],
        "parent": "CCSWeaponBase"
      },
      "CCSWeaponBaseVData": {
        "fields": {
          "m_DefaultLoadoutSlot": 1792,
          "m_GearSlot": 1784,
          "m_GearSlotPosition": 1788,
          "m_WeaponCategory": 1084,
          "m_WeaponType": 1080,
          "m_bCannotShootUnderwater": 1815,
          "m_bHasBurstMode": 1813,
          "m_bHideViewModelWhenZoomed": 2017,
          "m_bIsFullAuto": 1836,
          "m_bIsRevolver": 1814,
          "m_bMeleeWeapon": 1812,
          "m_bReloadsSingleShells": 1844,
          "m_bUnzoomsAfterShot": 2016,
          "m_eSilencerType": 1824,
          "m_flArmorRatio": 2072,
          "m_flAttackMovespeedFactor": 1996,
          "m_flCycleTime": 1848,
          "m_flDeployDuration": 1980,
          "m_flDisallowAttackAfterReloadStartDuration": 1984,
          "m_flFlinchVelocityModifierLarge": 2088,
          "m_flFlinchVelocityModifierSmall": 2092,
          "m_flHeadshotMultiplier": 2068,
          "m_flInaccuracyAltSoundThreshold": 2004,
          "m_flInaccuracyCrouch": 1872,
          "m_flInaccuracyFire": 1912,
          "m_flInaccuracyJump": 1888,
          "m_flInaccuracyJumpApex": 1972,
          "m_flInaccuracyJumpInitial": 1968,
          "m_flInaccuracyLadder": 1904,
          "m_flInaccuracyLand": 1896,
          "m_flInaccuracyMove": 1920,
          "m_flInaccuracyPitchShift": 2000,
          "m_flInaccuracyReload": 1976,
          "m_flInaccuracyStand": 1880,
          "m_flIronSightFOV": 2052,
          "m_flIronSightLooseness": 2060,
          "m_flIronSightPivotForward": 2056,
          "m_flIronSightPullUpSpeed": 2044,
          "m_flIronSightPutDownSpeed": 2048,
          "m_flMaxSpeed": 1856,
          "m_flPenetration": 2076,
          "m_flRange": 2080,
          "m_flRangeModifier": 2084,
          "m_flRecoilAngle": 1928,
          "m_flRecoilAngleVariance": 1936,
          "m_flRecoilMagnitude": 1944,
          "m_flRecoilMagnitudeVariance": 1952,
          "m_flRecoveryTimeCrouch": 2096,
          "m_flRecoveryTimeCrouchFinal": 2104,
          "m_flRecoveryTimeStand": 2100,
          "m_flRecoveryTimeStandFinal": 2108,
          "m_flSpread": 1864,
          "m_flThrowVelocity": 2120,
          "m_flZoomTime0": 2032,
          "m_flZoomTime1": 2036,
          "m_flZoomTime2": 2040,
          "m_nCrosshairDeltaDistance": 1832,
          "m_nCrosshairMinDistance": 1828,
          "m_nDamage": 2064,
          "m_nKillAward": 1800,
          "m_nNumBullets": 1840,
          "m_nPrice": 1796,
          "m_nPrimaryReserveAmmoMax": 1804,
          "m_nRecoilSeed": 1988,
          "m_nRecoveryTransitionEndBullet": 2116,
          "m_nRecoveryTransitionStartBullet": 2112,
          "m_nSecondaryReserveAmmoMax": 1808,
          "m_nSpreadSeed": 1992,
          "m_nTracerFrequency": 1960,
          "m_nZoomFOV1": 2024,
          "m_nZoomFOV2": 2028,
          "m_nZoomLevels": 2020,
          "m_szAnimClass": 2136,
          "m_szAnimSkeleton": 1312,
          "m_szModel_AG2": 1088,
          "m_szName": 1816,
          "m_szTracerParticle": 1560,
          "m_szUseRadioSubtitle": 2008,
          "m_vSmokeColor": 2124,
          "m_vecMuzzlePos0": 1536,
          "m_vecMuzzlePos1": 1548
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MPropertySuppressBaseClassField",
            "type": "Unknown"
          },
          {
            "name": "MPropertySuppressBaseClassField",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CChangeLevel": {
        "fields": {
          "m_OnChangeLevel": 2504,
          "m_bNewChapter": 2546,
          "m_bNoTouch": 2545,
          "m_bOnChangeLevelFired": 2547,
          "m_bTouched": 2544,
          "m_sLandmarkName": 2496,
          "m_sMapName": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CChicken": {
        "fields": {
          "m_AttributeManager": 3424,
          "m_BlockDirectionTimer": 12896,
          "m_activityTimer": 4296,
          "m_bInJump": 4492,
          "m_collisionStuckTimer": 4248,
          "m_currentActivity": 4292,
          "m_desiredActivity": 4288,
          "m_flActiveFollowStartTime": 12860,
          "m_flLastJumpTime": 4488,
          "m_flWhenZombified": 4400,
          "m_fleeFrom": 4324,
          "m_followMinuteTimer": 12864,
          "m_hasBeenUsed": 4456,
          "m_isOnGround": 4272,
          "m_jumpTimer": 4464,
          "m_jumpedThisFrame": 4404,
          "m_leader": 4408,
          "m_moveRateThrottleTimer": 4328,
          "m_repathTimer": 12696,
          "m_reuseTimer": 4432,
          "m_startleTimer": 4352,
          "m_stuckAnchor": 4208,
          "m_stuckTimer": 4224,
          "m_turnRate": 4320,
          "m_updateTimer": 4184,
          "m_vFallVelocity": 4276,
          "m_vecPathGoal": 12848,
          "m_vocalizeTimer": 4376
        },
        "metadata": [
          {
            "name": "m_AttributeManager",
            "type": "NetworkVarNames",
            "type_name": "CAttributeContainer"
          },
          {
            "name": "m_jumpedThisFrame",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_leader",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          }
        ],
        "parent": "CDynamicProp"
      },
      "CCitadelSoundOpvarSetOBB": {
        "fields": {
          "m_iszOperatorName": 1272,
          "m_iszOpvarName": 1280,
          "m_iszStackName": 1264,
          "m_nAABBDirection": 1336,
          "m_vDistanceInnerMaxs": 1300,
          "m_vDistanceInnerMins": 1288,
          "m_vDistanceOuterMaxs": 1324,
          "m_vDistanceOuterMins": 1312
        },
        "metadata": [
          {
            "name": "m_iszStackName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iszOperatorName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iszOpvarName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_vDistanceInnerMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vDistanceInnerMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vDistanceOuterMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vDistanceOuterMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nAABBDirection",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CCollisionProperty": {
        "fields": {
          "m_CollisionGroup": 94,
          "m_collisionAttribute": 16,
          "m_flBoundingRadius": 96,
          "m_flCapsuleRadius": 172,
          "m_nEnablePhysics": 95,
          "m_nSolidType": 91,
          "m_nSurroundType": 93,
          "m_triggerBloat": 92,
          "m_usSolidFlags": 90,
          "m_vCapsuleCenter1": 148,
          "m_vCapsuleCenter2": 160,
          "m_vecMaxs": 76,
          "m_vecMins": 64,
          "m_vecSpecifiedSurroundingMaxs": 112,
          "m_vecSpecifiedSurroundingMins": 100,
          "m_vecSurroundingMaxs": 124,
          "m_vecSurroundingMins": 136
        },
        "metadata": [
          {
            "name": "m_collisionAttribute",
            "type": "NetworkVarNames",
            "type_name": "VPhysicsCollisionAttribute_t"
          },
          {
            "name": "m_vecMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_usSolidFlags",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nSolidType",
            "type": "NetworkVarNames",
            "type_name": "SolidType_t"
          },
          {
            "name": "m_triggerBloat",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nSurroundType",
            "type": "NetworkVarNames",
            "type_name": "SurroundingBoundsType_t"
          },
          {
            "name": "m_CollisionGroup",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nEnablePhysics",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_vecSpecifiedSurroundingMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecSpecifiedSurroundingMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vCapsuleCenter1",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vCapsuleCenter2",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flCapsuleRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": ""
      },
      "CColorCorrection": {
        "fields": {
          "m_MaxFalloff": 1304,
          "m_MinFalloff": 1300,
          "m_bClientSide": 1295,
          "m_bEnabled": 1293,
          "m_bExclusive": 1296,
          "m_bMaster": 1294,
          "m_bStartDisabled": 1292,
          "m_flCurWeight": 1308,
          "m_flFadeInDuration": 1264,
          "m_flFadeOutDuration": 1268,
          "m_flMaxWeight": 1288,
          "m_flStartFadeInWeight": 1272,
          "m_flStartFadeOutWeight": 1276,
          "m_flTimeStartFadeIn": 1280,
          "m_flTimeStartFadeOut": 1284,
          "m_lookupFilename": 1824,
          "m_netlookupFilename": 1312
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "m_flFadeInDuration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeOutDuration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flMaxWeight",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMaster",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bClientSide",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bExclusive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_MinFalloff",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_MaxFalloff",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flCurWeight",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_netlookupFilename",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CColorCorrectionVolume": {
        "fields": {
          "m_FadeDuration": 2492,
          "m_LastEnterTime": 3016,
          "m_LastEnterWeight": 3012,
          "m_LastExitTime": 3024,
          "m_LastExitWeight": 3020,
          "m_MaxWeight": 2488,
          "m_Weight": 2496,
          "m_lookupFilename": 2500
        },
        "metadata": [
          {
            "name": "m_MaxWeight",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_FadeDuration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_Weight",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_lookupFilename",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CCommentaryAuto": {
        "fields": {
          "m_OnCommentaryMidGame": 1304,
          "m_OnCommentaryMultiplayerSpawn": 1344,
          "m_OnCommentaryNewGame": 1264
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CCommentaryViewPosition": {
        "fields": {},
        "metadata": [],
        "parent": "CSprite"
      },
      "CConstraintAnchor": {
        "fields": {
          "m_massScale": 2680
        },
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CCredits": {
        "fields": {
          "m_OnCreditsDone": 1264,
          "m_bRolledOutroCredits": 1304,
          "m_flLogoLength": 1308
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CDEagle": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CDamageRecord": {
        "fields": {
          "m_DamagerXuid": 80,
          "m_PlayerDamager": 48,
          "m_PlayerRecipient": 52,
          "m_RecipientXuid": 88,
          "m_bIsOtherEnemy": 116,
          "m_hPlayerControllerDamager": 56,
          "m_hPlayerControllerRecipient": 60,
          "m_iActualHealthRemoved": 104,
          "m_iBulletsDamage": 96,
          "m_iDamage": 100,
          "m_iLastBulletUpdate": 112,
          "m_iNumHits": 108,
          "m_killType": 117,
          "m_szPlayerDamagerName": 64,
          "m_szPlayerRecipientName": 72
        },
        "metadata": [
          {
            "name": "m_PlayerDamager",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_PlayerRecipient",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_hPlayerControllerDamager",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerController>"
          },
          {
            "name": "m_hPlayerControllerRecipient",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerController>"
          },
          {
            "name": "m_szPlayerDamagerName",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_szPlayerRecipientName",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_DamagerXuid",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_RecipientXuid",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_iDamage",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iActualHealthRemoved",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iNumHits",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iLastBulletUpdate",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bIsOtherEnemy",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_killType",
            "type": "NetworkVarNames",
            "type_name": "EKillTypes_t"
          }
        ],
        "parent": null
      },
      "CDebugHistory": {
        "fields": {
          "m_nNpcEvents": 4097328
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CDecoyGrenade": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseCSGrenade"
      },
      "CDecoyProjectile": {
        "fields": {
          "m_decoyWeaponDefIndex": 3152,
          "m_fExpireTime": 3136,
          "m_nDecoyShotTick": 3128,
          "m_shotsRemaining": 3132
        },
        "metadata": [
          {
            "name": "m_nDecoyShotTick",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CBaseCSGrenadeProjectile"
      },
      "CDestructiblePartsSystemComponent": {
        "fields": {
          "__m_pChainEntity": 0,
          "m_DamageLevelTakenByHitGroup": 72,
          "m_hOwner": 96,
          "m_nLastHitDamageLevel": 100
        },
        "metadata": [
          {
            "name": "m_DamageLevelTakenByHitGroup",
            "type": "NetworkVarNames",
            "type_name": "uint16_t"
          },
          {
            "name": "m_hOwner",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseModelEntity>"
          },
          {
            "name": "m_nLastHitDamageLevel",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": ""
      },
      "CDynamicLight": {
        "fields": {
          "m_ActualFlags": 2024,
          "m_Exponent": 2032,
          "m_Flags": 2025,
          "m_InnerAngle": 2036,
          "m_LightStyle": 2026,
          "m_On": 2027,
          "m_OuterAngle": 2040,
          "m_Radius": 2028,
          "m_SpotRadius": 2044
        },
        "metadata": [
          {
            "name": "m_Flags",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_LightStyle",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_Radius",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_Exponent",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_InnerAngle",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_OuterAngle",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_SpotRadius",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CDynamicNavConnectionsVolume": {
        "fields": {
          "m_bConnectionsEnabled": 2568,
          "m_flMaxConnectionDistance": 2580,
          "m_flTargetAreaSearchRadius": 2572,
          "m_flUpdateDistance": 2576,
          "m_iszConnectionTarget": 2528,
          "m_sTransitionType": 2560,
          "m_vecConnections": 2536
        },
        "metadata": [],
        "parent": "CTriggerMultiple"
      },
      "CDynamicProp": {
        "fields": {
          "m_OnAnimReachedEnd": 3312,
          "m_OnAnimReachedStart": 3272,
          "m_bCreateNavObstacle": 3144,
          "m_bCreateNonSolid": 3368,
          "m_bFiredStartEndOutput": 3366,
          "m_bForceNpcExclude": 3367,
          "m_bIsOverrideProp": 3369,
          "m_bNavObstacleUpdatesOverridden": 3145,
          "m_bRandomizeCycle": 3364,
          "m_bStartDisabled": 3365,
          "m_bUseAnimGraph": 3147,
          "m_bUseHitboxesForRenderBox": 3146,
          "m_glowColor": 3384,
          "m_iInitialGlowState": 3372,
          "m_iszIdleAnim": 3352,
          "m_nGlowRange": 3376,
          "m_nGlowRangeMin": 3380,
          "m_nGlowTeam": 3388,
          "m_nIdleAnimLoopMode": 3360,
          "m_pOutputAnimBegun": 3152,
          "m_pOutputAnimLoopCycleOver": 3232,
          "m_pOutputAnimOver": 3192
        },
        "metadata": [
          {
            "name": "m_bUseHitboxesForRenderBox",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bUseAnimGraph",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBreakableProp"
      },
      "CDynamicPropAlias_cable_dynamic": {
        "fields": {},
        "metadata": [],
        "parent": "CDynamicProp"
      },
      "CDynamicPropAlias_dynamic_prop": {
        "fields": {},
        "metadata": [],
        "parent": "CDynamicProp"
      },
      "CDynamicPropAlias_prop_dynamic_override": {
        "fields": {},
        "metadata": [],
        "parent": "CDynamicProp"
      },
      "CEconEntity": {
        "fields": {
          "m_AttributeManager": 2840,
          "m_OriginalOwnerXuidHigh": 3604,
          "m_OriginalOwnerXuidLow": 3600,
          "m_flFallbackWear": 3616,
          "m_hOldProvidee": 3624,
          "m_iOldOwnerClass": 3628,
          "m_nFallbackPaintKit": 3608,
          "m_nFallbackSeed": 3612,
          "m_nFallbackStatTrak": 3620
        },
        "metadata": [
          {
            "name": "m_AttributeManager",
            "type": "NetworkVarNames",
            "type_name": "CAttributeContainer"
          },
          {
            "name": "m_OriginalOwnerXuidLow",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_OriginalOwnerXuidHigh",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nFallbackPaintKit",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nFallbackSeed",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFallbackWear",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nFallbackStatTrak",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CBaseFlex"
      },
      "CEconItemAttribute": {
        "fields": {
          "m_bSetBonus": 64,
          "m_flInitialValue": 56,
          "m_flValue": 52,
          "m_iAttributeDefinitionIndex": 48,
          "m_nRefundableCurrency": 60
        },
        "metadata": [
          {
            "name": "m_iAttributeDefinitionIndex",
            "type": "NetworkVarNames",
            "type_name": "attrib_definition_index_t"
          },
          {
            "name": "m_flValue",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flInitialValue",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nRefundableCurrency",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bSetBonus",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": null
      },
      "CEconItemView": {
        "fields": {
          "m_AttributeList": 112,
          "m_NetworkedDynamicAttributes": 232,
          "m_bInitialized": 104,
          "m_iAccountID": 88,
          "m_iEntityLevel": 64,
          "m_iEntityQuality": 60,
          "m_iInventoryPosition": 92,
          "m_iItemDefinitionIndex": 56,
          "m_iItemID": 72,
          "m_iItemIDHigh": 80,
          "m_iItemIDLow": 84,
          "m_szCustomName": 352,
          "m_szCustomNameOverride": 513
        },
        "metadata": [
          {
            "name": "m_iItemDefinitionIndex",
            "type": "NetworkVarNames",
            "type_name": "item_definition_index_t"
          },
          {
            "name": "m_iEntityQuality",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEntityLevel",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iItemIDHigh",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iItemIDLow",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iAccountID",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iInventoryPosition",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_bInitialized",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_AttributeList",
            "type": "NetworkVarNames",
            "type_name": "CAttributeList"
          },
          {
            "name": "m_NetworkedDynamicAttributes",
            "type": "NetworkVarNames",
            "type_name": "CAttributeList"
          },
          {
            "name": "m_szCustomName",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": ""
      },
      "CEconWearable": {
        "fields": {
          "m_bAlwaysAllow": 3636,
          "m_nForceSkin": 3632
        },
        "metadata": [],
        "parent": "CEconEntity"
      },
      "CEffectData": {
        "fields": {
          "m_fFlags": 99,
          "m_flMagnitude": 68,
          "m_flRadius": 72,
          "m_flScale": 64,
          "m_hEntity": 56,
          "m_hOtherEntity": 60,
          "m_iEffectName": 108,
          "m_nAttachmentIndex": 100,
          "m_nAttachmentName": 104,
          "m_nColor": 98,
          "m_nDamageType": 88,
          "m_nEffectIndex": 80,
          "m_nExplosionType": 110,
          "m_nHitBox": 96,
          "m_nMaterial": 94,
          "m_nPenetrate": 92,
          "m_nSurfaceProp": 76,
          "m_vAngles": 44,
          "m_vNormal": 32,
          "m_vOrigin": 8,
          "m_vStart": 20
        },
        "metadata": [
          {
            "name": "m_vOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vStart",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vNormal",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_hEntity",
            "type": "NetworkVarNames",
            "type_name": "CEntityHandle"
          },
          {
            "name": "m_hOtherEntity",
            "type": "NetworkVarNames",
            "type_name": "CEntityHandle"
          },
          {
            "name": "m_flScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flMagnitude",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flRadius",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nSurfaceProp",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          },
          {
            "name": "m_nEffectIndex",
            "type": "NetworkVarNames",
            "type_name": "HParticleSystemDefinition"
          },
          {
            "name": "m_nDamageType",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nPenetrate",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nMaterial",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_nHitBox",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_nColor",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_fFlags",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nAttachmentIndex",
            "type": "NetworkVarNames",
            "type_name": "AttachmentHandle_t"
          },
          {
            "name": "m_nAttachmentName",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          },
          {
            "name": "m_iEffectName",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_nExplosionType",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          }
        ],
        "parent": null
      },
      "CEnableMotionFixup": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CEntityBlocker": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CEntityComponent": {
        "fields": {},
        "metadata": [],
        "parent": ""
      },
      "CEntityDissolve": {
        "fields": {
          "m_flFadeInLength": 2028,
          "m_flFadeInStart": 2024,
          "m_flFadeOutLength": 2044,
          "m_flFadeOutModelLength": 2036,
          "m_flFadeOutModelStart": 2032,
          "m_flFadeOutStart": 2040,
          "m_flStartTime": 2048,
          "m_nDissolveType": 2052,
          "m_nMagnitude": 2068,
          "m_vDissolverOrigin": 2056
        },
        "metadata": [
          {
            "name": "m_flFadeInStart",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeInLength",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeOutModelStart",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeOutModelLength",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeOutStart",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeOutLength",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_nDissolveType",
            "type": "NetworkVarNames",
            "type_name": "EntityDisolveType_t"
          },
          {
            "name": "m_vDissolverOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nMagnitude",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CEntityFlame": {
        "fields": {
          "m_bCheapEffect": 1268,
          "m_bUseHitboxes": 1276,
          "m_flDirectDamagePerSecond": 1296,
          "m_flHitboxFireScale": 1284,
          "m_flLifetime": 1288,
          "m_flSize": 1272,
          "m_hAttacker": 1292,
          "m_hEntAttached": 1264,
          "m_iCustomDamageType": 1300,
          "m_iNumHitboxFires": 1280
        },
        "metadata": [
          {
            "name": "m_hEntAttached",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_bCheapEffect",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEntityIdentity": {
        "fields": {
          "m_PathIndex": 64,
          "m_designerName": 32,
          "m_fDataObjectTypes": 60,
          "m_flags": 48,
          "m_name": 24,
          "m_nameStringableIndex": 20,
          "m_pNext": 96,
          "m_pNextByClass": 112,
          "m_pPrev": 88,
          "m_pPrevByClass": 104,
          "m_worldGroupId": 56
        },
        "metadata": [
          {
            "name": "m_nameStringableIndex",
            "type": "NetworkVarNames",
            "type_name": "int32"
          }
        ],
        "parent": ""
      },
      "CEntityInstance": {
        "fields": {
          "m_CScriptComponent": 48,
          "m_iszPrivateVScripts": 8,
          "m_pEntity": 16
        },
        "metadata": [
          {
            "name": "m_pEntity",
            "type": "NetworkVarNames",
            "type_name": "CEntityIdentity*"
          },
          {
            "name": "m_CScriptComponent",
            "type": "NetworkVarNames",
            "type_name": "CScriptComponent::Storage_t"
          }
        ],
        "parent": null
      },
      "CEnvBeam": {
        "fields": {
          "m_OnTouchedByEntity": 2312,
          "m_TouchType": 2280,
          "m_active": 2184,
          "m_boltWidth": 2220,
          "m_frameStart": 2248,
          "m_hFilter": 2296,
          "m_iFilterName": 2288,
          "m_iszDecal": 2304,
          "m_iszEndEntity": 2208,
          "m_iszSpriteName": 2240,
          "m_iszStartEntity": 2200,
          "m_life": 2216,
          "m_noiseAmplitude": 2224,
          "m_radius": 2276,
          "m_restrike": 2232,
          "m_speed": 2228,
          "m_spriteTexture": 2192,
          "m_vEndPointRelative": 2264,
          "m_vEndPointWorld": 2252
        },
        "metadata": [],
        "parent": "CBeam"
      },
      "CEnvBeverage": {
        "fields": {
          "m_CanInDispenser": 1264,
          "m_nBeverageType": 1268
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CEnvCombinedLightProbeVolume": {
        "fields": {
          "m_Entity_Color": 5480,
          "m_Entity_bCustomCubemapTexture": 5496,
          "m_Entity_bEnabled": 5681,
          "m_Entity_bMoveable": 5600,
          "m_Entity_bStartDisabled": 5616,
          "m_Entity_flBrightness": 5484,
          "m_Entity_flEdgeFadeDist": 5620,
          "m_Entity_hCubemapTexture": 5488,
          "m_Entity_hLightProbeDirectLightIndicesTexture": 5552,
          "m_Entity_hLightProbeDirectLightScalarsTexture": 5560,
          "m_Entity_hLightProbeDirectLightShadowsTexture": 5568,
          "m_Entity_hLightProbeTexture_AmbientCube": 5504,
          "m_Entity_hLightProbeTexture_SDF": 5512,
          "m_Entity_hLightProbeTexture_SH2_B": 5544,
          "m_Entity_hLightProbeTexture_SH2_DC": 5520,
          "m_Entity_hLightProbeTexture_SH2_G": 5536,
          "m_Entity_hLightProbeTexture_SH2_R": 5528,
          "m_Entity_nEnvCubeMapArrayIndex": 5608,
          "m_Entity_nHandshake": 5604,
          "m_Entity_nLightProbeAtlasX": 5648,
          "m_Entity_nLightProbeAtlasY": 5652,
          "m_Entity_nLightProbeAtlasZ": 5656,
          "m_Entity_nLightProbeSizeX": 5636,
          "m_Entity_nLightProbeSizeY": 5640,
          "m_Entity_nLightProbeSizeZ": 5644,
          "m_Entity_nPriority": 5612,
          "m_Entity_vBoxMaxs": 5588,
          "m_Entity_vBoxMins": 5576,
          "m_Entity_vEdgeFadeDists": 5624
        },
        "metadata": [
          {
            "name": "m_Entity_Color",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_Entity_flBrightness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Entity_hCubemapTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_bCustomCubemapTexture",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_hLightProbeTexture_AmbientCube",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SDF",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_DC",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_R",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_G",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_B",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeDirectLightIndicesTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeDirectLightScalarsTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeDirectLightShadowsTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_vBoxMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_vBoxMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_bMoveable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_nHandshake",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nEnvCubeMapArrayIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nPriority",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_flEdgeFadeDist",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Entity_vEdgeFadeDists",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_nLightProbeSizeX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeSizeY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeSizeZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeAtlasX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeAtlasY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeAtlasZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvCombinedLightProbeVolumeAlias_func_combined_light_probe_volume": {
        "fields": {},
        "metadata": [],
        "parent": "CEnvCombinedLightProbeVolume"
      },
      "CEnvCubemap": {
        "fields": {
          "m_Entity_bCopyDiffuseFromDefaultCubemap": 1472,
          "m_Entity_bCustomCubemapTexture": 1400,
          "m_Entity_bDefaultEnvMap": 1469,
          "m_Entity_bDefaultSpecEnvMap": 1470,
          "m_Entity_bEnabled": 1488,
          "m_Entity_bIndoorCubeMap": 1471,
          "m_Entity_bMoveable": 1432,
          "m_Entity_bStartDisabled": 1468,
          "m_Entity_flDiffuseScale": 1464,
          "m_Entity_flEdgeFadeDist": 1448,
          "m_Entity_flInfluenceRadius": 1404,
          "m_Entity_hCubemapTexture": 1392,
          "m_Entity_nEnvCubeMapArrayIndex": 1440,
          "m_Entity_nHandshake": 1436,
          "m_Entity_nPriority": 1444,
          "m_Entity_vBoxProjectMaxs": 1420,
          "m_Entity_vBoxProjectMins": 1408,
          "m_Entity_vEdgeFadeDists": 1452
        },
        "metadata": [
          {
            "name": "m_Entity_hCubemapTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_bCustomCubemapTexture",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_flInfluenceRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Entity_vBoxProjectMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_vBoxProjectMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_bMoveable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_nHandshake",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nEnvCubeMapArrayIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nPriority",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_flEdgeFadeDist",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Entity_vEdgeFadeDists",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_flDiffuseScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Entity_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_bDefaultEnvMap",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_bDefaultSpecEnvMap",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_bIndoorCubeMap",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_bCopyDiffuseFromDefaultCubemap",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvCubemapBox": {
        "fields": {},
        "metadata": [],
        "parent": "CEnvCubemap"
      },
      "CEnvCubemapFog": {
        "fields": {
          "m_bActive": 1300,
          "m_bFirstTime": 1337,
          "m_bHasHeightFogEnd": 1336,
          "m_bHeightFogEnabled": 1276,
          "m_bStartDisabled": 1301,
          "m_flEndDistance": 1264,
          "m_flFogFalloffExponent": 1272,
          "m_flFogHeightEnd": 1284,
          "m_flFogHeightExponent": 1292,
          "m_flFogHeightStart": 1288,
          "m_flFogHeightWidth": 1280,
          "m_flFogMaxOpacity": 1304,
          "m_flLODBias": 1296,
          "m_flStartDistance": 1268,
          "m_hFogCubemapTexture": 1328,
          "m_hSkyMaterial": 1312,
          "m_iszSkyEntity": 1320,
          "m_nCubemapSourceType": 1308
        },
        "metadata": [
          {
            "name": "m_flEndDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flStartDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogFalloffExponent",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bHeightFogEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFogHeightWidth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogHeightEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogHeightStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogHeightExponent",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flLODBias",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFogMaxOpacity",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nCubemapSourceType",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_hSkyMaterial",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_iszSkyEntity",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_hFogCubemapTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_bHasHeightFogEnd",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvDecal": {
        "fields": {
          "m_bProjectOnCharacters": 2049,
          "m_bProjectOnWater": 2050,
          "m_bProjectOnWorld": 2048,
          "m_flDepth": 2040,
          "m_flDepthSortBias": 2052,
          "m_flHeight": 2036,
          "m_flWidth": 2032,
          "m_hDecalMaterial": 2024,
          "m_nRenderOrder": 2044
        },
        "metadata": [
          {
            "name": "m_hDecalMaterial",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_flWidth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDepth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nRenderOrder",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_bProjectOnWorld",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bProjectOnCharacters",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bProjectOnWater",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flDepthSortBias",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CEnvDetailController": {
        "fields": {
          "m_flFadeEndDist": 1268,
          "m_flFadeStartDist": 1264
        },
        "metadata": [
          {
            "name": "m_flFadeStartDist",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFadeEndDist",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvEntityIgniter": {
        "fields": {
          "m_flLifetime": 1264
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CEnvEntityMaker": {
        "fields": {
          "m_angPostSpawnDirection": 1308,
          "m_bPostSpawnUseAngles": 1328,
          "m_flPostSpawnDirectionVariance": 1320,
          "m_flPostSpawnSpeed": 1324,
          "m_hCurrentBlocker": 1292,
          "m_hCurrentInstance": 1288,
          "m_iszTemplate": 1336,
          "m_pOutputOnFailedSpawn": 1384,
          "m_pOutputOnSpawned": 1344,
          "m_vecBlockerOrigin": 1296,
          "m_vecEntityMaxs": 1276,
          "m_vecEntityMins": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvExplosion": {
        "fields": {
          "m_bCreateDebris": 2052,
          "m_bSuppressParticleImpulse": 2080,
          "m_flDamageForce": 2040,
          "m_flInnerRadius": 2036,
          "m_flPlayerDamage": 2028,
          "m_hEntityIgnore": 2104,
          "m_hInflictor": 2044,
          "m_iClassIgnore": 2084,
          "m_iClassIgnore2": 2088,
          "m_iCustomDamageType": 2048,
          "m_iMagnitude": 2024,
          "m_iRadiusOverride": 2032,
          "m_iszCustomEffectName": 2064,
          "m_iszCustomSoundName": 2072,
          "m_iszEntityIgnoreName": 2096
        },
        "metadata": [],
        "parent": "CModelPointEntity"
      },
      "CEnvFade": {
        "fields": {
          "m_Duration": 1268,
          "m_HoldDuration": 1272,
          "m_OnBeginFade": 1280,
          "m_fadeColor": 1264
        },
        "metadata": [
          {
            "name": "m_fadeColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          }
        ],
        "parent": "CLogicalEntity"
      },
      "CEnvGlobal": {
        "fields": {
          "m_counter": 1320,
          "m_globalstate": 1304,
          "m_initialstate": 1316,
          "m_outCounter": 1264,
          "m_triggermode": 1312
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CEnvHudHint": {
        "fields": {
          "m_iszMessage": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvInstructorHint": {
        "fields": {
          "m_Color": 1328,
          "m_bAllowNoDrawTarget": 1368,
          "m_bAutoStart": 1369,
          "m_bForceCaption": 1345,
          "m_bLocalPlayerOnly": 1370,
          "m_bNoOffscreen": 1344,
          "m_bStatic": 1343,
          "m_bSuppressRest": 1352,
          "m_fIconOffset": 1332,
          "m_fRange": 1336,
          "m_iAlphaOption": 1341,
          "m_iDisplayLimit": 1292,
          "m_iInstanceType": 1348,
          "m_iPulseOption": 1340,
          "m_iShakeOption": 1342,
          "m_iTimeout": 1288,
          "m_iszActivatorCaption": 1320,
          "m_iszBinding": 1360,
          "m_iszCaption": 1312,
          "m_iszHintTargetEntity": 1280,
          "m_iszIcon_Offscreen": 1304,
          "m_iszIcon_Onscreen": 1296,
          "m_iszName": 1264,
          "m_iszReplace_Key": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvInstructorVRHint": {
        "fields": {
          "m_flHeightOffset": 1324,
          "m_iAttachType": 1320,
          "m_iLayoutFileType": 1304,
          "m_iTimeout": 1280,
          "m_iszCaption": 1288,
          "m_iszCustomLayoutFile": 1312,
          "m_iszHintTargetEntity": 1272,
          "m_iszName": 1264,
          "m_iszStartSound": 1296
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvLaser": {
        "fields": {
          "m_firePosition": 2208,
          "m_flStartFrame": 2220,
          "m_iszLaserTarget": 2184,
          "m_iszSpriteName": 2200,
          "m_pSprite": 2192
        },
        "metadata": [],
        "parent": "CBeam"
      },
      "CEnvLightProbeVolume": {
        "fields": {
          "m_Entity_bEnabled": 5497,
          "m_Entity_bMoveable": 5448,
          "m_Entity_bStartDisabled": 5460,
          "m_Entity_hLightProbeDirectLightIndicesTexture": 5400,
          "m_Entity_hLightProbeDirectLightScalarsTexture": 5408,
          "m_Entity_hLightProbeDirectLightShadowsTexture": 5416,
          "m_Entity_hLightProbeTexture_AmbientCube": 5352,
          "m_Entity_hLightProbeTexture_SDF": 5360,
          "m_Entity_hLightProbeTexture_SH2_B": 5392,
          "m_Entity_hLightProbeTexture_SH2_DC": 5368,
          "m_Entity_hLightProbeTexture_SH2_G": 5384,
          "m_Entity_hLightProbeTexture_SH2_R": 5376,
          "m_Entity_nHandshake": 5452,
          "m_Entity_nLightProbeAtlasX": 5476,
          "m_Entity_nLightProbeAtlasY": 5480,
          "m_Entity_nLightProbeAtlasZ": 5484,
          "m_Entity_nLightProbeSizeX": 5464,
          "m_Entity_nLightProbeSizeY": 5468,
          "m_Entity_nLightProbeSizeZ": 5472,
          "m_Entity_nPriority": 5456,
          "m_Entity_vBoxMaxs": 5436,
          "m_Entity_vBoxMins": 5424
        },
        "metadata": [
          {
            "name": "m_Entity_hLightProbeTexture_AmbientCube",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SDF",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_DC",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_R",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_G",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeTexture_SH2_B",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeDirectLightIndicesTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeDirectLightScalarsTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_hLightProbeDirectLightShadowsTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_Entity_vBoxMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_vBoxMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_Entity_bMoveable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_nHandshake",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nPriority",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_Entity_nLightProbeSizeX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeSizeY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeSizeZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeAtlasX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeAtlasY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_nLightProbeAtlasZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Entity_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvMuzzleFlash": {
        "fields": {
          "m_flScale": 1264,
          "m_iszParentAttachment": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvParticleGlow": {
        "fields": {
          "m_ColorTint": 3436,
          "m_flAlphaScale": 3424,
          "m_flRadiusScale": 3428,
          "m_flSelfIllumScale": 3432,
          "m_hTextureOverride": 3440
        },
        "metadata": [
          {
            "name": "m_flAlphaScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flRadiusScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flSelfIllumScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_ColorTint",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_hTextureOverride",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          }
        ],
        "parent": "CParticleSystem"
      },
      "CEnvProjectedTexture": {
        "fields": {
          "m_LightColor": 2048,
          "m_SpotlightTextureName": 2096,
          "m_bAlwaysUpdate": 2029,
          "m_bCameraSpace": 2040,
          "m_bEnableShadows": 2036,
          "m_bFlipHorizontal": 2632,
          "m_bLightOnlyTarget": 2038,
          "m_bLightWorld": 2039,
          "m_bSimpleProjection": 2037,
          "m_bState": 2028,
          "m_bVolumetric": 2064,
          "m_flAmbient": 2092,
          "m_flBrightnessScale": 2044,
          "m_flColorTransitionTime": 2088,
          "m_flFarZ": 2620,
          "m_flFlashlightTime": 2072,
          "m_flIntensity": 2052,
          "m_flLightFOV": 2032,
          "m_flLinearAttenuation": 2056,
          "m_flNearZ": 2616,
          "m_flNoiseStrength": 2068,
          "m_flPlaneOffset": 2080,
          "m_flProjectionSize": 2624,
          "m_flQuadraticAttenuation": 2060,
          "m_flRotation": 2628,
          "m_flVolumetricIntensity": 2084,
          "m_hTargetEntity": 2024,
          "m_nNumPlanes": 2076,
          "m_nShadowQuality": 2612,
          "m_nSpotlightTextureFrame": 2608
        },
        "metadata": [
          {
            "name": "m_hTargetEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_bState",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bAlwaysUpdate",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flLightFOV",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_bEnableShadows",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bSimpleProjection",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bLightOnlyTarget",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bLightWorld",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bCameraSpace",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flBrightnessScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_LightColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flIntensity",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flLinearAttenuation",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flQuadraticAttenuation",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_bVolumetric",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flNoiseStrength",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFlashlightTime",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nNumPlanes",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_flPlaneOffset",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flVolumetricIntensity",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flColorTransitionTime",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flAmbient",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_SpotlightTextureName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_nSpotlightTextureFrame",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nShadowQuality",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_flNearZ",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFarZ",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flProjectionSize",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flRotation",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_bFlipHorizontal",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CModelPointEntity"
      },
      "CEnvShake": {
        "fields": {
          "m_Amplitude": 1272,
          "m_Duration": 1280,
          "m_Frequency": 1276,
          "m_Radius": 1284,
          "m_currentAmp": 1296,
          "m_limitToEntity": 1264,
          "m_maxForce": 1300,
          "m_nextShake": 1292,
          "m_shakeCallback": 1320,
          "m_stopTime": 1288
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvSky": {
        "fields": {
          "m_bEnabled": 2076,
          "m_bStartDisabled": 2040,
          "m_flBrightnessScale": 2052,
          "m_flFogMaxEnd": 2072,
          "m_flFogMaxStart": 2068,
          "m_flFogMinEnd": 2064,
          "m_flFogMinStart": 2060,
          "m_hSkyMaterial": 2024,
          "m_hSkyMaterialLightingOnly": 2032,
          "m_nFogType": 2056,
          "m_vTintColor": 2041,
          "m_vTintColorLightingOnly": 2045
        },
        "metadata": [
          {
            "name": "m_hSkyMaterial",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_hSkyMaterialLightingOnly",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vTintColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_vTintColorLightingOnly",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flBrightnessScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nFogType",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFogMinStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogMinEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogMaxStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogMaxEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CEnvSoundscape": {
        "fields": {
          "m_OnPlay": 1264,
          "m_bDisabled": 1404,
          "m_bOverrideWithEvent": 1320,
          "m_flRadius": 1304,
          "m_hProxySoundscape": 1400,
          "m_positionNames": 1336,
          "m_soundEventHash": 1416,
          "m_soundEventName": 1312,
          "m_soundscapeEntityListId": 1328,
          "m_soundscapeIndex": 1324,
          "m_soundscapeName": 1408
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CEnvSoundscapeAlias_snd_soundscape": {
        "fields": {},
        "metadata": [],
        "parent": "CEnvSoundscape"
      },
      "CEnvSoundscapeProxy": {
        "fields": {
          "m_MainSoundscapeName": 1424
        },
        "metadata": [],
        "parent": "CEnvSoundscape"
      },
      "CEnvSoundscapeProxyAlias_snd_soundscape_proxy": {
        "fields": {},
        "metadata": [],
        "parent": "CEnvSoundscapeProxy"
      },
      "CEnvSoundscapeTriggerable": {
        "fields": {},
        "metadata": [],
        "parent": "CEnvSoundscape"
      },
      "CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable": {
        "fields": {},
        "metadata": [],
        "parent": "CEnvSoundscapeTriggerable"
      },
      "CEnvSpark": {
        "fields": {
          "m_OnSpark": 1280,
          "m_flDelay": 1264,
          "m_nMagnitude": 1268,
          "m_nTrailLength": 1272,
          "m_nType": 1276
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvSplash": {
        "fields": {
          "m_flScale": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvTilt": {
        "fields": {
          "m_Duration": 1264,
          "m_Radius": 1268,
          "m_TiltTime": 1272,
          "m_stopTime": 1276
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvViewPunch": {
        "fields": {
          "m_angViewPunch": 1268,
          "m_flRadius": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CEnvVolumetricFogController": {
        "fields": {
          "m_TintColor": 1268,
          "m_bActive": 1340,
          "m_bEnableIndirect": 1381,
          "m_bFirstTime": 1432,
          "m_bIsMaster": 1382,
          "m_bStartDisabled": 1380,
          "m_fFirstVolumeSliceThickness": 1300,
          "m_fNoiseSpeed": 1396,
          "m_fNoiseStrength": 1400,
          "m_fWindSpeed": 1416,
          "m_flAnisotropy": 1272,
          "m_flDefaultAnisotropy": 1368,
          "m_flDefaultDrawDistance": 1376,
          "m_flDefaultScattering": 1372,
          "m_flDrawDistance": 1280,
          "m_flFadeInEnd": 1288,
          "m_flFadeInStart": 1284,
          "m_flFadeSpeed": 1276,
          "m_flIndirectStrength": 1292,
          "m_flScattering": 1264,
          "m_flStartAnisoTime": 1344,
          "m_flStartAnisotropy": 1356,
          "m_flStartDrawDistance": 1364,
          "m_flStartDrawDistanceTime": 1352,
          "m_flStartScatterTime": 1348,
          "m_flStartScattering": 1360,
          "m_hFogIndirectTexture": 1384,
          "m_nForceRefreshCount": 1392,
          "m_nIndirectTextureDimX": 1304,
          "m_nIndirectTextureDimY": 1308,
          "m_nIndirectTextureDimZ": 1312,
          "m_nVolumeDepth": 1296,
          "m_vBoxMaxs": 1328,
          "m_vBoxMins": 1316,
          "m_vNoiseScale": 1404,
          "m_vWindDirection": 1420
        },
        "metadata": [
          {
            "name": "m_flScattering",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_TintColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flAnisotropy",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDrawDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeInStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeInEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flIndirectStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nVolumeDepth",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_fFirstVolumeSliceThickness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nIndirectTextureDimX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nIndirectTextureDimY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nIndirectTextureDimZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vBoxMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vBoxMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flStartAnisoTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flStartScatterTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flStartDrawDistanceTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flStartAnisotropy",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flStartScattering",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flStartDrawDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDefaultAnisotropy",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDefaultScattering",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDefaultDrawDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bEnableIndirect",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsMaster",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_hFogIndirectTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_nForceRefreshCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_fNoiseSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fNoiseStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vNoiseScale",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_fWindSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vWindDirection",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvVolumetricFogVolume": {
        "fields": {
          "m_TintColor": 1328,
          "m_bActive": 1264,
          "m_bIndirectUseLPVs": 1293,
          "m_bOverrideIndirectLightStrength": 1333,
          "m_bOverrideNoiseStrength": 1335,
          "m_bOverrideSunLightStrength": 1334,
          "m_bOverrideTintColor": 1332,
          "m_bStartDisabled": 1292,
          "m_fHeightFogEdgeWidth": 1312,
          "m_fIndirectLightStrength": 1316,
          "m_fNoiseStrength": 1324,
          "m_fSunLightStrength": 1320,
          "m_flFalloffExponent": 1304,
          "m_flHeightFogDepth": 1308,
          "m_flStrength": 1296,
          "m_nFalloffShape": 1300,
          "m_vBoxMaxs": 1280,
          "m_vBoxMins": 1268
        },
        "metadata": [
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vBoxMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vBoxMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIndirectUseLPVs",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nFalloffShape",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFalloffExponent",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flHeightFogDepth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fHeightFogEdgeWidth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fIndirectLightStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fSunLightStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fNoiseStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_TintColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_bOverrideTintColor",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bOverrideIndirectLightStrength",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bOverrideSunLightStrength",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bOverrideNoiseStrength",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvWind": {
        "fields": {
          "m_EnvWindShared": 1264
        },
        "metadata": [
          {
            "name": "m_EnvWindShared",
            "type": "NetworkVarNames",
            "type_name": "CEnvWindShared"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvWindController": {
        "fields": {
          "m_EnvWindShared": 1264,
          "m_bFirstTime": 1777,
          "m_bIsMaster": 1776,
          "m_fDirectionVariation": 1744,
          "m_fSpeedVariation": 1748,
          "m_fTurbulence": 1752,
          "m_fVolumeHalfExtentXY": 1756,
          "m_fVolumeHalfExtentZ": 1760,
          "m_nClipmapLevels": 1772,
          "m_nVolumeResolutionXY": 1764,
          "m_nVolumeResolutionZ": 1768
        },
        "metadata": [
          {
            "name": "m_EnvWindShared",
            "type": "NetworkVarNames",
            "type_name": "CEnvWindShared"
          },
          {
            "name": "m_fDirectionVariation",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fSpeedVariation",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fTurbulence",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fVolumeHalfExtentXY",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fVolumeHalfExtentZ",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nVolumeResolutionXY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nVolumeResolutionZ",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nClipmapLevels",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bIsMaster",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CEnvWindShared": {
        "fields": {
          "m_OnGustEnd": 104,
          "m_OnGustStart": 64,
          "m_flGustDuration": 36,
          "m_flInitialWindSpeed": 44,
          "m_flMaxGustDelay": 32,
          "m_flMinGustDelay": 28,
          "m_flStartTime": 8,
          "m_hEntOwner": 144,
          "m_iGustDirChange": 40,
          "m_iInitialWindDir": 42,
          "m_iMaxGust": 26,
          "m_iMaxWind": 18,
          "m_iMinGust": 24,
          "m_iMinWind": 16,
          "m_iWindSeed": 12,
          "m_location": 48,
          "m_windRadius": 20
        },
        "metadata": [
          {
            "name": "m_flStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_iWindSeed",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_iMinWind",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_iMaxWind",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_windRadius",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_iMinGust",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_iMaxGust",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_flMinGustDelay",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flMaxGustDelay",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flGustDuration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_iGustDirChange",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_iInitialWindDir",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_flInitialWindSpeed",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_location",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": ""
      },
      "CEnvWindVolume": {
        "fields": {
          "m_bActive": 1264,
          "m_bStartDisabled": 1292,
          "m_fWindDirectionVariationMultiplier": 1312,
          "m_fWindSpeedMultiplier": 1300,
          "m_fWindSpeedVariationMultiplier": 1308,
          "m_fWindTurbulenceMultiplier": 1304,
          "m_nShape": 1296,
          "m_vBoxMaxs": 1280,
          "m_vBoxMins": 1268
        },
        "metadata": [
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vBoxMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vBoxMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nShape",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_fWindSpeedMultiplier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fWindTurbulenceMultiplier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fWindSpeedVariationMultiplier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fWindDirectionVariationMultiplier",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CFilterAttributeInt": {
        "fields": {
          "m_sAttributeName": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterClass": {
        "fields": {
          "m_iFilterClass": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterContext": {
        "fields": {
          "m_iFilterContext": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterEnemy": {
        "fields": {
          "m_flOuterRadius": 1364,
          "m_flRadius": 1360,
          "m_iszEnemyName": 1352,
          "m_iszPlayerName": 1376,
          "m_nMaxSquadmatesPerEnemy": 1368
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterLOS": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterMassGreater": {
        "fields": {
          "m_fFilterMass": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterModel": {
        "fields": {
          "m_iFilterModel": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterMultiple": {
        "fields": {
          "m_hFilter": 1440,
          "m_iFilterName": 1360,
          "m_nFilterType": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterMultipleAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CFilterName": {
        "fields": {
          "m_iFilterName": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterProximity": {
        "fields": {
          "m_flRadius": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFilterTeam": {
        "fields": {
          "m_iFilterTeam": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "CFireCrackerBlast": {
        "fields": {},
        "metadata": [],
        "parent": "CInferno"
      },
      "CFish": {
        "fields": {
          "m_angle": 2700,
          "m_angleChange": 2704,
          "m_avoidRange": 2764,
          "m_calmSpeed": 2756,
          "m_desiredSpeed": 2752,
          "m_disperseTimer": 2872,
          "m_forward": 2708,
          "m_goTimer": 2800,
          "m_id": 2684,
          "m_moveTimer": 2824,
          "m_panicSpeed": 2760,
          "m_panicTimer": 2848,
          "m_perp": 2720,
          "m_pool": 2680,
          "m_poolOrigin": 2732,
          "m_proximityTimer": 2896,
          "m_speed": 2748,
          "m_turnClockwise": 2792,
          "m_turnTimer": 2768,
          "m_visible": 2920,
          "m_waterLevel": 2744,
          "m_x": 2688,
          "m_y": 2692,
          "m_z": 2696
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_x",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_y",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_z",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_angle",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_poolOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_waterLevel",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CBaseAnimGraph"
      },
      "CFishPool": {
        "fields": {
          "m_fishCount": 1280,
          "m_fishes": 1304,
          "m_isDormant": 1296,
          "m_maxRange": 1284,
          "m_swimDepth": 1288,
          "m_visTimer": 1328,
          "m_waterLevel": 1292
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CFlashbang": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseCSGrenade"
      },
      "CFlashbangProjectile": {
        "fields": {
          "m_flTimeToDetonate": 3104,
          "m_numOpponentsHit": 3108,
          "m_numTeammatesHit": 3109
        },
        "metadata": [],
        "parent": "CBaseCSGrenadeProjectile"
      },
      "CFogController": {
        "fields": {
          "m_bUseAngles": 1368,
          "m_fog": 1264,
          "m_iChangedVariables": 1372
        },
        "metadata": [
          {
            "name": "m_fog",
            "type": "NetworkVarNames",
            "type_name": "fogparams_t"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CFogTrigger": {
        "fields": {
          "m_fog": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CFogVolume": {
        "fields": {
          "m_bDisabled": 2056,
          "m_bInFogVolumesList": 2057,
          "m_colorCorrectionName": 2040,
          "m_fogName": 2024,
          "m_postProcessName": 2032
        },
        "metadata": [],
        "parent": "CServerOnlyModelEntity"
      },
      "CFootstepControl": {
        "fields": {
          "m_destination": 2496,
          "m_source": 2488
        },
        "metadata": [
          {
            "name": "m_source",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_destination",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CFuncBrush": {
        "fields": {
          "m_bInvertExclusion": 2048,
          "m_bScriptedMovement": 2049,
          "m_bSolidBsp": 2032,
          "m_iDisabled": 2028,
          "m_iSolidity": 2024,
          "m_iszExcludedClass": 2040
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncConveyor": {
        "fields": {
          "m_angMoveEntitySpace": 2036,
          "m_flTargetSpeed": 2060,
          "m_flTransitionDurationSeconds": 2032,
          "m_flTransitionStartSpeed": 2072,
          "m_hConveyorModels": 2080,
          "m_nTransitionDurationTicks": 2068,
          "m_nTransitionStartTick": 2064,
          "m_szConveyorModels": 2024,
          "m_vecMoveDirEntitySpace": 2048
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "m_vecMoveDirEntitySpace",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flTargetSpeed",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nTransitionStartTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_nTransitionDurationTicks",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flTransitionStartSpeed",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_hConveyorModels",
            "type": "NetworkVarNames",
            "type_name": "EHANDLE"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CFuncElectrifiedVolume": {
        "fields": {
          "m_EffectInterpenetrateName": 2064,
          "m_EffectName": 2056,
          "m_EffectZapName": 2072,
          "m_iszEffectSource": 2080
        },
        "metadata": [
          {
            "name": "m_EffectName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": "CFuncBrush"
      },
      "CFuncIllusionary": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncInteractionLayerClip": {
        "fields": {
          "m_bDisabled": 2024,
          "m_iszInteractsAs": 2032,
          "m_iszInteractsWith": 2040
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncLadder": {
        "fields": {
          "m_Dismounts": 2040,
          "m_OnPlayerGotOffLadder": 2160,
          "m_OnPlayerGotOnLadder": 2120,
          "m_bDisabled": 2104,
          "m_bFakeLadder": 2105,
          "m_bHasSlack": 2106,
          "m_flAutoRideSpeed": 2100,
          "m_surfacePropName": 2112,
          "m_vecLadderDir": 2024,
          "m_vecLocalTop": 2064,
          "m_vecPlayerMountPositionBottom": 2088,
          "m_vecPlayerMountPositionTop": 2076
        },
        "metadata": [
          {
            "name": "m_vecLadderDir",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecPlayerMountPositionTop",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecPlayerMountPositionBottom",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flAutoRideSpeed",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bFakeLadder",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CFuncLadderAlias_func_useableladder": {
        "fields": {},
        "metadata": [],
        "parent": "CFuncLadder"
      },
      "CFuncMonitor": {
        "fields": {
          "m_bDraw3DSkybox": 2085,
          "m_bEnabled": 2084,
          "m_bRenderShadows": 2068,
          "m_bStartEnabled": 2086,
          "m_bUseUniqueColorTarget": 2069,
          "m_brushModelName": 2072,
          "m_hTargetCamera": 2080,
          "m_nResolutionEnum": 2064,
          "m_targetCamera": 2056
        },
        "metadata": [
          {
            "name": "m_targetCamera",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_nResolutionEnum",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bRenderShadows",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bUseUniqueColorTarget",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_brushModelName",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_hTargetCamera",
            "type": "NetworkVarNames",
            "type_name": "EHANDLE"
          },
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bDraw3DSkybox",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CFuncBrush"
      },
      "CFuncMoveLinear": {
        "fields": {
          "m_OnFullyClosed": 2264,
          "m_OnFullyOpen": 2224,
          "m_angMoveEntitySpace": 2156,
          "m_authoredPosition": 2152,
          "m_bAllowMovableNavMeshDockingOnEntireEntity": 2305,
          "m_bCreateMovableNavMesh": 2304,
          "m_bCreateNavObstacle": 2306,
          "m_currentSound": 2200,
          "m_flBlockDamage": 2208,
          "m_flStartPosition": 2212,
          "m_soundStart": 2184,
          "m_soundStop": 2192,
          "m_vecMoveDirParentSpace": 2168
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          }
        ],
        "parent": "CBaseToggle"
      },
      "CFuncMoveLinearAlias_momentary_door": {
        "fields": {},
        "metadata": [],
        "parent": "CFuncMoveLinear"
      },
      "CFuncMover": {
        "fields": {
          "m_OnLerpToPositionComplete": 2376,
          "m_OnMovementEnd": 2216,
          "m_OnNodePassed": 2288,
          "m_OnStart": 2472,
          "m_OnStartForward": 2512,
          "m_OnStartReverse": 2552,
          "m_OnStop": 2592,
          "m_OnStopped": 2632,
          "m_bAllowMovableNavMeshDockingOnEntireEntity": 2281,
          "m_bCreateMovableNavMesh": 2280,
          "m_bIsMoving": 2097,
          "m_bIsPaused": 2416,
          "m_bIsReversing": 2060,
          "m_bIsVerboseLogging": 2428,
          "m_bNextNodeReturnsCurrent": 2672,
          "m_bStartAtClosestPoint": 2256,
          "m_bStartAtEnd": 2257,
          "m_bStartedMoving": 2673,
          "m_eFollowEntityDirection": 2704,
          "m_eMoveType": 2056,
          "m_eOrientationUpdate": 2260,
          "m_eSolidType": 2096,
          "m_eTransitionedToPathNodeAction": 2420,
          "m_flCurFollowEntityT": 2444,
          "m_flCurFollowSpeed": 2448,
          "m_flDistanceToReachMaxSpeed": 2104,
          "m_flDistanceToReachZeroSpeed": 2112,
          "m_flDurationBlendToNewOrientationRan": 2272,
          "m_flFollowDistance": 2436,
          "m_flFollowMinimumSpeed": 2440,
          "m_flLerpToPositionDeltaT": 2372,
          "m_flLerpToPositionT": 2368,
          "m_flPathLocation": 2080,
          "m_flPathLocationToBeginStop": 2128,
          "m_flStartSpeed": 2076,
          "m_flT": 2084,
          "m_flTimeMovementStart": 2116,
          "m_flTimeMovementStop": 2120,
          "m_flTimeStartOrientationChange": 2264,
          "m_flTimeToBlendToNewOrientation": 2268,
          "m_flTimeToReachMaxSpeed": 2100,
          "m_flTimeToReachZeroSpeed": 2108,
          "m_flTimeToTraverseToNextNode": 2340,
          "m_hFollowEntity": 2432,
          "m_hOrientationFaceEntity": 2464,
          "m_hOrientationMatchEntity": 2336,
          "m_hPathMover": 2032,
          "m_hStopAtNode": 2124,
          "m_iszArriveAtDestinationSound": 2184,
          "m_iszLoopForwardSound": 2144,
          "m_iszLoopReverseSound": 2168,
          "m_iszOrientationMatchEntityName": 2328,
          "m_iszPathName": 2024,
          "m_iszPathNodeEnd": 2048,
          "m_iszPathNodeStart": 2040,
          "m_iszStartForwardSound": 2136,
          "m_iszStartReverseSound": 2160,
          "m_iszStopForwardSound": 2152,
          "m_iszStopReverseSound": 2176,
          "m_nCurrentNodeIndex": 2088,
          "m_nDelayedTeleportToNode": 2424,
          "m_nOriginalOrientationIndex": 2276,
          "m_nPreviousNodeIndex": 2092,
          "m_strOrientationFaceEntityName": 2456,
          "m_vLerpToNewPosEndInPathEntitySpace": 2356,
          "m_vLerpToNewPosStartInPathEntitySpace": 2344,
          "m_vTarget": 2064
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncMoverAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CFuncNavBlocker": {
        "fields": {
          "m_bDisabled": 2032,
          "m_nBlockedTeamNumber": 2036
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncNavObstruction": {
        "fields": {
          "m_bDisabled": 2040,
          "m_bUseAsyncObstacleUpdate": 2041
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncPlat": {
        "fields": {
          "m_sNoise": 2192
        },
        "metadata": [],
        "parent": "CBasePlatTrain"
      },
      "CFuncPlatRot": {
        "fields": {
          "m_end": 2200,
          "m_start": 2212
        },
        "metadata": [],
        "parent": "CFuncPlat"
      },
      "CFuncPropRespawnZone": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CFuncRotating": {
        "fields": {
          "m_NoiseRunning": 2184,
          "m_OnReachedStart": 2104,
          "m_OnStarted": 2064,
          "m_OnStopped": 2024,
          "m_angStart": 2228,
          "m_bAccelDecel": 2193,
          "m_bReversed": 2192,
          "m_bStopAtStartPos": 2240,
          "m_flAttenuation": 2160,
          "m_flBlockDamage": 2176,
          "m_flFanFriction": 2156,
          "m_flMaxSpeed": 2172,
          "m_flTargetSpeed": 2168,
          "m_flVolume": 2164,
          "m_localRotationVector": 2144,
          "m_prevLocalAngles": 2216,
          "m_vecClientAngles": 2256,
          "m_vecClientOrigin": 2244
        },
        "metadata": [
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          },
          {
            "name": "MNetworkOverride",
            "type": "Unknown"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CFuncShatterglass": {
        "fields": {
          "m_OnBroken": 2288,
          "m_PanelSize": 2144,
          "m_bBreakShardless": 2173,
          "m_bBreakSilent": 2172,
          "m_bBroken": 2174,
          "m_bGlassInFrame": 2176,
          "m_bGlassNavIgnore": 2175,
          "m_bStartBroken": 2177,
          "m_flGlassThickness": 2164,
          "m_flInitAtTime": 2160,
          "m_flLastCleanupTime": 2156,
          "m_flLastShatterSoundEmitTime": 2152,
          "m_flSpawnInvulnerability": 2168,
          "m_hMaterialDamageBase": 2336,
          "m_iInitialDamageType": 2178,
          "m_iSurfaceType": 2328,
          "m_matPanelTransform": 2024,
          "m_matPanelTransformWsTemp": 2072,
          "m_szDamagePositioningEntityName01": 2184,
          "m_szDamagePositioningEntityName02": 2192,
          "m_szDamagePositioningEntityName03": 2200,
          "m_szDamagePositioningEntityName04": 2208,
          "m_vExtraDamagePositions": 2240,
          "m_vInitialDamagePositions": 2216,
          "m_vInitialPanelVertices": 2264,
          "m_vecShatterGlassShards": 2120
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncTankTrain": {
        "fields": {
          "m_OnDeath": 2368
        },
        "metadata": [],
        "parent": "CFuncTrackTrain"
      },
      "CFuncTimescale": {
        "fields": {
          "m_flAcceleration": 1268,
          "m_flBlendDeltaMultiplier": 1276,
          "m_flDesiredTimescale": 1264,
          "m_flMinBlendRate": 1272,
          "m_isStarted": 1280
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CFuncTrackAuto": {
        "fields": {},
        "metadata": [],
        "parent": "CFuncTrackChange"
      },
      "CFuncTrackChange": {
        "fields": {
          "m_code": 2272,
          "m_targetState": 2276,
          "m_trackBottom": 2232,
          "m_trackBottomName": 2256,
          "m_trackTop": 2224,
          "m_trackTopName": 2248,
          "m_train": 2240,
          "m_trainName": 2264,
          "m_use": 2280
        },
        "metadata": [],
        "parent": "CFuncPlatRot"
      },
      "CFuncTrackTrain": {
        "fields": {
          "m_OnArrivedAtDestinationNode": 2296,
          "m_OnNext": 2256,
          "m_OnStart": 2216,
          "m_angPrev": 2044,
          "m_bAccelToSpeed": 2356,
          "m_bManualSpeedChanges": 2336,
          "m_controlMaxs": 2068,
          "m_controlMins": 2056,
          "m_dir": 2120,
          "m_eOrientationType": 2188,
          "m_eVelocityType": 2192,
          "m_flAccelSpeed": 2348,
          "m_flBank": 2100,
          "m_flBlockDamage": 2108,
          "m_flDecelSpeed": 2352,
          "m_flDesiredSpeed": 2340,
          "m_flMoveSoundMaxDuration": 2172,
          "m_flMoveSoundMaxPitch": 2184,
          "m_flMoveSoundMinDuration": 2168,
          "m_flMoveSoundMinPitch": 2180,
          "m_flNextMPSoundTime": 2360,
          "m_flNextMoveSoundTime": 2176,
          "m_flSpeedChangeTime": 2344,
          "m_flVolume": 2096,
          "m_height": 2112,
          "m_iszSoundMove": 2128,
          "m_iszSoundMovePing": 2136,
          "m_iszSoundStart": 2144,
          "m_iszSoundStop": 2152,
          "m_lastBlockPos": 2080,
          "m_lastBlockTick": 2092,
          "m_length": 2028,
          "m_maxSpeed": 2116,
          "m_oldSpeed": 2104,
          "m_ppath": 2024,
          "m_strPathTarget": 2160,
          "m_vPosPrev": 2032
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncTrain": {
        "fields": {
          "m_activated": 2196,
          "m_flBlockDamage": 2204,
          "m_flNextBlockTime": 2208,
          "m_hCurrentTarget": 2192,
          "m_hEnemy": 2200,
          "m_iszLastTarget": 2216
        },
        "metadata": [],
        "parent": "CBasePlatTrain"
      },
      "CFuncTrainControls": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncVPhysicsClip": {
        "fields": {
          "m_bDisabled": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncVehicleClip": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncWall": {
        "fields": {
          "m_nState": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CFuncWallToggle": {
        "fields": {},
        "metadata": [],
        "parent": "CFuncWall"
      },
      "CFuncWater": {
        "fields": {
          "m_BuoyancyHelper": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CGameEnd": {
        "fields": {},
        "metadata": [],
        "parent": "CRulePointEntity"
      },
      "CGameGibManager": {
        "fields": {
          "m_bAllowNewGibs": 1288,
          "m_iCurrentMaxPieces": 1292,
          "m_iLastFrame": 1300,
          "m_iMaxPieces": 1296
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CGameMoney": {
        "fields": {
          "m_OnMoneySpent": 2040,
          "m_OnMoneySpentFail": 2080,
          "m_nMoney": 2120,
          "m_strAwardText": 2128
        },
        "metadata": [],
        "parent": "CRulePointEntity"
      },
      "CGamePlayerEquip": {
        "fields": {},
        "metadata": [],
        "parent": "CRulePointEntity"
      },
      "CGamePlayerZone": {
        "fields": {
          "m_OnPlayerInZone": 2032,
          "m_OnPlayerOutZone": 2072,
          "m_PlayersInCount": 2112,
          "m_PlayersOutCount": 2152
        },
        "metadata": [],
        "parent": "CRuleBrushEntity"
      },
      "CGameRules": {
        "fields": {
          "__m_pChainEntity": 8,
          "m_bGamePaused": 188,
          "m_nPauseStartTick": 184,
          "m_nQuestPhase": 176,
          "m_nTotalPausedTicks": 180,
          "m_szQuestName": 48
        },
        "metadata": [
          {
            "name": "m_nTotalPausedTicks",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPauseStartTick",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bGamePaused",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": null
      },
      "CGameRulesProxy": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CGameSceneNode": {
        "fields": {
          "m_angAbsRotation": 220,
          "m_angRotation": 192,
          "m_bBoneMergeFlex": 0,
          "m_bDebugAbsOriginChanges": 238,
          "m_bDirtyBoneMergeBoneToRoot": 0,
          "m_bDirtyBoneMergeInfo": 0,
          "m_bDirtyHierarchy": 0,
          "m_bDormant": 239,
          "m_bForceParentToBeNetworked": 240,
          "m_bNetworkedAnglesChanged": 0,
          "m_bNetworkedPositionChanged": 0,
          "m_bNetworkedScaleChanged": 0,
          "m_bWillBeCallingPostDataUpdate": 0,
          "m_flAbsScale": 232,
          "m_flClientLocalScale": 320,
          "m_flScale": 204,
          "m_flZOffset": 316,
          "m_hParent": 120,
          "m_hierarchyAttachName": 312,
          "m_nDoNotSetAnimTimeInInvalidatePhysicsCount": 245,
          "m_nHierarchicalDepth": 243,
          "m_nHierarchyType": 244,
          "m_nLatchAbsOrigin": 0,
          "m_nParentAttachmentOrBone": 236,
          "m_name": 248,
          "m_nodeToWorld": 16,
          "m_pChild": 64,
          "m_pNextSibling": 72,
          "m_pOwner": 48,
          "m_pParent": 56,
          "m_vRenderOrigin": 324,
          "m_vecAbsOrigin": 208,
          "m_vecOrigin": 136
        },
        "metadata": [
          {
            "name": "m_hParent",
            "type": "NetworkVarNames",
            "type_name": "CGameSceneNodeHandle"
          },
          {
            "name": "m_vecOrigin",
            "type": "NetworkVarNames",
            "type_name": "CNetworkOriginCellCoordQuantizedVector"
          },
          {
            "name": "m_angRotation",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_flScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_name",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          },
          {
            "name": "m_hierarchyAttachName",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          }
        ],
        "parent": ""
      },
      "CGameSceneNodeHandle": {
        "fields": {
          "m_hOwner": 8,
          "m_name": 12
        },
        "metadata": [
          {
            "name": "m_hOwner",
            "type": "NetworkVarNames",
            "type_name": "CEntityHandle"
          },
          {
            "name": "m_name",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          }
        ],
        "parent": ""
      },
      "CGameText": {
        "fields": {
          "m_iszMessage": 2040,
          "m_textParms": 2048
        },
        "metadata": [],
        "parent": "CRulePointEntity"
      },
      "CGenericConstraint": {
        "fields": {
          "m_NotifyForceReachedX": 1560,
          "m_NotifyForceReachedY": 1600,
          "m_NotifyForceReachedZ": 1640,
          "m_bAxisNotifiedX": 1504,
          "m_bAxisNotifiedY": 1505,
          "m_bAxisNotifiedZ": 1506,
          "m_flAngularDampingRatioX": 1532,
          "m_flAngularDampingRatioY": 1536,
          "m_flAngularDampingRatioZ": 1540,
          "m_flAngularFrequencyX": 1520,
          "m_flAngularFrequencyY": 1524,
          "m_flAngularFrequencyZ": 1528,
          "m_flBreakAfterTimeStartTimeX": 1444,
          "m_flBreakAfterTimeStartTimeY": 1448,
          "m_flBreakAfterTimeStartTimeZ": 1452,
          "m_flBreakAfterTimeThresholdX": 1456,
          "m_flBreakAfterTimeThresholdY": 1460,
          "m_flBreakAfterTimeThresholdZ": 1464,
          "m_flBreakAfterTimeX": 1432,
          "m_flBreakAfterTimeY": 1436,
          "m_flBreakAfterTimeZ": 1440,
          "m_flLinearDampingRatioX": 1408,
          "m_flLinearDampingRatioY": 1412,
          "m_flLinearDampingRatioZ": 1416,
          "m_flLinearFrequencyX": 1396,
          "m_flLinearFrequencyY": 1400,
          "m_flLinearFrequencyZ": 1404,
          "m_flMaxAngularImpulseX": 1544,
          "m_flMaxAngularImpulseY": 1548,
          "m_flMaxAngularImpulseZ": 1552,
          "m_flMaxLinearImpulseX": 1420,
          "m_flMaxLinearImpulseY": 1424,
          "m_flMaxLinearImpulseZ": 1428,
          "m_flNotifyForceLastTimeX": 1492,
          "m_flNotifyForceLastTimeY": 1496,
          "m_flNotifyForceLastTimeZ": 1500,
          "m_flNotifyForceMinTimeX": 1480,
          "m_flNotifyForceMinTimeY": 1484,
          "m_flNotifyForceMinTimeZ": 1488,
          "m_flNotifyForceX": 1468,
          "m_flNotifyForceY": 1472,
          "m_flNotifyForceZ": 1476,
          "m_nAngularMotionX": 1508,
          "m_nAngularMotionY": 1512,
          "m_nAngularMotionZ": 1516,
          "m_nLinearMotionX": 1384,
          "m_nLinearMotionY": 1388,
          "m_nLinearMotionZ": 1392
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CGlowProperty": {
        "fields": {
          "m_bEligibleForScreenHighlight": 80,
          "m_bFlashing": 68,
          "m_bGlowing": 81,
          "m_fGlowColor": 8,
          "m_flGlowStartTime": 76,
          "m_flGlowTime": 72,
          "m_glowColorOverride": 64,
          "m_iGlowTeam": 52,
          "m_iGlowType": 48,
          "m_nGlowRange": 56,
          "m_nGlowRangeMin": 60
        },
        "metadata": [
          {
            "name": "m_iGlowType",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_iGlowTeam",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nGlowRange",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nGlowRangeMin",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_glowColorOverride",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_bFlashing",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flGlowTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flGlowStartTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bEligibleForScreenHighlight",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": ""
      },
      "CGradientFog": {
        "fields": {
          "m_bGradientFogNeedsTextures": 1322,
          "m_bHeightFogEnabled": 1280,
          "m_bIsEnabled": 1321,
          "m_bStartDisabled": 1320,
          "m_flFadeTime": 1316,
          "m_flFarZ": 1292,
          "m_flFogEndDistance": 1276,
          "m_flFogEndHeight": 1288,
          "m_flFogFalloffExponent": 1300,
          "m_flFogMaxOpacity": 1296,
          "m_flFogStartDistance": 1272,
          "m_flFogStartHeight": 1284,
          "m_flFogStrength": 1312,
          "m_flFogVerticalExponent": 1304,
          "m_fogColor": 1308,
          "m_hGradientFogTexture": 1264
        },
        "metadata": [
          {
            "name": "m_hGradientFogTexture",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_flFogStartDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogEndDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bHeightFogEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFogStartHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogEndHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFarZ",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogMaxOpacity",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogFalloffExponent",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogVerticalExponent",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fogColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flFogStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CGunTarget": {
        "fields": {
          "m_OnDeath": 2160,
          "m_hTargetEnt": 2156,
          "m_on": 2152
        },
        "metadata": [],
        "parent": "CBaseToggle"
      },
      "CHEGrenade": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseCSGrenade"
      },
      "CHEGrenadeProjectile": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseCSGrenadeProjectile"
      },
      "CHandleDummy": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CHandleTest": {
        "fields": {
          "m_Handle": 1264,
          "m_bSendHandle": 1268
        },
        "metadata": [
          {
            "name": "m_Handle",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_bSendHandle",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CHitboxComponent": {
        "fields": {
          "m_bvDisabledHitGroups": 36
        },
        "metadata": [
          {
            "name": "m_bvDisabledHitGroups",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": "CEntityComponent"
      },
      "CHostage": {
        "fields": {
          "m_OnDroppedNotRescued": 3136,
          "m_OnFirstPickedUp": 3096,
          "m_OnHostageBeginGrab": 3056,
          "m_OnRescued": 3176,
          "m_accel": 3316,
          "m_bHandsHaveBeenCut": 11797,
          "m_bRemove": 3252,
          "m_entitySpottedState": 3216,
          "m_fLastGrabTime": 11804,
          "m_flDropStartTime": 11840,
          "m_flGrabSuccessTime": 11836,
          "m_flRescueStartTime": 11832,
          "m_hHostageGrabber": 11800,
          "m_hasBeenUsed": 3312,
          "m_inhibitDoorTimer": 11592,
          "m_inhibitObstacleAvoidanceTimer": 11736,
          "m_isAdjusted": 11796,
          "m_isCrouching": 3329,
          "m_isRescued": 3268,
          "m_isRunning": 3328,
          "m_isWaitingForLeader": 3360,
          "m_jumpTimer": 3336,
          "m_jumpedThisFrame": 3269,
          "m_lastLeader": 3280,
          "m_leader": 3276,
          "m_nApproachRewardPayouts": 11844,
          "m_nHostageSpawnRandomFactor": 3248,
          "m_nHostageState": 3272,
          "m_nPickupEventCount": 11848,
          "m_nSpotRules": 3240,
          "m_repathTimer": 11568,
          "m_reuseTimer": 3288,
          "m_uiHostageSpawnExclusionGroupMask": 3244,
          "m_vecGrabbedPos": 11820,
          "m_vecHostageResetPosition": 11908,
          "m_vecPositionWhenStartedDroppingToGround": 11808,
          "m_vecSpawnGroundPos": 11852,
          "m_vel": 3256,
          "m_wiggleTimer": 11768
        },
        "metadata": [
          {
            "name": "m_entitySpottedState",
            "type": "NetworkVarNames",
            "type_name": "EntitySpottedState_t"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_vel",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_isRescued",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_jumpedThisFrame",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nHostageState",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_leader",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_reuseTimer",
            "type": "NetworkVarNames",
            "type_name": "CountdownTimer"
          },
          {
            "name": "m_bHandsHaveBeenCut",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_hHostageGrabber",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_flRescueStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flGrabSuccessTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flDropStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          }
        ],
        "parent": "CHostageExpresserShim"
      },
      "CHostageAlias_info_hostage_spawn": {
        "fields": {},
        "metadata": [],
        "parent": "CHostage"
      },
      "CHostageCarriableProp": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CHostageExpresserShim": {
        "fields": {
          "m_pExpresser": 3032
        },
        "metadata": [],
        "parent": "CBaseCombatCharacter"
      },
      "CHostageRescueZone": {
        "fields": {},
        "metadata": [],
        "parent": "CHostageRescueZoneShim"
      },
      "CHostageRescueZoneShim": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CIncendiaryGrenade": {
        "fields": {},
        "metadata": [],
        "parent": "CMolotovGrenade"
      },
      "CInferno": {
        "fields": {
          "m_BookkeepingTimer": 5104,
          "m_BurnNormal": 3640,
          "m_InitialSplashVelocity": 5036,
          "m_NextSpreadTimer": 5128,
          "m_activeTimer": 5072,
          "m_bFireIsBurning": 3576,
          "m_bInPostEffectTime": 4424,
          "m_bWasCreatedInSmoke": 4432,
          "m_damageRampTimer": 5000,
          "m_damageTimer": 4976,
          "m_extent": 4952,
          "m_fireCount": 4408,
          "m_fireParentPositions": 2808,
          "m_firePositions": 2040,
          "m_fireSpawnOffset": 5088,
          "m_nFireEffectTickBegin": 4416,
          "m_nFireLifetime": 4420,
          "m_nFiresExtinguishCount": 4428,
          "m_nInfernoType": 4412,
          "m_nMaxFlames": 5092,
          "m_nSourceItemDefIndex": 5152,
          "m_nSpreadCount": 5096,
          "m_splashVelocity": 5024,
          "m_startPos": 5048,
          "m_vecOriginalSpawnLocation": 5060
        },
        "metadata": [
          {
            "name": "m_firePositions",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_fireParentPositions",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bFireIsBurning",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_BurnNormal",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_fireCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nInfernoType",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nFireEffectTickBegin",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nFireLifetime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bInPostEffectTime",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CInfoData": {
        "fields": {},
        "metadata": [],
        "parent": "CServerOnlyEntity"
      },
      "CInfoDeathmatchSpawn": {
        "fields": {},
        "metadata": [],
        "parent": "SpawnPoint"
      },
      "CInfoDynamicShadowHint": {
        "fields": {
          "m_bDisabled": 1264,
          "m_flRange": 1268,
          "m_hLight": 1280,
          "m_nImportance": 1272,
          "m_nLightChoice": 1276
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoDynamicShadowHintBox": {
        "fields": {
          "m_vBoxMaxs": 1300,
          "m_vBoxMins": 1288
        },
        "metadata": [],
        "parent": "CInfoDynamicShadowHint"
      },
      "CInfoFan": {
        "fields": {
          "m_FanForceCurveString": 1344,
          "m_fFanForceMaxRadius": 1328,
          "m_fFanForceMinRadius": 1332,
          "m_flCurveDistRange": 1336
        },
        "metadata": [
          {
            "name": "m_fFanForceMaxRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_fFanForceMinRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flCurveDistRange",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_FanForceCurveString",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": "CPointEntity"
      },
      "CInfoGameEventProxy": {
        "fields": {
          "m_flRange": 1272,
          "m_iszEventName": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoInstructorHintBombTargetA": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoInstructorHintBombTargetB": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoInstructorHintHostageRescueZone": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoInstructorHintTarget": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoLadderDismount": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CInfoLandmark": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoOffscreenPanoramaTexture": {
        "fields": {
          "m_AdditionalTargetEntities": 1360,
          "m_RenderAttrName": 1288,
          "m_TargetEntities": 1296,
          "m_bDisabled": 1264,
          "m_nResolutionX": 1268,
          "m_nResolutionY": 1272,
          "m_nTargetChangeCount": 1320,
          "m_szLayoutFileName": 1280,
          "m_szTargetsName": 1352,
          "m_vecCSSClasses": 1328
        },
        "metadata": [
          {
            "name": "m_bDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nResolutionX",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nResolutionY",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_szLayoutFileName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_RenderAttrName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_TargetEntities",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseModelEntity>"
          },
          {
            "name": "m_nTargetChangeCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vecCSSClasses",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          }
        ],
        "parent": "CPointEntity"
      },
      "CInfoParticleTarget": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoPlayerCounterterrorist": {
        "fields": {},
        "metadata": [],
        "parent": "SpawnPoint"
      },
      "CInfoPlayerStart": {
        "fields": {
          "m_bDisabled": 1264,
          "m_bIsMaster": 1265,
          "m_pPawnSubclass": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoPlayerTerrorist": {
        "fields": {},
        "metadata": [],
        "parent": "SpawnPoint"
      },
      "CInfoSpawnGroupLandmark": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoSpawnGroupLoadUnload": {
        "fields": {
          "m_OnSpawnGroupLoadFinished": 1304,
          "m_OnSpawnGroupLoadStarted": 1264,
          "m_OnSpawnGroupUnloadFinished": 1384,
          "m_OnSpawnGroupUnloadStarted": 1344,
          "m_bAutoActivate": 1460,
          "m_bQueueActiveSpawnGroupChange": 1462,
          "m_bQueueFinishLoading": 1463,
          "m_bUnloadingStarted": 1461,
          "m_flTimeoutInterval": 1456,
          "m_iszLandmarkName": 1440,
          "m_iszSpawnGroupFilterName": 1432,
          "m_iszSpawnGroupName": 1424,
          "m_sFixedSpawnGroupName": 1448
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CInfoTarget": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoTargetServerOnly": {
        "fields": {},
        "metadata": [],
        "parent": "CServerOnlyPointEntity"
      },
      "CInfoTeleportDestination": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CInfoVisibilityBox": {
        "fields": {
          "m_bEnabled": 1284,
          "m_nMode": 1268,
          "m_vBoxSize": 1272
        },
        "metadata": [
          {
            "name": "m_nMode",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vBoxSize",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CInfoWorldLayer": {
        "fields": {
          "m_bCreateAsChildSpawnGroup": 1322,
          "m_bEntitiesSpawned": 1321,
          "m_bWorldLayerVisible": 1320,
          "m_hLayerSpawnGroup": 1324,
          "m_layerName": 1312,
          "m_pOutputOnEntitiesSpawned": 1264,
          "m_worldName": 1304
        },
        "metadata": [
          {
            "name": "m_worldName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_layerName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_bWorldLayerVisible",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bEntitiesSpawned",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CInstancedSceneEntity": {
        "fields": {
          "m_bHadOwner": 2644,
          "m_bIsBackground": 2656,
          "m_bRemoveOnCompletion": 2657,
          "m_flPostSpeakDelay": 2648,
          "m_flPreDelay": 2652,
          "m_hOwner": 2640,
          "m_hTarget": 2660
        },
        "metadata": [],
        "parent": "CSceneEntity"
      },
      "CInstructorEventEntity": {
        "fields": {
          "m_hTargetPlayer": 1280,
          "m_iszHintTargetEntity": 1272,
          "m_iszName": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CItem": {
        "fields": {
          "m_OnCacheInteraction": 2776,
          "m_OnGlovePulled": 2816,
          "m_OnPlayerPickup": 2728,
          "m_OnPlayerTouch": 2688,
          "m_bActivateWhenAtRest": 2768,
          "m_bPhysStartAsleep": 2880,
          "m_vOriginalSpawnAngles": 2868,
          "m_vOriginalSpawnOrigin": 2856
        },
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CItemAssaultSuit": {
        "fields": {},
        "metadata": [],
        "parent": "CItem"
      },
      "CItemDefuser": {
        "fields": {
          "m_entitySpottedState": 2896,
          "m_nSpotRules": 2920
        },
        "metadata": [],
        "parent": "CItem"
      },
      "CItemDefuserAlias_item_defuser": {
        "fields": {},
        "metadata": [],
        "parent": "CItemDefuser"
      },
      "CItemDogtags": {
        "fields": {
          "m_KillingPlayer": 2900,
          "m_OwningPlayer": 2896
        },
        "metadata": [
          {
            "name": "m_OwningPlayer",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_KillingPlayer",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          }
        ],
        "parent": "CItem"
      },
      "CItemGeneric": {
        "fields": {
          "m_OnPickup": 3032,
          "m_OnTimeout": 3072,
          "m_OnTriggerEndTouch": 3192,
          "m_OnTriggerStartTouch": 3112,
          "m_OnTriggerTouch": 3152,
          "m_bAutoStartAmbientSound": 2952,
          "m_bGlowWhenInTrigger": 3256,
          "m_bHasPickupRadius": 2917,
          "m_bHasTriggerRadius": 2916,
          "m_bPlayerCounterListenerAdded": 2932,
          "m_bPlayerInTriggerRadius": 2933,
          "m_bUseable": 3261,
          "m_flLastPickupCheck": 2928,
          "m_flPickupRadius": 3240,
          "m_flPickupRadiusSqr": 2920,
          "m_flTriggerRadius": 3244,
          "m_flTriggerRadiusSqr": 2924,
          "m_glowColor": 3257,
          "m_hPickupFilter": 3024,
          "m_hPickupParticleEffect": 2968,
          "m_hSpawnParticleEffect": 2936,
          "m_hTimeoutParticleEffect": 2992,
          "m_hTriggerHelper": 3264,
          "m_pAllowPickupScriptFunction": 3232,
          "m_pAmbientSoundEffect": 2944,
          "m_pPickupFilterName": 3016,
          "m_pPickupScriptFunction": 2984,
          "m_pPickupSoundEffect": 2976,
          "m_pSpawnScriptFunction": 2960,
          "m_pTimeoutScriptFunction": 3008,
          "m_pTimeoutSoundEffect": 3000,
          "m_pTriggerSoundEffect": 3248
        },
        "metadata": [],
        "parent": "CItem"
      },
      "CItemGenericTriggerHelper": {
        "fields": {
          "m_hParentItem": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CItemKevlar": {
        "fields": {},
        "metadata": [],
        "parent": "CItem"
      },
      "CItemSoda": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CItem_Healthshot": {
        "fields": {},
        "metadata": [],
        "parent": "CWeaponBaseItem"
      },
      "CKeepUpright": {
        "fields": {
          "m_angularLimit": 1316,
          "m_attachedObject": 1312,
          "m_bActive": 1320,
          "m_bDampAllRotation": 1321,
          "m_localTestAxis": 1284,
          "m_nameAttach": 1304,
          "m_worldGoalAxis": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CKnife": {
        "fields": {
          "m_bFirstAttack": 4152
        },
        "metadata": [
          {
            "name": "m_bFirstAttack",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CCSWeaponBase"
      },
      "CLightComponent": {
        "fields": {
          "__m_pChainEntity": 48,
          "m_Color": 109,
          "m_Pattern": 208,
          "m_SecondaryColor": 113,
          "m_SkyAmbientBounce": 396,
          "m_SkyColor": 388,
          "m_bAllowSSTGeneration": 281,
          "m_bEnabled": 308,
          "m_bFlicker": 309,
          "m_bMixedShadows": 401,
          "m_bPrecomputedFieldsValid": 310,
          "m_bPvsModifyEntity": 432,
          "m_bRenderDiffuse": 184,
          "m_bRenderToCubemaps": 280,
          "m_bRenderTransmissive": 192,
          "m_bUseSecondaryColor": 400,
          "m_bUsesBakedShadowing": 260,
          "m_flAttenuation0": 140,
          "m_flAttenuation1": 144,
          "m_flAttenuation2": 148,
          "m_flBrightness": 120,
          "m_flBrightnessMult": 128,
          "m_flBrightnessScale": 124,
          "m_flCapsuleLength": 408,
          "m_flFadeMaxDist": 296,
          "m_flFadeMinDist": 292,
          "m_flFalloff": 136,
          "m_flFogContributionStength": 380,
          "m_flLightStyleStartTime": 404,
          "m_flMinRoughness": 412,
          "m_flNearClipPlane": 384,
          "m_flOrthoLightHeight": 200,
          "m_flOrthoLightWidth": 196,
          "m_flPhi": 156,
          "m_flPrecomputedMaxRange": 372,
          "m_flRange": 132,
          "m_flShadowCascadeCrossFade": 220,
          "m_flShadowCascadeDistance0": 228,
          "m_flShadowCascadeDistance1": 232,
          "m_flShadowCascadeDistance2": 236,
          "m_flShadowCascadeDistance3": 240,
          "m_flShadowCascadeDistanceFade": 224,
          "m_flShadowFadeMaxDist": 304,
          "m_flShadowFadeMinDist": 300,
          "m_flSkyIntensity": 392,
          "m_flTheta": 152,
          "m_hLightCookie": 160,
          "m_nBakedShadowIndex": 268,
          "m_nCascadeRenderStaticObjects": 216,
          "m_nCascades": 168,
          "m_nCastShadows": 172,
          "m_nDirectLight": 284,
          "m_nFogLightingMode": 376,
          "m_nIndirectLight": 288,
          "m_nLightMapUniqueId": 276,
          "m_nLightPathUniqueId": 272,
          "m_nRenderSpecular": 188,
          "m_nShadowCascadeResolution0": 244,
          "m_nShadowCascadeResolution1": 248,
          "m_nShadowCascadeResolution2": 252,
          "m_nShadowCascadeResolution3": 256,
          "m_nShadowHeight": 180,
          "m_nShadowPriority": 264,
          "m_nShadowWidth": 176,
          "m_nStyle": 204,
          "m_vPrecomputedBoundsMaxs": 324,
          "m_vPrecomputedBoundsMins": 312,
          "m_vPrecomputedOBBAngles": 348,
          "m_vPrecomputedOBBExtent": 360,
          "m_vPrecomputedOBBOrigin": 336
        },
        "metadata": [
          {
            "name": "m_Color",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_SecondaryColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flBrightness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flBrightnessScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flBrightnessMult",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flRange",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFalloff",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flAttenuation0",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flAttenuation1",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flAttenuation2",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flTheta",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flPhi",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_hLightCookie",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_nCascades",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nCastShadows",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowWidth",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowHeight",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bRenderDiffuse",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nRenderSpecular",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bRenderTransmissive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flOrthoLightWidth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flOrthoLightHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nStyle",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_Pattern",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_nCascadeRenderStaticObjects",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flShadowCascadeCrossFade",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowCascadeDistanceFade",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowCascadeDistance0",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowCascadeDistance1",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowCascadeDistance2",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowCascadeDistance3",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nShadowCascadeResolution0",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowCascadeResolution1",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowCascadeResolution2",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nShadowCascadeResolution3",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bUsesBakedShadowing",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nShadowPriority",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nBakedShadowIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nLightPathUniqueId",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nLightMapUniqueId",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_bRenderToCubemaps",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bAllowSSTGeneration",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nDirectLight",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nIndirectLight",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFadeMinDist",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeMaxDist",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowFadeMinDist",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flShadowFadeMaxDist",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bFlicker",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bPrecomputedFieldsValid",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vPrecomputedBoundsMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedBoundsMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vPrecomputedOBBAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_vPrecomputedOBBExtent",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flPrecomputedMaxRange",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nFogLightingMode",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flFogContributionStength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flNearClipPlane",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_SkyColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flSkyIntensity",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_SkyAmbientBounce",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_bUseSecondaryColor",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMixedShadows",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flLightStyleStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flCapsuleLength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flMinRoughness",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CEntityComponent"
      },
      "CLightDirectionalEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CLightEntity"
      },
      "CLightEntity": {
        "fields": {
          "m_CLightComponent": 2024
        },
        "metadata": [
          {
            "name": "m_CLightComponent",
            "type": "NetworkVarNames",
            "type_name": "CLightComponent::Storage_t"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CLightEnvironmentEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CLightDirectionalEntity"
      },
      "CLightOrthoEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CLightEntity"
      },
      "CLightSpotEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CLightEntity"
      },
      "CLogicAchievement": {
        "fields": {
          "m_OnFired": 1280,
          "m_bDisabled": 1264,
          "m_iszAchievementEventID": 1272
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicActiveAutosave": {
        "fields": {
          "m_TriggerHitPoints": 1280,
          "m_flDangerousTime": 1292,
          "m_flStartTime": 1288,
          "m_flTimeToTrigger": 1284
        },
        "metadata": [],
        "parent": "CLogicAutosave"
      },
      "CLogicAuto": {
        "fields": {
          "m_OnBackgroundMap": 1464,
          "m_OnDemoMapSpawn": 1304,
          "m_OnLoadGame": 1384,
          "m_OnMapSpawn": 1264,
          "m_OnMapTransition": 1424,
          "m_OnMultiNewMap": 1504,
          "m_OnMultiNewRound": 1544,
          "m_OnNewGame": 1344,
          "m_OnVREnabled": 1584,
          "m_OnVRNotEnabled": 1624,
          "m_globalstate": 1664
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CLogicAutosave": {
        "fields": {
          "m_bForceNewLevelUnit": 1264,
          "m_minHitPoints": 1268,
          "m_minHitPointsToCommit": 1272
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicBranch": {
        "fields": {
          "m_Listeners": 1272,
          "m_OnFalse": 1336,
          "m_OnTrue": 1296,
          "m_bInValue": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicBranchList": {
        "fields": {
          "m_LogicBranchList": 1392,
          "m_OnAllFalse": 1464,
          "m_OnAllTrue": 1424,
          "m_OnMixed": 1504,
          "m_eLastState": 1416,
          "m_nLogicBranchNames": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicCase": {
        "fields": {
          "m_OnCase": 1560,
          "m_OnDefault": 2840,
          "m_nCase": 1264,
          "m_nLastShuffleCase": 1524,
          "m_nShuffleCases": 1520,
          "m_uchShuffleCaseMap": 1528
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicCollisionPair": {
        "fields": {
          "m_disabled": 1281,
          "m_nameAttach1": 1264,
          "m_nameAttach2": 1272,
          "m_succeeded": 1282,
          "m_supportMultipleEntitiesWithSameName": 1280
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicCompare": {
        "fields": {
          "m_OnEqualTo": 1312,
          "m_OnGreaterThan": 1392,
          "m_OnLessThan": 1272,
          "m_OnNotEqualTo": 1352,
          "m_flCompareValue": 1268,
          "m_flInValue": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicDistanceAutosave": {
        "fields": {
          "m_bCheckCough": 1277,
          "m_bForceNewLevelUnit": 1276,
          "m_bThinkDangerous": 1278,
          "m_flDangerousTime": 1280,
          "m_flDistanceToPlayer": 1272,
          "m_iszTargetEntity": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicDistanceCheck": {
        "fields": {
          "m_InZone1": 1288,
          "m_InZone2": 1328,
          "m_InZone3": 1368,
          "m_flZone1Distance": 1280,
          "m_flZone2Distance": 1284,
          "m_iszEntityA": 1264,
          "m_iszEntityB": 1272
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicEventListener": {
        "fields": {
          "m_OnEventFired": 1296,
          "m_bIsEnabled": 1288,
          "m_nTeam": 1292,
          "m_strEventName": 1280
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicGameEvent": {
        "fields": {
          "m_iszEventName": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicGameEventListener": {
        "fields": {
          "m_OnEventFired": 1280,
          "m_bEnabled": 1336,
          "m_bStartDisabled": 1337,
          "m_iszGameEventItem": 1328,
          "m_iszGameEventName": 1320
        },
        "metadata": [
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CLogicalEntity"
      },
      "CLogicLineToEntity": {
        "fields": {
          "m_EndEntity": 1316,
          "m_Line": 1264,
          "m_SourceName": 1304,
          "m_StartEntity": 1312
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicMeasureMovement": {
        "fields": {
          "m_flScale": 1304,
          "m_hMeasureReference": 1292,
          "m_hMeasureTarget": 1288,
          "m_hTarget": 1296,
          "m_hTargetReference": 1300,
          "m_nMeasureType": 1308,
          "m_strMeasureReference": 1272,
          "m_strMeasureTarget": 1264,
          "m_strTargetReference": 1280
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicNPCCounter": {
        "fields": {
          "m_OnFactorAll": 1344,
          "m_OnFactor_1": 1504,
          "m_OnFactor_2": 1664,
          "m_OnFactor_3": 1824,
          "m_OnMaxCountAll": 1304,
          "m_OnMaxCount_1": 1464,
          "m_OnMaxCount_2": 1624,
          "m_OnMaxCount_3": 1784,
          "m_OnMinCountAll": 1264,
          "m_OnMinCount_1": 1424,
          "m_OnMinCount_2": 1584,
          "m_OnMinCount_3": 1744,
          "m_OnMinPlayerDistAll": 1384,
          "m_OnMinPlayerDist_1": 1544,
          "m_OnMinPlayerDist_2": 1704,
          "m_OnMinPlayerDist_3": 1864,
          "m_bDisabled": 1924,
          "m_bInvertState_1": 1964,
          "m_bInvertState_2": 2004,
          "m_bInvertState_3": 2044,
          "m_flDefaultDist_1": 1988,
          "m_flDefaultDist_2": 2028,
          "m_flDefaultDist_3": 2068,
          "m_flDistanceMax": 1920,
          "m_hSource": 1904,
          "m_iszNPCClassname_1": 1952,
          "m_iszNPCClassname_2": 1992,
          "m_iszNPCClassname_3": 2032,
          "m_iszSourceEntityName": 1912,
          "m_nMaxCountAll": 1932,
          "m_nMaxCount_1": 1972,
          "m_nMaxCount_2": 2012,
          "m_nMaxCount_3": 2052,
          "m_nMaxFactorAll": 1940,
          "m_nMaxFactor_1": 1980,
          "m_nMaxFactor_2": 2020,
          "m_nMaxFactor_3": 2060,
          "m_nMinCountAll": 1928,
          "m_nMinCount_1": 1968,
          "m_nMinCount_2": 2008,
          "m_nMinCount_3": 2048,
          "m_nMinFactorAll": 1936,
          "m_nMinFactor_1": 1976,
          "m_nMinFactor_2": 2016,
          "m_nMinFactor_3": 2056,
          "m_nNPCState_1": 1960,
          "m_nNPCState_2": 2000,
          "m_nNPCState_3": 2040
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CLogicNPCCounterAABB": {
        "fields": {
          "m_vDistanceOuterMaxs": 2108,
          "m_vDistanceOuterMins": 2096,
          "m_vOuterMaxs": 2132,
          "m_vOuterMins": 2120
        },
        "metadata": [],
        "parent": "CLogicNPCCounter"
      },
      "CLogicNPCCounterOBB": {
        "fields": {},
        "metadata": [],
        "parent": "CLogicNPCCounterAABB"
      },
      "CLogicNavigation": {
        "fields": {
          "m_isOn": 1272,
          "m_navProperty": 1276
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicPlayerProxy": {
        "fields": {
          "m_PlayerDied": 1352,
          "m_PlayerHasAmmo": 1272,
          "m_PlayerHasNoAmmo": 1312,
          "m_RequestedPlayerHealth": 1392,
          "m_hPlayer": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicProximity": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CLogicRelay": {
        "fields": {
          "m_bDisabled": 1264,
          "m_bFastRetrigger": 1267,
          "m_bPassthoughCaller": 1268,
          "m_bTriggerOnce": 1266,
          "m_bWaitForRefire": 1265
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CLogicRelayAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CLogicScript": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CLogicalEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CServerOnlyEntity"
      },
      "CMapInfo": {
        "fields": {
          "m_bDisableAutoGeneratedDMSpawns": 1277,
          "m_bFadePlayerVisibilityFarZ": 1288,
          "m_bRainTraceToSkyEnabled": 1289,
          "m_bUseNormalSpawnsForDM": 1276,
          "m_flBombRadius": 1268,
          "m_flBotMaxVisionDistance": 1280,
          "m_iBuyingStatus": 1264,
          "m_iHostageCount": 1284,
          "m_iPetPopulation": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CMapSharedEnvironment": {
        "fields": {
          "m_targetMapName": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CMapVetoPickController": {
        "fields": {
          "m_OnLevelTransition": 3824,
          "m_OnMapPicked": 3704,
          "m_OnMapVetoed": 3664,
          "m_OnNewPhaseStarted": 3784,
          "m_OnSidesPicked": 3744,
          "m_bNeedToPlayFiveSecondsRemaining": 1265,
          "m_bPlayedIntroVcd": 1264,
          "m_bPreMatchDraftStateChanged": 1304,
          "m_dblPreMatchDraftSequenceTime": 1296,
          "m_nAccountIDs": 1600,
          "m_nCurrentPhase": 3648,
          "m_nDraftType": 1308,
          "m_nMapId0": 1856,
          "m_nMapId1": 2112,
          "m_nMapId2": 2368,
          "m_nMapId3": 2624,
          "m_nMapId4": 2880,
          "m_nMapId5": 3136,
          "m_nPhaseDurationTicks": 3656,
          "m_nPhaseStartTick": 3652,
          "m_nStartingSide0": 3392,
          "m_nTeamWinningCoinToss": 1312,
          "m_nTeamWithFirstChoice": 1316,
          "m_nVoteMapIdsList": 1572
        },
        "metadata": [
          {
            "name": "m_nDraftType",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nTeamWinningCoinToss",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nTeamWithFirstChoice",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nVoteMapIdsList",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nAccountIDs",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMapId0",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMapId1",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMapId2",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMapId3",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMapId4",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nMapId5",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nStartingSide0",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nCurrentPhase",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPhaseStartTick",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPhaseDurationTicks",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CMarkupVolume": {
        "fields": {
          "m_bDisabled": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CMarkupVolumeTagged": {
        "fields": {
          "m_GroupNames": 2032,
          "m_Tags": 2056,
          "m_bGroupByPrefab": 2081,
          "m_bGroupByVolume": 2082,
          "m_bGroupOtherGroups": 2083,
          "m_bIsGroup": 2080,
          "m_bIsInGroup": 2084
        },
        "metadata": [],
        "parent": "CMarkupVolume"
      },
      "CMarkupVolumeTagged_Nav": {
        "fields": {
          "m_nScopes": 2088
        },
        "metadata": [],
        "parent": "CMarkupVolumeTagged"
      },
      "CMarkupVolumeTagged_NavGame": {
        "fields": {
          "m_bFloodFillAttribute": 2129,
          "m_bSplitNavSpace": 2130,
          "m_nScopes": 2128
        },
        "metadata": [],
        "parent": "CMarkupVolumeWithRef"
      },
      "CMarkupVolumeWithRef": {
        "fields": {
          "m_bUseRef": 2096,
          "m_flRefDot": 2124,
          "m_vRefPosEntitySpace": 2100,
          "m_vRefPosWorldSpace": 2112
        },
        "metadata": [],
        "parent": "CMarkupVolumeTagged"
      },
      "CMathColorBlend": {
        "fields": {
          "m_OutColor1": 1272,
          "m_OutColor2": 1276,
          "m_OutValue": 1280,
          "m_flInMax": 1268,
          "m_flInMin": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CMathCounter": {
        "fields": {
          "m_OnChangedFromMax": 1480,
          "m_OnChangedFromMin": 1440,
          "m_OnGetValue": 1320,
          "m_OnHitMax": 1400,
          "m_OnHitMin": 1360,
          "m_OutValue": 1280,
          "m_bDisabled": 1274,
          "m_bHitMax": 1273,
          "m_bHitMin": 1272,
          "m_flMax": 1268,
          "m_flMin": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CMathRemap": {
        "fields": {
          "m_OnFellBelowMax": 1448,
          "m_OnFellBelowMin": 1408,
          "m_OnRoseAboveMax": 1368,
          "m_OnRoseAboveMin": 1328,
          "m_OutValue": 1288,
          "m_bEnabled": 1284,
          "m_flInMax": 1268,
          "m_flInMin": 1264,
          "m_flOldInValue": 1280,
          "m_flOut1": 1272,
          "m_flOut2": 1276
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CMessage": {
        "fields": {
          "m_MessageAttenuation": 1276,
          "m_MessageVolume": 1272,
          "m_OnShowMessage": 1296,
          "m_Radius": 1280,
          "m_iszMessage": 1264,
          "m_sNoise": 1288
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CMessageEntity": {
        "fields": {
          "m_bDeveloperOnly": 1281,
          "m_bEnabled": 1282,
          "m_drawText": 1280,
          "m_messageText": 1272,
          "m_radius": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CModelPointEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CModelState": {
        "fields": {
          "m_MeshGroupMask": 464,
          "m_ModelName": 216,
          "m_bClientClothCreationSuppressed": 293,
          "m_hModel": 208,
          "m_nBodyGroupChoices": 544,
          "m_nClothUpdateFlags": 620,
          "m_nForceLOD": 619,
          "m_nIdealMotionType": 618
        },
        "metadata": [
          {
            "name": "m_hModel",
            "type": "NetworkVarNames",
            "type_name": "HModelStrong"
          },
          {
            "name": "m_bClientClothCreationSuppressed",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_MeshGroupMask",
            "type": "NetworkVarNames",
            "type_name": "MeshGroupMask_t"
          },
          {
            "name": "m_nBodyGroupChoices",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_nIdealMotionType",
            "type": "NetworkVarNames",
            "type_name": "int8"
          }
        ],
        "parent": ""
      },
      "CMolotovGrenade": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseCSGrenade"
      },
      "CMolotovProjectile": {
        "fields": {
          "m_bDetonated": 3128,
          "m_bHasBouncedOffPlayer": 3360,
          "m_bIsIncGrenade": 3104,
          "m_stillTimer": 3136
        },
        "metadata": [
          {
            "name": "m_bIsIncGrenade",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseCSGrenadeProjectile"
      },
      "CMomentaryRotButton": {
        "fields": {
          "m_IdealYaw": 2716,
          "m_OnFullyClosed": 2608,
          "m_OnFullyOpen": 2568,
          "m_OnReachedPosition": 2648,
          "m_OnUnpressed": 2528,
          "m_Position": 2488,
          "m_bUpdateTarget": 2728,
          "m_direction": 2732,
          "m_end": 2704,
          "m_flStartPosition": 2740,
          "m_lastUsed": 2688,
          "m_returnSpeed": 2736,
          "m_sNoise": 2720,
          "m_start": 2692
        },
        "metadata": [],
        "parent": "CRotButton"
      },
      "CMoverPathNode": {
        "fields": {
          "m_OnPassThrough": 1384,
          "m_OnPassThroughForward": 1424,
          "m_OnPassThroughReverse": 1464,
          "m_OnStartFromOrInSegment": 1304,
          "m_OnStoppedAtOrInSegment": 1344,
          "m_hMover": 1504,
          "m_szParentPathUniqueID": 1288,
          "m_szPathNodeParameter": 1296,
          "m_vInTangentLocal": 1264,
          "m_vOutTangentLocal": 1276,
          "m_xWSPrevParent": 1520
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CMultiLightProxy": {
        "fields": {
          "m_bPerformScreenFade": 1288,
          "m_flBrightnessDelta": 1284,
          "m_flCurrentBrightnessMultiplier": 1296,
          "m_flLightRadiusFilter": 1280,
          "m_flTargetBrightnessMultiplier": 1292,
          "m_iszLightClassFilter": 1272,
          "m_iszLightNameFilter": 1264,
          "m_vecLights": 1304
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CMultiSource": {
        "fields": {
          "m_OnTrigger": 1520,
          "m_globalstate": 1568,
          "m_iTotal": 1560,
          "m_rgEntities": 1264,
          "m_rgTriggered": 1392
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CMultiplayRules": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CNavLinkAreaEntity": {
        "fields": {
          "m_OnNavLinkFinish": 1424,
          "m_OnNavLinkStart": 1384,
          "m_bAllowCrossMovableConnections": 1361,
          "m_bEnabled": 1360,
          "m_bIsTerminus": 1464,
          "m_flWidth": 1264,
          "m_hFilter": 1376,
          "m_nSplits": 1468,
          "m_qLocatorAnglesOffset": 1280,
          "m_strFilterName": 1368,
          "m_strMovementForward": 1296,
          "m_strMovementReverse": 1304,
          "m_vLocatorOffset": 1268
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CNavSpaceInfo": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CNavWalkable": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CNetworkedSequenceOperation": {
        "fields": {
          "m_bDiscontinuity": 29,
          "m_bSequenceChangeNetworked": 28,
          "m_flCycle": 16,
          "m_flPrevCycle": 12,
          "m_flPrevCycleForAnimEventDetection": 36,
          "m_flPrevCycleFromDiscontinuity": 32,
          "m_flWeight": 20,
          "m_hSequence": 8
        },
        "metadata": [
          {
            "name": "m_hSequence",
            "type": "NetworkVarNames",
            "type_name": "HSequence"
          },
          {
            "name": "m_flPrevCycle",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flCycle",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": ""
      },
      "CNullEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "COmniLight": {
        "fields": {
          "m_bShowLight": 2840,
          "m_flInnerAngle": 2832,
          "m_flOuterAngle": 2836
        },
        "metadata": [
          {
            "name": "m_flInnerAngle",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flOuterAngle",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bShowLight",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBarnLight"
      },
      "COrnamentProp": {
        "fields": {
          "m_initialOwner": 3392
        },
        "metadata": [],
        "parent": "CDynamicProp"
      },
      "CParticleSystem": {
        "fields": {
          "m_bActive": 2536,
          "m_bAnimateDuringGameplayPause": 2548,
          "m_bFrozen": 2537,
          "m_bNoFreeze": 2877,
          "m_bNoRamp": 2878,
          "m_bNoSave": 2876,
          "m_bStartActive": 2879,
          "m_clrTint": 3420,
          "m_flFreezeTransitionDuration": 2540,
          "m_flPreSimTime": 2564,
          "m_flStartTime": 2560,
          "m_hControlPointEnts": 2620,
          "m_iEffectIndex": 2552,
          "m_iServerControlPointAssignments": 2616,
          "m_iszControlPointNames": 2888,
          "m_iszEffectName": 2880,
          "m_nDataCP": 3400,
          "m_nStopType": 2544,
          "m_nTintCP": 3416,
          "m_szSnapshotFileName": 2024,
          "m_vServerControlPoints": 2568,
          "m_vecDataCPValue": 3404
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_szSnapshotFileName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bFrozen",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFreezeTransitionDuration",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nStopType",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bAnimateDuringGameplayPause",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iEffectIndex",
            "type": "NetworkVarNames",
            "type_name": "HParticleSystemDefinitionStrong"
          },
          {
            "name": "m_flStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flPreSimTime",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_vServerControlPoints",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_iServerControlPointAssignments",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_hControlPointEnts",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_bNoSave",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bNoFreeze",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bNoRamp",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CPathCorner": {
        "fields": {
          "m_OnPass": 1272,
          "m_flRadius": 1268,
          "m_flWait": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPathCornerCrash": {
        "fields": {},
        "metadata": [],
        "parent": "CPathCorner"
      },
      "CPathKeyFrame": {
        "fields": {
          "m_Angles": 1276,
          "m_Origin": 1264,
          "m_flMoveSpeed": 1344,
          "m_flNextTime": 1320,
          "m_iNextKey": 1312,
          "m_pNextKey": 1328,
          "m_pPrevKey": 1336,
          "m_qAngle": 1296
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CPathMover": {
        "fields": {
          "m_vecMovers": 1560,
          "m_vecPathNodes": 1536,
          "m_xInitialPathWorldToLocal": 1584
        },
        "metadata": [],
        "parent": "CPathSimple"
      },
      "CPathParticleRope": {
        "fields": {
          "m_ColorTint": 1324,
          "m_PathNodes_Color": 1416,
          "m_PathNodes_Name": 1288,
          "m_PathNodes_PinEnabled": 1440,
          "m_PathNodes_Position": 1344,
          "m_PathNodes_RadiusScale": 1464,
          "m_PathNodes_TangentIn": 1368,
          "m_PathNodes_TangentOut": 1392,
          "m_bStartActive": 1272,
          "m_flMaxSimulationTime": 1276,
          "m_flParticleSpacing": 1312,
          "m_flRadius": 1320,
          "m_flSlack": 1316,
          "m_iEffectIndex": 1336,
          "m_iszEffectName": 1280,
          "m_nEffectState": 1328
        },
        "metadata": [
          {
            "name": "m_flParticleSpacing",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSlack",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_ColorTint",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_nEffectState",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEffectIndex",
            "type": "NetworkVarNames",
            "type_name": "HParticleSystemDefinitionStrong"
          },
          {
            "name": "m_PathNodes_Position",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_PathNodes_TangentIn",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_PathNodes_TangentOut",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_PathNodes_Color",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_PathNodes_PinEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_PathNodes_RadiusScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPathParticleRopeAlias_path_particle_rope_clientside": {
        "fields": {},
        "metadata": [],
        "parent": "CPathParticleRope"
      },
      "CPathQueryComponent": {
        "fields": {},
        "metadata": [],
        "parent": "CEntityComponent"
      },
      "CPathSimple": {
        "fields": {
          "m_CPathQueryComponent": 1280,
          "m_bClosedLoop": 1528,
          "m_pathString": 1520
        },
        "metadata": [
          {
            "name": "m_CPathQueryComponent",
            "type": "NetworkVarNames",
            "type_name": "CPathQueryComponent::Storage_t"
          },
          {
            "name": "m_pathString",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPathSimpleAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPathTrack": {
        "fields": {
          "m_OnPass": 1312,
          "m_altName": 1296,
          "m_eOrientationType": 1308,
          "m_flRadius": 1288,
          "m_length": 1292,
          "m_nIterVal": 1304,
          "m_paltpath": 1280,
          "m_pnext": 1264,
          "m_pprevious": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPhysBallSocket": {
        "fields": {
          "m_bEnableSwingLimit": 1380,
          "m_bEnableTwistLimit": 1388,
          "m_flJointFriction": 1376,
          "m_flMaxTwistAngle": 1396,
          "m_flMinTwistAngle": 1392,
          "m_flSwingLimit": 1384
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysBox": {
        "fields": {
          "m_OnAwakened": 2328,
          "m_OnDamaged": 2288,
          "m_OnMotionEnabled": 2368,
          "m_OnPlayerUse": 2408,
          "m_OnStartTouch": 2448,
          "m_angHoverPoseAngles": 2264,
          "m_bEnableUseOutput": 2277,
          "m_bNotSolidToWorld": 2276,
          "m_damageToEnableMotion": 2244,
          "m_damageType": 2240,
          "m_flForceToEnableMotion": 2248,
          "m_flTouchOutputPerEntityDelay": 2280,
          "m_hCarryingPlayer": 2488,
          "m_nHoverPoseFlags": 2278,
          "m_vHoverPosePosition": 2252
        },
        "metadata": [],
        "parent": "CBreakable"
      },
      "CPhysConstraint": {
        "fields": {
          "m_OnBreak": 1336,
          "m_bSnapObjectPositions": 1332,
          "m_breakSound": 1312,
          "m_forceLimit": 1320,
          "m_hAttach1": 1288,
          "m_hAttach2": 1292,
          "m_minTeleportDistance": 1328,
          "m_nameAttach1": 1272,
          "m_nameAttach2": 1280,
          "m_nameAttachment1": 1296,
          "m_nameAttachment2": 1304,
          "m_torqueLimit": 1324
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CPhysExplosion": {
        "fields": {
          "m_OnPushedPlayer": 1304,
          "m_bAffectInvulnerableEnts": 1297,
          "m_bConvertToDebrisWhenPossible": 1296,
          "m_bExplodeOnSpawn": 1264,
          "m_flDamage": 1272,
          "m_flInnerRadius": 1288,
          "m_flMagnitude": 1268,
          "m_flPushScale": 1292,
          "m_radius": 1276,
          "m_targetEntityName": 1280
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPhysFixed": {
        "fields": {
          "m_bEnableAngularConstraint": 1393,
          "m_bEnableLinearConstraint": 1392,
          "m_flAngularDampingRatio": 1388,
          "m_flAngularFrequency": 1384,
          "m_flLinearDampingRatio": 1380,
          "m_flLinearFrequency": 1376,
          "m_sBoneName1": 1400,
          "m_sBoneName2": 1408
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysForce": {
        "fields": {
          "m_attachedObject": 1288,
          "m_force": 1280,
          "m_forceTime": 1284,
          "m_integrator": 1296,
          "m_nameAttach": 1272,
          "m_wasRestored": 1292
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPhysHinge": {
        "fields": {
          "m_NotifyMaxLimitReached": 1576,
          "m_NotifyMinLimitReached": 1536,
          "m_OnStartMoving": 1728,
          "m_OnStopMoving": 1768,
          "m_bAtMaxLimit": 1617,
          "m_bAtMinLimit": 1616,
          "m_bIsAxisLocal": 1692,
          "m_flAngleSpeed": 1716,
          "m_flAngleSpeedThreshold": 1720,
          "m_flInitialRotation": 1704,
          "m_flMaxRotation": 1700,
          "m_flMinRotation": 1696,
          "m_flMotorDampingRatio": 1712,
          "m_flMotorFrequency": 1708,
          "m_hinge": 1620,
          "m_hingeFriction": 1684,
          "m_soundInfo": 1384,
          "m_systemLoadScale": 1688
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysHingeAlias_phys_hinge_local": {
        "fields": {},
        "metadata": [],
        "parent": "CPhysHinge"
      },
      "CPhysImpact": {
        "fields": {
          "m_damage": 1264,
          "m_directionEntityName": 1272,
          "m_distance": 1268
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPhysLength": {
        "fields": {
          "m_addLength": 1412,
          "m_bEnableCollision": 1424,
          "m_minLength": 1416,
          "m_offset": 1376,
          "m_totalLength": 1420,
          "m_vecAttach": 1400
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysMagnet": {
        "fields": {
          "m_MagnettedEntities": 2776,
          "m_OnMagnetAttach": 2680,
          "m_OnMagnetDetach": 2720,
          "m_bActive": 2800,
          "m_bHasHitSomething": 2801,
          "m_flNextSuckTime": 2812,
          "m_flRadius": 2808,
          "m_flTotalMass": 2804,
          "m_forceLimit": 2764,
          "m_iMaxObjectsAttached": 2816,
          "m_massScale": 2760,
          "m_torqueLimit": 2768
        },
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CPhysMotor": {
        "fields": {
          "m_additionalAcceleration": 1300,
          "m_angularAcceleration": 1304,
          "m_flMotorFriction": 1296,
          "m_flSpeedWhenSpinUpOrSpinDownStarted": 1316,
          "m_flTargetSpeed": 1312,
          "m_flTorqueScale": 1308,
          "m_hAnchorObject": 1284,
          "m_hAttachedObject": 1280,
          "m_motor": 1336,
          "m_nameAnchor": 1272,
          "m_nameAttach": 1264,
          "m_spinDown": 1292,
          "m_spinUp": 1288
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CPhysMotorAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPhysPulley": {
        "fields": {
          "m_addLength": 1412,
          "m_gearRatio": 1416,
          "m_offset": 1388,
          "m_position2": 1376
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysSlideConstraint": {
        "fields": {
          "m_axisEnd": 1384,
          "m_bEnableAngularConstraint": 1409,
          "m_bEnableLinearConstraint": 1408,
          "m_bUseEntityPivot": 1420,
          "m_flMotorDampingRatio": 1416,
          "m_flMotorFrequency": 1412,
          "m_initialOffset": 1404,
          "m_slideFriction": 1396,
          "m_soundInfo": 1424,
          "m_systemLoadScale": 1400
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysThruster": {
        "fields": {
          "m_localOrigin": 1360
        },
        "metadata": [],
        "parent": "CPhysForce"
      },
      "CPhysTorque": {
        "fields": {
          "m_axis": 1360
        },
        "metadata": [],
        "parent": "CPhysForce"
      },
      "CPhysWheelConstraint": {
        "fields": {
          "m_bEnableSteeringLimit": 1400,
          "m_bEnableSuspensionLimit": 1388,
          "m_flMaxSteeringAngle": 1408,
          "m_flMaxSuspensionOffset": 1396,
          "m_flMinSteeringAngle": 1404,
          "m_flMinSuspensionOffset": 1392,
          "m_flSpinAxisFriction": 1416,
          "m_flSteeringAxisFriction": 1412,
          "m_flSuspensionDampingRatio": 1380,
          "m_flSuspensionFrequency": 1376,
          "m_flSuspensionHeightOffset": 1384,
          "m_hSteeringMimicsEntity": 1420
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CPhysicalButton": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseButton"
      },
      "CPhysicsEntitySolver": {
        "fields": {
          "m_cancelTime": 1300,
          "m_hMovingEntity": 1288,
          "m_hPhysicsBlocker": 1292,
          "m_separationDuration": 1296
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CPhysicsProp": {
        "fields": {
          "m_CrateType": 3492,
          "m_MotionEnabled": 3144,
          "m_OnAsleep": 3264,
          "m_OnAwake": 3224,
          "m_OnAwakened": 3184,
          "m_OnOutOfWorld": 3344,
          "m_OnPlayerPickup": 3384,
          "m_OnPlayerUse": 3304,
          "m_bAcceptDamageFromHeldObjects": 3487,
          "m_bAttachedToReferenceFrame": 3546,
          "m_bAwake": 3545,
          "m_bDroppedByPlayer": 3449,
          "m_bEnableUseOutput": 3488,
          "m_bFirstCollisionAfterLaunch": 3451,
          "m_bForceNavIgnore": 3424,
          "m_bForceNpcExclude": 3426,
          "m_bHasBeenAwakened": 3452,
          "m_bIsOverrideProp": 3453,
          "m_bMuteImpactEffects": 3477,
          "m_bNoNavmeshBlocker": 3425,
          "m_bRemovableForAmmoBalancing": 3544,
          "m_bShouldAutoConvertBackFromDebris": 3476,
          "m_bThrownByPlayer": 3448,
          "m_bTouchedByPlayer": 3450,
          "m_buoyancyScale": 3432,
          "m_damageToEnableMotion": 3440,
          "m_damageType": 3436,
          "m_fNextCheckDisableMotionContactsTime": 3456,
          "m_flForceToEnableMotion": 3444,
          "m_glowColor": 3472,
          "m_iInitialGlowState": 3460,
          "m_massScale": 3428,
          "m_nDynamicContinuousContactBehavior": 3454,
          "m_nGlowRange": 3464,
          "m_nGlowRangeMin": 3468,
          "m_nItemCount": 3528,
          "m_strItemClass": 3496
        },
        "metadata": [
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkExcludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_bAwake",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBreakableProp"
      },
      "CPhysicsPropMultiplayer": {
        "fields": {},
        "metadata": [],
        "parent": "CPhysicsProp"
      },
      "CPhysicsPropOverride": {
        "fields": {},
        "metadata": [],
        "parent": "CPhysicsProp"
      },
      "CPhysicsPropRespawnable": {
        "fields": {
          "m_flRespawnDuration": 3600,
          "m_vOriginalMaxs": 3588,
          "m_vOriginalMins": 3576,
          "m_vOriginalSpawnAngles": 3564,
          "m_vOriginalSpawnOrigin": 3552
        },
        "metadata": [],
        "parent": "CPhysicsProp"
      },
      "CPhysicsSpring": {
        "fields": {
          "m_end": 1316,
          "m_flDampingRatio": 1276,
          "m_flFrequency": 1272,
          "m_flRestLength": 1280,
          "m_nameAttachEnd": 1296,
          "m_nameAttachStart": 1288,
          "m_start": 1304,
          "m_teleportTick": 1328
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CPhysicsWire": {
        "fields": {
          "m_nDensity": 1264
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CPlantedC4": {
        "fields": {
          "m_AttributeManager": 2704,
          "m_OnBombBeginDefuse": 3504,
          "m_OnBombDefuseAborted": 3544,
          "m_OnBombDefused": 3464,
          "m_angCatchUpToPlayerEye": 3680,
          "m_bBeingDefused": 3628,
          "m_bBombDefused": 3652,
          "m_bBombTicking": 2688,
          "m_bCannotBeDefused": 3584,
          "m_bHasExploded": 3621,
          "m_bTrainingPlacedByPlayer": 3620,
          "m_bVoiceAlertFired": 3664,
          "m_bVoiceAlertPlayed": 3665,
          "m_entitySpottedState": 3592,
          "m_fLastDefuseTime": 3636,
          "m_flC4Blow": 2692,
          "m_flDefuseCountDown": 3648,
          "m_flDefuseLength": 3644,
          "m_flLastSpinDetectionTime": 3692,
          "m_flNextBotBeepTime": 3672,
          "m_flTimerLength": 3624,
          "m_hBombDefuser": 3656,
          "m_iProgressBarTime": 3660,
          "m_nBombSite": 2696,
          "m_nSourceSoundscapeHash": 2700,
          "m_nSpotRules": 3616
        },
        "metadata": [
          {
            "name": "m_bBombTicking",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flC4Blow",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_nBombSite",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nSourceSoundscapeHash",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_AttributeManager",
            "type": "NetworkVarNames",
            "type_name": "CAttributeContainer"
          },
          {
            "name": "m_bCannotBeDefused",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_entitySpottedState",
            "type": "NetworkVarNames",
            "type_name": "EntitySpottedState_t"
          },
          {
            "name": "m_bHasExploded",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flTimerLength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bBeingDefused",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flDefuseLength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDefuseCountDown",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bBombDefused",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_hBombDefuser",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          }
        ],
        "parent": "CBaseAnimGraph"
      },
      "CPlatTrigger": {
        "fields": {
          "m_pPlatform": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CPlayerPing": {
        "fields": {
          "m_bUrgent": 1284,
          "m_hPingedEntity": 1276,
          "m_hPlayer": 1272,
          "m_iType": 1280,
          "m_szPlaceName": 1285
        },
        "metadata": [
          {
            "name": "m_hPlayer",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CCSPlayerPawn>"
          },
          {
            "name": "m_hPingedEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_iType",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bUrgent",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_szPlaceName",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPlayerSprayDecal": {
        "fields": {
          "m_flCreationTime": 2100,
          "m_nEntity": 2092,
          "m_nHitbox": 2096,
          "m_nPlayer": 2088,
          "m_nTintID": 2104,
          "m_nUniqueID": 2024,
          "m_nVersion": 2108,
          "m_rtGcTime": 2036,
          "m_ubSignature": 2109,
          "m_unAccountID": 2028,
          "m_unTraceID": 2032,
          "m_vecEndPos": 2040,
          "m_vecLeft": 2064,
          "m_vecNormal": 2076,
          "m_vecStart": 2052
        },
        "metadata": [
          {
            "name": "m_nUniqueID",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_unAccountID",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_unTraceID",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_rtGcTime",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_vecEndPos",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecStart",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecLeft",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecNormal",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_nPlayer",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nEntity",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nHitbox",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flCreationTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nTintID",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nVersion",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_ubSignature",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          }
        ],
        "parent": "CModelPointEntity"
      },
      "CPlayerVisibility": {
        "fields": {
          "m_bIsEnabled": 1281,
          "m_bStartDisabled": 1280,
          "m_flFadeTime": 1276,
          "m_flFogDistanceMultiplier": 1268,
          "m_flFogMaxDensityMultiplier": 1272,
          "m_flVisibilityStrength": 1264
        },
        "metadata": [
          {
            "name": "m_flVisibilityStrength",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogDistanceMultiplier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogMaxDensityMultiplier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFadeTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bStartDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bIsEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPlayer_AutoaimServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_CameraServices": {
        "fields": {
          "m_PlayerFog": 88,
          "m_PostProcessingVolumes": 288,
          "m_audio": 168,
          "m_flCsViewPunchAngleTickRatio": 80,
          "m_flOldPlayerViewOffsetZ": 316,
          "m_flOldPlayerZ": 312,
          "m_hColorCorrectionCtrl": 152,
          "m_hTonemapController": 160,
          "m_hTriggerSoundscapeList": 344,
          "m_hViewEntity": 156,
          "m_nCsViewPunchAngleTick": 76,
          "m_vecCsViewPunchAngle": 64
        },
        "metadata": [
          {
            "name": "m_vecCsViewPunchAngle",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_nCsViewPunchAngleTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "m_flCsViewPunchAngleTickRatio",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_PlayerFog",
            "type": "NetworkVarNames",
            "type_name": "fogplayerparams_t"
          },
          {
            "name": "m_hColorCorrectionCtrl",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CColorCorrection>"
          },
          {
            "name": "m_hViewEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_hTonemapController",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CTonemapController2>"
          },
          {
            "name": "m_audio",
            "type": "NetworkVarNames",
            "type_name": "audioparams_t"
          },
          {
            "name": "m_PostProcessingVolumes",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CPostProcessingVolume>"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_FlashlightServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_ItemServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_MovementServices": {
        "fields": {
          "m_arrForceSubtickMoveWhen": 412,
          "m_flForwardMove": 428,
          "m_flLeftMove": 432,
          "m_flMaxspeed": 408,
          "m_flUpMove": 436,
          "m_nButtonDoublePressed": 120,
          "m_nButtons": 72,
          "m_nImpulse": 64,
          "m_nLastCommandNumberProcessed": 384,
          "m_nQueuedButtonChangeMask": 112,
          "m_nQueuedButtonDownMask": 104,
          "m_nToggleButtonDownMask": 392,
          "m_pButtonPressedCmdNumber": 128,
          "m_vecLastFinishTickViewAngles": 544,
          "m_vecLastMovementImpulses": 440,
          "m_vecOldViewAngles": 556
        },
        "metadata": [
          {
            "name": "m_nToggleButtonDownMask",
            "type": "NetworkVarNames",
            "type_name": "ButtonBitMask_t"
          },
          {
            "name": "m_flMaxspeed",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_arrForceSubtickMoveWhen",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_MovementServices_Humanoid": {
        "fields": {
          "m_bDucked": 596,
          "m_bDucking": 597,
          "m_bInCrouch": 584,
          "m_bInDuckJump": 598,
          "m_flCrouchTransitionStartTime": 592,
          "m_flFallVelocity": 580,
          "m_flStepSoundTime": 576,
          "m_flSurfaceFriction": 612,
          "m_groundNormal": 600,
          "m_nCrouchState": 588,
          "m_nStepside": 632,
          "m_surfaceProps": 616,
          "m_vecSmoothedVelocity": 636
        },
        "metadata": [
          {
            "name": "m_flFallVelocity",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_bInCrouch",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nCrouchState",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_flCrouchTransitionStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_bDucked",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bDucking",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bInDuckJump",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CPlayer_MovementServices"
      },
      "CPlayer_ObserverServices": {
        "fields": {
          "m_bForcedObserverMode": 76,
          "m_hObserverTarget": 68,
          "m_iObserverLastMode": 72,
          "m_iObserverMode": 64
        },
        "metadata": [
          {
            "name": "m_iObserverMode",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_hObserverTarget",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_UseServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_WaterServices": {
        "fields": {},
        "metadata": [],
        "parent": "CPlayerPawnComponent"
      },
      "CPlayer_WeaponServices": {
        "fields": {
          "m_bPreventWeaponPickup": 160,
          "m_hActiveWeapon": 88,
          "m_hLastWeapon": 92,
          "m_hMyWeapons": 64,
          "m_iAmmo": 96
        },
        "metadata": [
          {
            "name": "m_hMyWeapons",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerWeapon>"
          },
          {
            "name": "m_hActiveWeapon",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerWeapon>"
          },
          {
            "name": "m_hLastWeapon",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerWeapon>"
          },
          {
            "name": "m_iAmmo",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          }
        ],
        "parent": "CPlayerPawnComponent"
      },
      "CPointAngleSensor": {
        "fields": {
          "m_FacingPercentage": 1424,
          "m_OnFacingLookat": 1304,
          "m_OnNotFacingLookat": 1344,
          "m_TargetDir": 1384,
          "m_bDisabled": 1264,
          "m_bFired": 1300,
          "m_flDotTolerance": 1292,
          "m_flDuration": 1288,
          "m_flFacingTime": 1296,
          "m_hLookAtEntity": 1284,
          "m_hTargetEntity": 1280,
          "m_nLookAtName": 1272
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointAngularVelocitySensor": {
        "fields": {
          "m_AngularVelocity": 1320,
          "m_OnEqualTo": 1520,
          "m_OnGreaterThan": 1440,
          "m_OnGreaterThanOrEqualTo": 1480,
          "m_OnLessThan": 1360,
          "m_OnLessThanOrEqualTo": 1400,
          "m_bUseHelper": 1316,
          "m_flFireInterval": 1284,
          "m_flFireTime": 1280,
          "m_flLastAngVelocity": 1288,
          "m_flThreshold": 1268,
          "m_hTargetEntity": 1264,
          "m_lastOrientation": 1292,
          "m_nLastCompareResult": 1272,
          "m_nLastFireResult": 1276,
          "m_vecAxis": 1304
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointBroadcastClientCommand": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointCamera": {
        "fields": {
          "m_DegreesPerSecond": 1344,
          "m_FOV": 1264,
          "m_FogColor": 1273,
          "m_Resolution": 1268,
          "m_TargetFOV": 1340,
          "m_bActive": 1292,
          "m_bAlignWithParent": 1317,
          "m_bCanHLTVUse": 1316,
          "m_bDofEnabled": 1318,
          "m_bFogEnable": 1272,
          "m_bIsOn": 1348,
          "m_bNoSky": 1300,
          "m_bUseScreenAspectRatio": 1293,
          "m_fBrightness": 1304,
          "m_flAspectRatio": 1296,
          "m_flDofFarBlurry": 1332,
          "m_flDofFarCrisp": 1328,
          "m_flDofNearBlurry": 1320,
          "m_flDofNearCrisp": 1324,
          "m_flDofTiltToGround": 1336,
          "m_flFogEnd": 1284,
          "m_flFogMaxDensity": 1288,
          "m_flFogStart": 1280,
          "m_flZFar": 1308,
          "m_flZNear": 1312,
          "m_pNext": 1352
        },
        "metadata": [
          {
            "name": "m_FOV",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Resolution",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bFogEnable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_FogColor",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_flFogStart",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogEnd",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFogMaxDensity",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bUseScreenAspectRatio",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flAspectRatio",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bNoSky",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_fBrightness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flZFar",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flZNear",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bCanHLTVUse",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bAlignWithParent",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bDofEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flDofNearBlurry",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDofNearCrisp",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDofFarCrisp",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDofFarBlurry",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDofTiltToGround",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPointCameraVFOV": {
        "fields": {
          "m_flVerticalFOV": 1360
        },
        "metadata": [],
        "parent": "CPointCamera"
      },
      "CPointChildModifier": {
        "fields": {
          "m_bOrphanInsteadOfDeletingChildrenOnRemove": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointClientCommand": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointClientUIDialog": {
        "fields": {
          "m_bStartEnabled": 2460,
          "m_hActivator": 2456
        },
        "metadata": [
          {
            "name": "m_hActivator",
            "type": "NetworkVarNames",
            "type_name": "EHANDLE"
          }
        ],
        "parent": "CBaseClientUIEntity"
      },
      "CPointClientUIWorldPanel": {
        "fields": {
          "m_bAllowInteractionFromAllSceneWorlds": 2496,
          "m_bDisableMipGen": 2535,
          "m_bExcludeFromSaveGames": 2532,
          "m_bFollowPlayerAcrossTeleport": 2458,
          "m_bGrabbable": 2533,
          "m_bIgnoreInput": 2456,
          "m_bLit": 2457,
          "m_bNoDepth": 2529,
          "m_bOnlyRenderToTexture": 2534,
          "m_bOpaque": 2528,
          "m_bRenderBackface": 2530,
          "m_bUseOffScreenIndicator": 2531,
          "m_flDPI": 2468,
          "m_flDepthOffset": 2476,
          "m_flHeight": 2464,
          "m_flInteractDistance": 2472,
          "m_flWidth": 2460,
          "m_nExplicitImageLayout": 2536,
          "m_unHorizontalAlign": 2484,
          "m_unOrientation": 2492,
          "m_unOwnerContext": 2480,
          "m_unVerticalAlign": 2488,
          "m_vecCSSClasses": 2504
        },
        "metadata": [
          {
            "name": "m_bIgnoreInput",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bLit",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bFollowPlayerAcrossTeleport",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flWidth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDPI",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flInteractDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDepthOffset",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_unOwnerContext",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_unHorizontalAlign",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_unVerticalAlign",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_unOrientation",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_bAllowInteractionFromAllSceneWorlds",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vecCSSClasses",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_bOpaque",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bNoDepth",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bRenderBackface",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bUseOffScreenIndicator",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bExcludeFromSaveGames",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bGrabbable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bOnlyRenderToTexture",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bDisableMipGen",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nExplicitImageLayout",
            "type": "NetworkVarNames",
            "type_name": "int32"
          }
        ],
        "parent": "CBaseClientUIEntity"
      },
      "CPointClientUIWorldTextPanel": {
        "fields": {
          "m_messageText": 2544
        },
        "metadata": [
          {
            "name": "m_messageText",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": "CPointClientUIWorldPanel"
      },
      "CPointCommentaryNode": {
        "fields": {
          "m_bActive": 2880,
          "m_bDisabled": 2781,
          "m_bListenedTo": 2920,
          "m_bPreventChangesWhileMoving": 2780,
          "m_bPreventMovement": 2736,
          "m_bUnderCrosshair": 2737,
          "m_bUnstoppable": 2738,
          "m_flAbortedPlaybackAt": 2796,
          "m_flFinishedTime": 2740,
          "m_flStartTime": 2884,
          "m_flStartTimeInCommentary": 2888,
          "m_hViewPosition": 2728,
          "m_hViewPositionMover": 2732,
          "m_hViewTarget": 2712,
          "m_hViewTargetAngles": 2716,
          "m_iNodeNumber": 2912,
          "m_iNodeNumberMax": 2916,
          "m_iszCommentaryFile": 2696,
          "m_iszPostCommands": 2688,
          "m_iszPreCommands": 2680,
          "m_iszSpeakers": 2904,
          "m_iszTitle": 2896,
          "m_iszViewPosition": 2720,
          "m_iszViewTarget": 2704,
          "m_pOnCommentaryStarted": 2800,
          "m_pOnCommentaryStopped": 2840,
          "m_vecFinishAngles": 2768,
          "m_vecFinishOrigin": 2744,
          "m_vecOriginalAngles": 2756,
          "m_vecTeleportOrigin": 2784
        },
        "metadata": [
          {
            "name": "m_iszCommentaryFile",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_hViewPosition",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_bActive",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flStartTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_flStartTimeInCommentary",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_iszTitle",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iszSpeakers",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iNodeNumber",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iNodeNumberMax",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bListenedTo",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseAnimGraph"
      },
      "CPointEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CPointEntityFinder": {
        "fields": {
          "m_FindMethod": 1300,
          "m_OnFoundEntity": 1304,
          "m_hEntity": 1264,
          "m_hFilter": 1280,
          "m_hReference": 1296,
          "m_iFilterName": 1272,
          "m_iRefName": 1288
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CPointGamestatsCounter": {
        "fields": {
          "m_bDisabled": 1272,
          "m_strStatisticName": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointGiveAmmo": {
        "fields": {
          "m_pActivator": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointHurt": {
        "fields": {
          "m_bitsDamageType": 1268,
          "m_flDelay": 1276,
          "m_flRadius": 1272,
          "m_nDamage": 1264,
          "m_pActivator": 1288,
          "m_strTarget": 1280
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointOrient": {
        "fields": {
          "m_bActive": 1276,
          "m_flLastGameTime": 1292,
          "m_flMaxTurnRate": 1288,
          "m_hTarget": 1272,
          "m_iszSpawnTargetName": 1264,
          "m_nConstraint": 1284,
          "m_nGoalDirection": 1280
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CPointPrefab": {
        "fields": {
          "m_associatedRelayEntity": 1292,
          "m_associatedRelayTargetName": 1280,
          "m_bLoadDynamic": 1289,
          "m_fixupNames": 1288,
          "m_forceWorldGroupID": 1272,
          "m_targetMapName": 1264
        },
        "metadata": [],
        "parent": "CServerOnlyPointEntity"
      },
      "CPointProximitySensor": {
        "fields": {
          "m_Distance": 1272,
          "m_bDisabled": 1264,
          "m_hTargetEntity": 1268
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointPulse": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseDomainOptInVariableKeysSource",
            "type": "Unknown"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPointPush": {
        "fields": {
          "m_bEnabled": 1264,
          "m_flConeOfInfluence": 1280,
          "m_flInnerRadius": 1276,
          "m_flMagnitude": 1268,
          "m_flRadius": 1272,
          "m_hFilter": 1296,
          "m_iszFilterName": 1288
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointServerCommand": {
        "fields": {},
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointTeleport": {
        "fields": {
          "m_bTeleportParentedEntities": 1288,
          "m_bTeleportUseCurrentAngle": 1289,
          "m_vSaveAngles": 1276,
          "m_vSaveOrigin": 1264
        },
        "metadata": [],
        "parent": "CServerOnlyPointEntity"
      },
      "CPointTeleportAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPointTemplate": {
        "fields": {
          "m_ScriptCallbackScope": 1360,
          "m_ScriptSpawnCallback": 1352,
          "m_SpawnedEntityHandles": 1328,
          "m_bAsynchronouslySpawnEntities": 1292,
          "m_clientOnlyEntityBehavior": 1296,
          "m_createdSpawnGroupHandles": 1304,
          "m_flTimeoutInterval": 1288,
          "m_iszEntityFilterName": 1280,
          "m_iszSource2EntityLumpName": 1272,
          "m_iszWorldName": 1264,
          "m_ownerSpawnGroupType": 1300
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CPointTemplateAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPointValueRemapper": {
        "fields": {
          "m_OnDisengage": 1744,
          "m_OnEngage": 1704,
          "m_OnReachedValueCustom": 1664,
          "m_OnReachedValueOne": 1624,
          "m_OnReachedValueZero": 1584,
          "m_Position": 1504,
          "m_PositionDelta": 1544,
          "m_bDisabled": 1264,
          "m_bEngaged": 1408,
          "m_bFirstUpdate": 1409,
          "m_bRequiresUseKey": 1308,
          "m_bUpdateOnClient": 1265,
          "m_flCurrentMomentum": 1392,
          "m_flCustomOutputValue": 1436,
          "m_flDisengageDistance": 1300,
          "m_flEngageDistance": 1304,
          "m_flInputOffset": 1404,
          "m_flMaximumChangePerSecond": 1296,
          "m_flMomentumModifier": 1384,
          "m_flPreviousUpdateTickTime": 1416,
          "m_flPreviousValue": 1412,
          "m_flRatchetOffset": 1400,
          "m_flSnapValue": 1388,
          "m_hOutputEntities": 1352,
          "m_hRemapLineEnd": 1292,
          "m_hRemapLineStart": 1288,
          "m_hUsingPlayer": 1432,
          "m_iszOutputEntity2Name": 1328,
          "m_iszOutputEntity3Name": 1336,
          "m_iszOutputEntity4Name": 1344,
          "m_iszOutputEntityName": 1320,
          "m_iszRemapLineEndName": 1280,
          "m_iszRemapLineStartName": 1272,
          "m_iszSoundDisengage": 1448,
          "m_iszSoundEngage": 1440,
          "m_iszSoundMovingLoop": 1472,
          "m_iszSoundReachedValueOne": 1464,
          "m_iszSoundReachedValueZero": 1456,
          "m_nHapticsType": 1376,
          "m_nInputType": 1268,
          "m_nMomentumType": 1380,
          "m_nOutputType": 1312,
          "m_nRatchetType": 1396,
          "m_vecPreviousTestPoint": 1420
        },
        "metadata": [
          {
            "name": "m_bDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bUpdateOnClient",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nInputType",
            "type": "NetworkVarNames",
            "type_name": "ValueRemapperInputType_t"
          },
          {
            "name": "m_hRemapLineStart",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_hRemapLineEnd",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_flMaximumChangePerSecond",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDisengageDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flEngageDistance",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bRequiresUseKey",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nOutputType",
            "type": "NetworkVarNames",
            "type_name": "ValueRemapperOutputType_t"
          },
          {
            "name": "m_hOutputEntities",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_nHapticsType",
            "type": "NetworkVarNames",
            "type_name": "ValueRemapperHapticsType_t"
          },
          {
            "name": "m_nMomentumType",
            "type": "NetworkVarNames",
            "type_name": "ValueRemapperMomentumType_t"
          },
          {
            "name": "m_flMomentumModifier",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flSnapValue",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nRatchetType",
            "type": "NetworkVarNames",
            "type_name": "ValueRemapperRatchetType_t"
          },
          {
            "name": "m_flInputOffset",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CPointVelocitySensor": {
        "fields": {
          "m_Velocity": 1296,
          "m_bEnabled": 1280,
          "m_fPrevVelocity": 1284,
          "m_flAvgInterval": 1288,
          "m_hTargetEntity": 1264,
          "m_vecAxis": 1268
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPointWorldText": {
        "fields": {
          "m_BackgroundMaterialName": 2600,
          "m_Color": 2696,
          "m_FontName": 2536,
          "m_bDrawBackground": 2680,
          "m_bEnabled": 2664,
          "m_bFullbright": 2665,
          "m_flBackgroundBorderHeight": 2688,
          "m_flBackgroundBorderWidth": 2684,
          "m_flBackgroundWorldToUV": 2692,
          "m_flDepthOffset": 2676,
          "m_flFontSize": 2672,
          "m_flWorldUnitsPerPx": 2668,
          "m_messageText": 2024,
          "m_nJustifyHorizontal": 2700,
          "m_nJustifyVertical": 2704,
          "m_nReorientMode": 2708
        },
        "metadata": [
          {
            "name": "m_messageText",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_FontName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_BackgroundMaterialName",
            "type": "NetworkVarNames",
            "type_name": "char"
          },
          {
            "name": "m_bEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bFullbright",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flWorldUnitsPerPx",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFontSize",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDepthOffset",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bDrawBackground",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flBackgroundBorderWidth",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flBackgroundBorderHeight",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flBackgroundWorldToUV",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_Color",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "m_nJustifyHorizontal",
            "type": "NetworkVarNames",
            "type_name": "PointWorldTextJustifyHorizontal_t"
          },
          {
            "name": "m_nJustifyVertical",
            "type": "NetworkVarNames",
            "type_name": "PointWorldTextJustifyVertical_t"
          },
          {
            "name": "m_nReorientMode",
            "type": "NetworkVarNames",
            "type_name": "PointWorldTextReorientMode_t"
          }
        ],
        "parent": "CModelPointEntity"
      },
      "CPostProcessingVolume": {
        "fields": {
          "m_bExposureControl": 2549,
          "m_bMaster": 2548,
          "m_flExposureCompensation": 2532,
          "m_flExposureFadeSpeedDown": 2540,
          "m_flExposureFadeSpeedUp": 2536,
          "m_flFadeDuration": 2512,
          "m_flMaxExposure": 2528,
          "m_flMaxLogExposure": 2520,
          "m_flMinExposure": 2524,
          "m_flMinLogExposure": 2516,
          "m_flTonemapEVSmoothingRange": 2544,
          "m_hPostSettings": 2504
        },
        "metadata": [
          {
            "name": "m_hPostSettings",
            "type": "NetworkVarNames",
            "type_name": "HPostProcessingStrong"
          },
          {
            "name": "m_flFadeDuration",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flMinLogExposure",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flMaxLogExposure",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flMinExposure",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flMaxExposure",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flExposureCompensation",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flExposureFadeSpeedUp",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flExposureFadeSpeedDown",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flTonemapEVSmoothingRange",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bMaster",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bExposureControl",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CPrecipitation": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CPrecipitationBlocker": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CPrecipitationVData": {
        "fields": {
          "m_bBatchSameVolumeType": 272,
          "m_flInnerDistance": 264,
          "m_nAttachType": 268,
          "m_nRTEnvCP": 276,
          "m_nRTEnvCPComponent": 280,
          "m_szModifier": 288,
          "m_szParticlePrecipitationEffect": 40
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CProjectedDecal": {
        "fields": {
          "m_flDistance": 1268,
          "m_nTexture": 1264
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CPropDataComponent": {
        "fields": {
          "m_bSpawnMotionDisabled": 52,
          "m_flDmgModBullet": 16,
          "m_flDmgModClub": 20,
          "m_flDmgModExplosive": 24,
          "m_flDmgModFire": 28,
          "m_iszBasePropData": 40,
          "m_iszPhysicsDamageTableName": 32,
          "m_nDisableTakePhysicsDamageSpawnFlag": 56,
          "m_nInteractions": 48,
          "m_nMotionDisabledSpawnFlag": 60
        },
        "metadata": [],
        "parent": "CEntityComponent"
      },
      "CPropDoorRotating": {
        "fields": {
          "m_angGoal": 4144,
          "m_angRotationAjarDeprecated": 4096,
          "m_angRotationClosed": 4108,
          "m_angRotationOpenBack": 4132,
          "m_angRotationOpenForward": 4120,
          "m_bAjarDoorShouldntAlwaysOpen": 4204,
          "m_eCurrentOpenDirection": 4088,
          "m_eOpenDirection": 4084,
          "m_eSpawnPosition": 4080,
          "m_flAjarAngle": 4092,
          "m_flDistance": 4076,
          "m_hEntityBlocker": 4208,
          "m_vecAxis": 4064,
          "m_vecBackBoundsMax": 4192,
          "m_vecBackBoundsMin": 4180,
          "m_vecForwardBoundsMax": 4168,
          "m_vecForwardBoundsMin": 4156
        },
        "metadata": [],
        "parent": "CBasePropDoor"
      },
      "CPropDoorRotatingBreakable": {
        "fields": {
          "m_bBreakable": 4224,
          "m_currentDamageState": 4228,
          "m_damageStates": 4232,
          "m_isAbleToCloseAreaPortals": 4225
        },
        "metadata": [],
        "parent": "CPropDoorRotating"
      },
      "CPulseAnimFuncs": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseArraylib": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Base": {
        "fields": {
          "m_nEditorNodeID": 8
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseFlow": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseLerp": {
        "fields": {
          "m_WakeResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseLerp__CursorState_t": {
        "fields": {
          "m_EndTime": 4,
          "m_StartTime": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseRequirement": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseState": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseValue": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BaseYieldingInflow": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_BooleanSwitchState": {
        "fields": {
          "m_Condition": 72,
          "m_SubGraph": 192,
          "m_WhenFalse": 336,
          "m_WhenTrue": 264
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_CursorQueue": {
        "fields": {
          "m_nCursorsAllowedToRunParallel": 152
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_FireCursors": {
        "fields": {
          "m_OnCanceled": 176,
          "m_OnFinished": 104,
          "m_Outflows": 72,
          "m_bWaitForChildOutflows": 96
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_BaseEntrypoint": {
        "fields": {
          "m_EntryChunk": 72,
          "m_RegisterMap": 80
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_EntOutputHandler": {
        "fields": {
          "m_ExpectedParamType": 160,
          "m_SourceEntity": 128,
          "m_SourceOutput": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_EventHandler": {
        "fields": {
          "m_EventName": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_GraphHook": {
        "fields": {
          "m_HookName": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_Method": {
        "fields": {
          "m_Args": 184,
          "m_Description": 144,
          "m_MethodName": 128,
          "m_ReturnType": 160,
          "m_bIsPublic": 152
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_ObservableVariableListener": {
        "fields": {
          "m_bSelfReference": 130,
          "m_nBlackboardReference": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_Wait": {
        "fields": {
          "m_WakeResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Inflow_Yield": {
        "fields": {
          "m_UnyieldResume": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_InlineNodeSkipSelector": {
        "fields": {
          "m_FailOutflow": 104,
          "m_PassOutflow": 80,
          "m_bAnd": 76,
          "m_nFlowNodeID": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IntervalTimer": {
        "fields": {
          "m_Completed": 72,
          "m_OnInterval": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IntervalTimer__CursorState_t": {
        "fields": {
          "m_EndTime": 4,
          "m_StartTime": 0,
          "m_bCompleteOnNextWake": 16,
          "m_flWaitInterval": 8,
          "m_flWaitIntervalHigh": 12
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IsRequirementValid": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_IsRequirementValid__Criteria_t": {
        "fields": {
          "m_bIsValid": 0
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_LerpCameraSettings": {
        "fields": {
          "m_End": 164,
          "m_Start": 148,
          "m_flSeconds": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_LerpCameraSettings__CursorState_t": {
        "fields": {
          "m_OverlaidEnd": 28,
          "m_OverlaidStart": 12,
          "m_hCamera": 8
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_LimitCount": {
        "fields": {
          "m_nLimitCount": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseRequirementPass",
            "type": "Unknown"
          },
          {
            "name": "MPulseRequirementSummaryExpr",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_LimitCount__Criteria_t": {
        "fields": {
          "m_bLimitCountPasses": 0
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_LimitCount__InstanceState_t": {
        "fields": {
          "m_nCurrentCount": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleOrdered": {
        "fields": {
          "m_Outputs": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleOrdered__InstanceState_t": {
        "fields": {
          "m_nNextIndex": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleRandom": {
        "fields": {
          "m_Outputs": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleShuffled": {
        "fields": {
          "m_Outputs": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_CycleShuffled__InstanceState_t": {
        "fields": {
          "m_Shuffle": 0,
          "m_nNextShuffle": 32
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_IntSwitch": {
        "fields": {
          "m_CaseOutflows": 144,
          "m_DefaultCaseOutflow": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_ListenForAnimgraphTag": {
        "fields": {
          "m_OnCanceled": 216,
          "m_OnEnd": 144,
          "m_OnStart": 72,
          "m_TagName": 288
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorSubHeaderText",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_ListenForEntityOutput": {
        "fields": {
          "m_OnCanceled": 144,
          "m_OnFired": 72,
          "m_bListenUntilCanceled": 232,
          "m_strEntityOutput": 216,
          "m_strEntityOutputParam": 224
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorSubHeaderText",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_ListenForEntityOutput__CursorState_t": {
        "fields": {
          "m_entity": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_PlaySceneBase": {
        "fields": {
          "m_OnCanceled": 144,
          "m_OnFinished": 72,
          "m_Triggers": 216
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_PlaySceneBase__CursorState_t": {
        "fields": {
          "m_mainActor": 4,
          "m_sceneInstance": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_PlaySequence": {
        "fields": {
          "m_ParamSequenceName": 240
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_PlayVCD": {
        "fields": {
          "m_vcdFilename": 240
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_ScriptedSequence": {
        "fields": {
          "m_OnCanceled": 240,
          "m_OnFinished": 168,
          "m_Triggers": 312,
          "m_bDisallowInterrupts": 86,
          "m_bDontTeleportAtEnd": 85,
          "m_bEnsureOnNavmeshOnFinish": 84,
          "m_nExpectedNumSequencesInSyncGroup": 80,
          "m_scriptedSequenceDataMain": 88,
          "m_szSyncGroup": 72,
          "m_vecAdditionalActors": 144
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_ScriptedSequence__CursorState_t": {
        "fields": {
          "m_scriptedSequence": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Outflow_StringSwitch": {
        "fields": {
          "m_CaseOutflows": 144,
          "m_DefaultCaseOutflow": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_PickBestOutflowSelector": {
        "fields": {
          "m_OutflowList": 80,
          "m_nCheckType": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          },
          {
            "name": "MPulseSelectorAllowRequirementCriteria",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_PlaySequence": {
        "fields": {
          "m_OnCanceled": 176,
          "m_OnFinished": 104,
          "m_PulseAnimEvents": 80,
          "m_SequenceName": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_PlaySequence__CursorState_t": {
        "fields": {
          "m_hTarget": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_SoundEventStart": {
        "fields": {
          "m_Type": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_CallExternalMethod": {
        "fields": {
          "m_ExpectedArgs": 104,
          "m_GameBlackboard": 88,
          "m_MethodName": 72,
          "m_OnFinished": 128,
          "m_nAsyncCallMode": 120
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_DebugLog": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_EntFire": {
        "fields": {
          "m_Input": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_FollowEntity": {
        "fields": {
          "m_ParamBoneOrAttachName": 72,
          "m_ParamBoneOrAttachNameChild": 80
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_PublicOutput": {
        "fields": {
          "m_OutputIndex": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Step_SetAnimGraphParam": {
        "fields": {
          "m_ParamName": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Timeline": {
        "fields": {
          "m_OnCanceled": 176,
          "m_OnFinished": 104,
          "m_TimelineEvents": 72,
          "m_bWaitForChildOutflows": 96
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Timeline__TimelineEvent_t": {
        "fields": {
          "m_EventOutflow": 8,
          "m_flTimeFromPrevious": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Unknown": {
        "fields": {
          "m_UnknownKeys": 72
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCell_Value_Curve": {
        "fields": {
          "m_Curve": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_Gradient": {
        "fields": {
          "m_Gradient": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_RandomFloat": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_Value_RandomInt": {
        "fields": {},
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_WaitForCursorsWithTag": {
        "fields": {
          "m_bTagSelfWhenComplete": 152,
          "m_nDesiredKillPriority": 156
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MCellForDomain",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellMethodBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseCellOutflowHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorHeaderIcon",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_WaitForCursorsWithTagBase": {
        "fields": {
          "m_WaitComplete": 80,
          "m_nCursorsAllowedToWait": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          },
          {
            "name": "MPulseEditorCanvasItemSpecKV3",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseCell_WaitForCursorsWithTagBase__CursorState_t": {
        "fields": {
          "m_TagName": 0
        },
        "metadata": [],
        "parent": null
      },
      "CPulseCursorFuncs": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseExecCursor": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CPulseFuncs_GameParticleManager": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphDef": {
        "fields": {
          "m_BlackboardReferences": 272,
          "m_CallInfos": 200,
          "m_Cells": 104,
          "m_Chunks": 80,
          "m_Constants": 224,
          "m_DomainIdentifier": 8,
          "m_DomainSubType": 24,
          "m_DomainValues": 248,
          "m_InvokeBindings": 176,
          "m_OutputConnections": 296,
          "m_ParentMapName": 48,
          "m_ParentXmlName": 64,
          "m_PublicOutputs": 152,
          "m_Vars": 128
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphInstance_GameBlackboard": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInFeatureTag",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseGraphInstance_ServerEntity": {
        "fields": {
          "m_bActivated": 396,
          "m_hOwner": 392,
          "m_sNameFixupLocal": 416,
          "m_sNameFixupParent": 408,
          "m_sNameFixupStaticPrefix": 400,
          "m_sProceduralWorldNameForRelays": 424
        },
        "metadata": [
          {
            "name": "MPulseInstanceDomainInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainScopeInfo",
            "type": "Unknown"
          },
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInValueType",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainOptInGameBlackboard",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseMathlib": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseRuntimeLibModuleLocalTypeQueryRegistration": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseTypeQueriesForScopeSingleton",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseServerCursor": {
        "fields": {
          "m_hActivator": 224,
          "m_hCaller": 228
        },
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseServerFuncs": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseServerFuncs_Sounds": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyFriendlyName",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulseTestScriptLib": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPropertyDescription",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_BlackboardReference": {
        "fields": {
          "m_BlackboardResource": 8,
          "m_NodeName": 32,
          "m_hBlackboardResource": 0,
          "m_nNodeID": 24
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_CallInfo": {
        "fields": {
          "m_CallMethodID": 72,
          "m_PortName": 0,
          "m_RegisterMap": 24,
          "m_nEditorNodeID": 16,
          "m_nSrcChunk": 76,
          "m_nSrcInstruction": 80
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_InvokeBinding": {
        "fields": {
          "m_FuncName": 48,
          "m_RegisterMap": 0,
          "m_nCellIndex": 64,
          "m_nSrcChunk": 68,
          "m_nSrcInstruction": 72
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CPulse_OutflowConnection": {
        "fields": {
          "m_OutflowRegisterMap": 24,
          "m_SourceOutflowName": 0,
          "m_nDestChunk": 16,
          "m_nInstruction": 20
        },
        "metadata": [],
        "parent": null
      },
      "CPulse_ResumePoint": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CPushable": {
        "fields": {},
        "metadata": [],
        "parent": "CBreakable"
      },
      "CRagdollConstraint": {
        "fields": {
          "m_xfriction": 1400,
          "m_xmax": 1380,
          "m_xmin": 1376,
          "m_yfriction": 1404,
          "m_ymax": 1388,
          "m_ymin": 1384,
          "m_zfriction": 1408,
          "m_zmax": 1396,
          "m_zmin": 1392
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CRagdollMagnet": {
        "fields": {
          "m_axis": 1276,
          "m_bDisabled": 1264,
          "m_force": 1272,
          "m_radius": 1268
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CRagdollManager": {
        "fields": {
          "m_bCanTakeDamage": 1273,
          "m_bSaveImportant": 1272,
          "m_iCurrentMaxRagdollCount": 1264,
          "m_iMaxRagdollCount": 1268
        },
        "metadata": [
          {
            "name": "m_iCurrentMaxRagdollCount",
            "type": "NetworkVarNames",
            "type_name": "int8"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CRagdollProp": {
        "fields": {
          "m_allAsleep": 2856,
          "m_bAllowStretch": 2922,
          "m_bFirstCollisionAfterLaunch": 2857,
          "m_bHasBeenPhysgunned": 2920,
          "m_bShouldDeleteActivationRecord": 2984,
          "m_bShouldTeleportPhysics": 2921,
          "m_bStartDisabled": 2768,
          "m_bValidatePoweredRagdollPose": 3080,
          "m_flAwakeTime": 2896,
          "m_flBlendWeight": 2924,
          "m_flDefaultFadeScale": 2928,
          "m_flFadeOutStartTime": 2876,
          "m_flFadeTime": 2880,
          "m_flLastOriginChangeTime": 2900,
          "m_flLastPhysicsInfluenceTime": 2872,
          "m_hDamageEntity": 2860,
          "m_hKiller": 2864,
          "m_hPhysicsAttacker": 2868,
          "m_hRagdollSource": 2848,
          "m_lastUpdateTickCount": 2852,
          "m_ragAngles": 2824,
          "m_ragEnabled": 2776,
          "m_ragPos": 2800,
          "m_ragdoll": 2688,
          "m_ragdollMaxs": 2960,
          "m_ragdollMins": 2936,
          "m_strOriginClassName": 2904,
          "m_strSourceClassName": 2912,
          "m_vecLastOrigin": 2884
        },
        "metadata": [
          {
            "name": "m_ragEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_ragPos",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_ragAngles",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "m_hRagdollSource",
            "type": "NetworkVarNames",
            "type_name": "EHANDLE"
          },
          {
            "name": "m_flBlendWeight",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CBaseAnimGraph"
      },
      "CRagdollPropAlias_physics_prop_ragdoll": {
        "fields": {},
        "metadata": [],
        "parent": "CRagdollProp"
      },
      "CRagdollPropAttached": {
        "fields": {
          "m_attachmentPointBoneSpace": 3152,
          "m_attachmentPointRagdollSpace": 3164,
          "m_bShouldDeleteAttachedActivationRecord": 3192,
          "m_bShouldDetach": 3176,
          "m_boneIndexAttached": 3144,
          "m_ragdollAttachedObjectIndex": 3148
        },
        "metadata": [
          {
            "name": "m_boneIndexAttached",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_ragdollAttachedObjectIndex",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_attachmentPointBoneSpace",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_attachmentPointRagdollSpace",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CRagdollProp"
      },
      "CRectLight": {
        "fields": {
          "m_bShowLight": 2832
        },
        "metadata": [
          {
            "name": "m_bShowLight",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBarnLight"
      },
      "CRenderComponent": {
        "fields": {
          "__m_pChainEntity": 16,
          "m_bEnableRendering": 88,
          "m_bInterpolationReadyToDraw": 168,
          "m_bIsRenderingWithViewModels": 80,
          "m_nSplitscreenFlags": 84
        },
        "metadata": [],
        "parent": "CEntityComponent"
      },
      "CRetakeGameRules": {
        "fields": {
          "m_bBlockersPresent": 252,
          "m_bRoundInProgress": 253,
          "m_iBombSite": 260,
          "m_iFirstSecondHalfRound": 256,
          "m_nMatchSeed": 248
        },
        "metadata": [
          {
            "name": "m_nMatchSeed",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bBlockersPresent",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bRoundInProgress",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iFirstSecondHalfRound",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iBombSite",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": null
      },
      "CRevertSaved": {
        "fields": {
          "m_Duration": 2028,
          "m_HoldTime": 2032,
          "m_loadTime": 2024
        },
        "metadata": [],
        "parent": "CModelPointEntity"
      },
      "CRopeKeyframe": {
        "fields": {
          "m_RopeFlags": 2032,
          "m_RopeLength": 2082,
          "m_Slack": 2048,
          "m_Subdiv": 2080,
          "m_TextureScale": 2056,
          "m_Width": 2052,
          "m_bConstrainBetweenEndpoints": 2061,
          "m_bCreatedFromMapFile": 2085,
          "m_bEndPointValid": 2093,
          "m_bStartPointValid": 2092,
          "m_fLockedPoints": 2084,
          "m_flScrollSpeed": 2088,
          "m_hEndPoint": 2100,
          "m_hStartPoint": 2096,
          "m_iEndAttachment": 2105,
          "m_iNextLinkName": 2040,
          "m_iRopeMaterialModelIndex": 2072,
          "m_iStartAttachment": 2104,
          "m_nChangeCount": 2081,
          "m_nSegments": 2060,
          "m_strRopeMaterialModel": 2064
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByUserGroup",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_RopeFlags",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_Slack",
            "type": "NetworkVarNames",
            "type_name": "int16"
          },
          {
            "name": "m_Width",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_TextureScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nSegments",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_bConstrainBetweenEndpoints",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iRopeMaterialModelIndex",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_Subdiv",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nChangeCount",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_RopeLength",
            "type": "NetworkVarNames",
            "type_name": "int16"
          },
          {
            "name": "m_fLockedPoints",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_flScrollSpeed",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_hStartPoint",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_hEndPoint",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_iStartAttachment",
            "type": "NetworkVarNames",
            "type_name": "AttachmentHandle_t"
          },
          {
            "name": "m_iEndAttachment",
            "type": "NetworkVarNames",
            "type_name": "AttachmentHandle_t"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CRopeKeyframeAlias_move_rope": {
        "fields": {},
        "metadata": [],
        "parent": "CRopeKeyframe"
      },
      "CRotButton": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseButton"
      },
      "CRotDoor": {
        "fields": {
          "m_bSolidBsp": 2680
        },
        "metadata": [],
        "parent": "CBaseDoor"
      },
      "CRuleBrushEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CRuleEntity"
      },
      "CRuleEntity": {
        "fields": {
          "m_iszMaster": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CRulePointEntity": {
        "fields": {
          "m_Score": 2032
        },
        "metadata": [],
        "parent": "CRuleEntity"
      },
      "CSMatchStats_t": {
        "fields": {
          "m_i1v1Count": 164,
          "m_i1v1Wins": 168,
          "m_i1v2Count": 172,
          "m_i1v2Wins": 176,
          "m_iEnemy2Ks": 124,
          "m_iEnemy3Ks": 112,
          "m_iEnemy4Ks": 108,
          "m_iEnemy5Ks": 104,
          "m_iEnemyKnifeKills": 116,
          "m_iEnemyTaserKills": 120,
          "m_iEntryCount": 180,
          "m_iEntryWins": 184,
          "m_iFlash_Count": 140,
          "m_iFlash_Successes": 144,
          "m_iUtility_Count": 128,
          "m_iUtility_Enemies": 136,
          "m_iUtility_Successes": 132,
          "m_nHealthPointsDealtTotal": 152,
          "m_nHealthPointsRemovedTotal": 148,
          "m_nShotsFiredTotal": 156,
          "m_nShotsOnTargetTotal": 160
        },
        "metadata": [
          {
            "name": "m_iEnemy5Ks",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEnemy4Ks",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEnemy3Ks",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEnemyKnifeKills",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEnemyTaserKills",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": null
      },
      "CSPerRoundStats_t": {
        "fields": {
          "m_iAssists": 56,
          "m_iCashEarned": 88,
          "m_iDamage": 60,
          "m_iDeaths": 52,
          "m_iEnemiesFlashed": 96,
          "m_iEquipmentValue": 64,
          "m_iHeadShotKills": 80,
          "m_iKillReward": 72,
          "m_iKills": 48,
          "m_iLiveTime": 76,
          "m_iMoneySaved": 68,
          "m_iObjective": 84,
          "m_iUtilityDamage": 92
        },
        "metadata": [
          {
            "name": "m_iKills",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iDeaths",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iAssists",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iDamage",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEquipmentValue",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iMoneySaved",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iKillReward",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iLiveTime",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iHeadShotKills",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iObjective",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iCashEarned",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iUtilityDamage",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iEnemiesFlashed",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": null
      },
      "CSceneEntity": {
        "fields": {
          "m_BusyActor": 2624,
          "m_OnCanceled": 1632,
          "m_OnCompletion": 1592,
          "m_OnPaused": 1672,
          "m_OnResumed": 1712,
          "m_OnStart": 1552,
          "m_OnTrigger": 1752,
          "m_bAutogenerated": 1395,
          "m_bAutomated": 1416,
          "m_bBreakOnNonIdle": 1446,
          "m_bCancelAtNextInterrupt": 1408,
          "m_bCompletedEarly": 2546,
          "m_bInterruptSceneFinished": 2547,
          "m_bInterrupted": 2545,
          "m_bInterruptedActorsScenes": 1445,
          "m_bIsPlayingBack": 1392,
          "m_bMultiplayer": 1394,
          "m_bPauseAtNextInterrupt": 1442,
          "m_bPaused": 1393,
          "m_bPausedViaInput": 1441,
          "m_bRestoring": 2548,
          "m_bSceneFinished": 1447,
          "m_bSceneMissing": 2544,
          "m_bWaitingForActor": 1443,
          "m_bWaitingForInterrupt": 1444,
          "m_bWaitingForResumeScene": 1440,
          "m_fPitch": 1412,
          "m_flAutomationDelay": 1424,
          "m_flAutomationTime": 1428,
          "m_flCurrentTime": 1400,
          "m_flForceClientTime": 1396,
          "m_flFrameTime": 1404,
          "m_hActivator": 2620,
          "m_hActor": 2616,
          "m_hActorList": 1448,
          "m_hInterruptScene": 2536,
          "m_hListManagers": 2576,
          "m_hNotifySceneCompletion": 2552,
          "m_hRemoveActorList": 1472,
          "m_hTarget1": 1352,
          "m_hTarget2": 1356,
          "m_hTarget3": 1360,
          "m_hTarget4": 1364,
          "m_hTarget5": 1368,
          "m_hTarget6": 1372,
          "m_hTarget7": 1376,
          "m_hTarget8": 1380,
          "m_hWaitingForThisResumeScene": 1436,
          "m_iPlayerDeathBehavior": 2628,
          "m_iszResumeSceneFile": 1280,
          "m_iszSceneFile": 1272,
          "m_iszSequenceName": 2608,
          "m_iszSoundName": 2600,
          "m_iszTarget1": 1288,
          "m_iszTarget2": 1296,
          "m_iszTarget3": 1304,
          "m_iszTarget4": 1312,
          "m_iszTarget5": 1320,
          "m_iszTarget6": 1328,
          "m_iszTarget7": 1336,
          "m_iszTarget8": 1344,
          "m_nAutomatedAction": 1420,
          "m_nInterruptCount": 2540,
          "m_nSceneFlushCounter": 1544,
          "m_nSceneStringIndex": 1548,
          "m_nSpeechPriority": 1432,
          "m_sTargetAttachment": 1384
        },
        "metadata": [
          {
            "name": "m_bIsPlayingBack",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bPaused",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bMultiplayer",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bAutogenerated",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flForceClientTime",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_hActorList",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseFlex>"
          },
          {
            "name": "m_nSceneStringIndex",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          }
        ],
        "parent": "CPointEntity"
      },
      "CSceneEntityAlias_logic_choreographed_scene": {
        "fields": {},
        "metadata": [],
        "parent": "CSceneEntity"
      },
      "CSceneListManager": {
        "fields": {
          "m_hListManagers": 1264,
          "m_hScenes": 1416,
          "m_iszScenes": 1288
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CScriptComponent": {
        "fields": {
          "m_scriptClassName": 48
        },
        "metadata": [],
        "parent": "CEntityComponent"
      },
      "CScriptItem": {
        "fields": {
          "m_MoveTypeOverride": 2896
        },
        "metadata": [],
        "parent": "CItem"
      },
      "CScriptNavBlocker": {
        "fields": {
          "m_vExtent": 2048
        },
        "metadata": [],
        "parent": "CFuncNavBlocker"
      },
      "CScriptTriggerHurt": {
        "fields": {
          "m_vExtent": 2648
        },
        "metadata": [],
        "parent": "CTriggerHurt"
      },
      "CScriptTriggerMultiple": {
        "fields": {
          "m_vExtent": 2528
        },
        "metadata": [],
        "parent": "CTriggerMultiple"
      },
      "CScriptTriggerOnce": {
        "fields": {
          "m_vExtent": 2528
        },
        "metadata": [],
        "parent": "CTriggerOnce"
      },
      "CScriptTriggerPush": {
        "fields": {
          "m_vExtent": 2544
        },
        "metadata": [],
        "parent": "CTriggerPush"
      },
      "CScriptedSequence": {
        "fields": {
          "m_ConflictResponse": 1452,
          "m_OnActionStartOrLoop": 1496,
          "m_OnBeginSequence": 1456,
          "m_OnCancelFailedSequence": 1656,
          "m_OnCancelSequence": 1616,
          "m_OnEndSequence": 1536,
          "m_OnPostIdleEndSequence": 1576,
          "m_OnScriptEvent": 1696,
          "m_bAllowCustomInterruptConditions": 1439,
          "m_bCanOverrideNPCState": 1353,
          "m_bContinueOnDeath": 1357,
          "m_bDisableAimingWhileMoving": 1367,
          "m_bDisableNPCCollisions": 1364,
          "m_bDisallowInterrupts": 1352,
          "m_bDontAddModifiers": 1366,
          "m_bDontCancelOtherSequences": 1444,
          "m_bDontRotateOther": 1348,
          "m_bDontTeleportAtEnd": 1354,
          "m_bEnsureOnNavmeshOnFinish": 1447,
          "m_bForceSynch": 1445,
          "m_bHideDebugComplaints": 1356,
          "m_bHighPriority": 1355,
          "m_bIgnoreGravity": 1363,
          "m_bIgnoreLookAt": 1362,
          "m_bIgnoreRotation": 1368,
          "m_bInitiatedSelfDelete": 1437,
          "m_bInterruptable": 1424,
          "m_bIsPlayingAction": 1346,
          "m_bIsPlayingEntry": 1345,
          "m_bIsPlayingPostIdle": 1347,
          "m_bIsPlayingPreIdle": 1344,
          "m_bIsRepeatable": 1349,
          "m_bIsTeleportingDueToMoveTo": 1438,
          "m_bKeepAnimgraphLockedPost": 1365,
          "m_bLoopActionSequence": 1359,
          "m_bLoopPostIdleSequence": 1360,
          "m_bLoopPreIdleSequence": 1358,
          "m_bPositionRelativeToOtherEntity": 1426,
          "m_bPreventUpdateYawOnFinish": 1446,
          "m_bShouldLeaveCorpse": 1350,
          "m_bSkipFadeIn": 2056,
          "m_bStartOnSpawn": 1351,
          "m_bSynchPostIdles": 1361,
          "m_bThinking": 1436,
          "m_bWaitForBeginSequence": 1408,
          "m_bWaitUntilMoveCompletesToStartAnimation": 1396,
          "m_flAngRate": 1388,
          "m_flMoveInterpTime": 1384,
          "m_flMoveSpeed": 1392,
          "m_flPlayAnimFadeInTime": 1380,
          "m_flRadius": 1372,
          "m_flRepeat": 1376,
          "m_hForcedTarget": 1440,
          "m_hInteractionMainEntity": 2048,
          "m_hNextCine": 1432,
          "m_hTargetEnt": 1428,
          "m_iPlayerDeathBehavior": 2052,
          "m_iszEntity": 1312,
          "m_iszEntry": 1264,
          "m_iszModifierToAddOnPlay": 1296,
          "m_iszNextScript": 1304,
          "m_iszPlay": 1280,
          "m_iszPostIdle": 1288,
          "m_iszPreIdle": 1272,
          "m_iszSyncGroup": 1320,
          "m_matOtherToMain": 2016,
          "m_nForcedCrouchState": 1340,
          "m_nHeldWeaponBehavior": 1336,
          "m_nMoveTo": 1328,
          "m_nMoveToGait": 1332,
          "m_nNotReadySequenceCount": 1400,
          "m_onDeathBehavior": 1448,
          "m_savedCollisionGroup": 1420,
          "m_savedFlags": 1416,
          "m_saved_effects": 1412,
          "m_sequenceStarted": 1425,
          "m_startTime": 1404
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CServerOnlyEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CServerOnlyModelEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CServerOnlyPointEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CServerOnlyEntity"
      },
      "CServerRagdollTrigger": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CSharedPulseTypeQueryRegistration": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseTypeQueriesForScopeSingleton",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CShatterGlassShardPhysics": {
        "fields": {
          "m_ShardDesc": 3560,
          "m_bDebris": 3552,
          "m_hParentShard": 3556
        },
        "metadata": [
          {
            "name": "MNetworkExcludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_ShardDesc",
            "type": "NetworkVarNames",
            "type_name": "shard_model_desc_t"
          }
        ],
        "parent": "CPhysicsProp"
      },
      "CShower": {
        "fields": {},
        "metadata": [],
        "parent": "CModelPointEntity"
      },
      "CSimpleMarkupVolumeTagged": {
        "fields": {},
        "metadata": [],
        "parent": "CMarkupVolumeTagged"
      },
      "CSingleplayRules": {
        "fields": {
          "m_bSinglePlayerGameEnding": 192
        },
        "metadata": [],
        "parent": null
      },
      "CSkeletonInstance": {
        "fields": {
          "m_bDirtyMotionType": 0,
          "m_bDisableSolidCollisionsForHierarchy": 1010,
          "m_bIsAnimationEnabled": 1008,
          "m_bIsGeneratingLatchedParentSpaceState": 0,
          "m_bUseParentRenderBounds": 1009,
          "m_materialGroup": 1012,
          "m_modelState": 368,
          "m_nHitboxSet": 1016
        },
        "metadata": [
          {
            "name": "m_modelState",
            "type": "NetworkVarNames",
            "type_name": "CModelState"
          },
          {
            "name": "m_bIsAnimationEnabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bUseParentRenderBounds",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_materialGroup",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          },
          {
            "name": "m_nHitboxSet",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          }
        ],
        "parent": "CGameSceneNode"
      },
      "CSkyCamera": {
        "fields": {
          "m_bUseAngles": 1412,
          "m_pNext": 1416,
          "m_skyboxData": 1264,
          "m_skyboxSlotToken": 1408
        },
        "metadata": [
          {
            "name": "m_skyboxData",
            "type": "NetworkVarNames",
            "type_name": "sky3dparams_t"
          },
          {
            "name": "m_skyboxSlotToken",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CSkyboxReference": {
        "fields": {
          "m_hSkyCamera": 1268,
          "m_worldGroupId": 1264
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CSmokeGrenade": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseCSGrenade"
      },
      "CSmokeGrenadeProjectile": {
        "fields": {
          "m_VoxelFrameData": 3184,
          "m_bDidGroundScorch": 12057,
          "m_bDidSmokeEffect": 3148,
          "m_bExplodeFromInferno": 12056,
          "m_flLastBounce": 3216,
          "m_fllastSimulationTime": 3220,
          "m_nRandomSeed": 3152,
          "m_nSmokeEffectTickBegin": 3144,
          "m_nVoxelFrameDataSize": 3208,
          "m_nVoxelUpdate": 3212,
          "m_vSmokeColor": 3156,
          "m_vSmokeDetonationPos": 3168
        },
        "metadata": [
          {
            "name": "m_nSmokeEffectTickBegin",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bDidSmokeEffect",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_nRandomSeed",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_vSmokeColor",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vSmokeDetonationPos",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_VoxelFrameData",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nVoxelFrameDataSize",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nVoxelUpdate",
            "type": "NetworkVarNames",
            "type_name": "int"
          }
        ],
        "parent": "CBaseCSGrenadeProjectile"
      },
      "CSoundAreaEntityBase": {
        "fields": {
          "m_bDisabled": 1264,
          "m_iszSoundAreaType": 1272,
          "m_vPos": 1280
        },
        "metadata": [
          {
            "name": "m_bDisabled",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_iszSoundAreaType",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_vPos",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CSoundAreaEntityOrientedBox": {
        "fields": {
          "m_vMax": 1308,
          "m_vMin": 1296
        },
        "metadata": [
          {
            "name": "m_vMin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vMax",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CSoundAreaEntityBase"
      },
      "CSoundAreaEntitySphere": {
        "fields": {
          "m_flRadius": 1296
        },
        "metadata": [
          {
            "name": "m_flRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CSoundAreaEntityBase"
      },
      "CSoundEventAABBEntity": {
        "fields": {
          "m_vMaxs": 1476,
          "m_vMins": 1464
        },
        "metadata": [
          {
            "name": "m_vMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CSoundEventEntity"
      },
      "CSoundEventEntity": {
        "fields": {
          "m_bSaveRestore": 1267,
          "m_bSavedIsPlaying": 1268,
          "m_bStartOnSpawn": 1264,
          "m_bStopOnNew": 1266,
          "m_bToLocalPlayer": 1265,
          "m_flClientCullRadius": 1376,
          "m_flSavedElapsedTime": 1272,
          "m_hSource": 1452,
          "m_iszAttachmentName": 1288,
          "m_iszSoundName": 1424,
          "m_iszSourceEntityName": 1280,
          "m_nEntityIndexSelection": 1456,
          "m_onGUIDChanged": 1296,
          "m_onSoundFinished": 1336
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CSoundEventEntityAlias_snd_event_point": {
        "fields": {},
        "metadata": [],
        "parent": "CSoundEventEntity"
      },
      "CSoundEventOBBEntity": {
        "fields": {
          "m_vMaxs": 1476,
          "m_vMins": 1464
        },
        "metadata": [
          {
            "name": "m_vMins",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vMaxs",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          }
        ],
        "parent": "CSoundEventEntity"
      },
      "CSoundEventParameter": {
        "fields": {
          "m_flFloatValue": 1296,
          "m_iszParamName": 1288
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CSoundEventPathCornerEntity": {
        "fields": {
          "m_bPlaying": 1488,
          "m_flDistMaxSqr": 1480,
          "m_flDistanceMax": 1476,
          "m_flDotProductMax": 1484,
          "m_iCountMax": 1472,
          "m_iszPathCorner": 1464,
          "m_vecCornerPairsNetworked": 1528
        },
        "metadata": [
          {
            "name": "m_vecCornerPairsNetworked",
            "type": "NetworkVarNames",
            "type_name": "SoundeventPathCornerPairNetworked_t"
          }
        ],
        "parent": "CSoundEventEntity"
      },
      "CSoundEventSphereEntity": {
        "fields": {
          "m_flRadius": 1464
        },
        "metadata": [
          {
            "name": "m_flRadius",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CSoundEventEntity"
      },
      "CSoundOpvarSetAABBEntity": {
        "fields": {
          "m_nAABBDirection": 1752,
          "m_vDistanceInnerMaxs": 1716,
          "m_vDistanceInnerMins": 1704,
          "m_vDistanceOuterMaxs": 1740,
          "m_vDistanceOuterMins": 1728,
          "m_vInnerMaxs": 1768,
          "m_vInnerMins": 1756,
          "m_vOuterMaxs": 1792,
          "m_vOuterMins": 1780
        },
        "metadata": [],
        "parent": "CSoundOpvarSetPointEntity"
      },
      "CSoundOpvarSetAutoRoomEntity": {
        "fields": {
          "m_doorwayPairs": 1728,
          "m_flHeightTolerance": 1756,
          "m_flSize": 1752,
          "m_flSizeSqr": 1760,
          "m_traceResults": 1704
        },
        "metadata": [],
        "parent": "CSoundOpvarSetPointEntity"
      },
      "CSoundOpvarSetEntity": {
        "fields": {
          "m_OpvarValueString": 1328,
          "m_bSetOnSpawn": 1336,
          "m_flOpvarValue": 1320,
          "m_iszOperatorName": 1296,
          "m_iszOpvarName": 1304,
          "m_iszStackName": 1288,
          "m_nOpvarIndex": 1316,
          "m_nOpvarType": 1312
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CSoundOpvarSetOBBEntity": {
        "fields": {},
        "metadata": [],
        "parent": "CSoundOpvarSetAABBEntity"
      },
      "CSoundOpvarSetOBBWindEntity": {
        "fields": {
          "m_flWindMapMax": 1492,
          "m_flWindMapMin": 1488,
          "m_flWindMax": 1484,
          "m_flWindMin": 1480,
          "m_vDistanceMaxs": 1468,
          "m_vDistanceMins": 1456,
          "m_vMaxs": 1444,
          "m_vMins": 1432
        },
        "metadata": [],
        "parent": "CSoundOpvarSetPointBase"
      },
      "CSoundOpvarSetPathCornerEntity": {
        "fields": {
          "m_flDistMaxSqr": 1732,
          "m_flDistMinSqr": 1728,
          "m_iszPathCornerEntityName": 1736
        },
        "metadata": [],
        "parent": "CSoundOpvarSetPointEntity"
      },
      "CSoundOpvarSetPointBase": {
        "fields": {
          "m_bDisabled": 1264,
          "m_bUseAutoCompare": 1428,
          "m_hSource": 1268,
          "m_iOpvarIndex": 1424,
          "m_iszOperatorName": 1408,
          "m_iszOpvarName": 1416,
          "m_iszSourceEntityName": 1296,
          "m_iszStackName": 1400,
          "m_vLastPosition": 1384
        },
        "metadata": [
          {
            "name": "m_iszStackName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iszOperatorName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iszOpvarName",
            "type": "NetworkVarNames",
            "type_name": "string_t"
          },
          {
            "name": "m_iOpvarIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bUseAutoCompare",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CSoundOpvarSetPointEntity": {
        "fields": {
          "m_OnEnter": 1432,
          "m_OnExit": 1472,
          "m_bAutoDisable": 1512,
          "m_bReloading": 1613,
          "m_bSetValueOnDisable": 1612,
          "m_flDistanceMapMax": 1592,
          "m_flDistanceMapMin": 1588,
          "m_flDistanceMax": 1584,
          "m_flDistanceMin": 1580,
          "m_flDynamicMaximumOcclusion": 1636,
          "m_flOcclusionMax": 1604,
          "m_flOcclusionMin": 1600,
          "m_flOcclusionRadius": 1596,
          "m_flPathingDistanceNormFactor": 1656,
          "m_flValSetOnDisable": 1608,
          "m_hDynamicEntity": 1640,
          "m_iszDynamicEntityName": 1648,
          "m_nPathingSourceIndex": 1696,
          "m_nSimulationMode": 1616,
          "m_nVisibilitySamples": 1620,
          "m_vDynamicProxyPoint": 1624,
          "m_vPathingDirection": 1684,
          "m_vPathingListenerPos": 1672,
          "m_vPathingSourcePos": 1660
        },
        "metadata": [],
        "parent": "CSoundOpvarSetPointBase"
      },
      "CSoundStackSave": {
        "fields": {
          "m_iszStackName": 1264
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CSplineConstraint": {
        "fields": {
          "m_bEnableAngularConstraint": 1474,
          "m_bEnableLateralConstraint": 1472,
          "m_bEnableLimit": 1475,
          "m_bEnableVerticalConstraint": 1473,
          "m_bFireEventsOnPath": 1476,
          "m_flLinarDampingRatio": 1484,
          "m_flLinearFrequency": 1480,
          "m_hSplineEntity": 1468,
          "m_vAnchorOffsetRestore": 1456,
          "m_vPreSolveAnchorPos": 1520
        },
        "metadata": [],
        "parent": "CPhysConstraint"
      },
      "CSpotlightEnd": {
        "fields": {
          "m_Radius": 2028,
          "m_flLightScale": 2024,
          "m_vSpotlightDir": 2032,
          "m_vSpotlightOrg": 2044
        },
        "metadata": [
          {
            "name": "m_flLightScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_Radius",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CSprite": {
        "fields": {
          "m_bWorldSpaceScale": 2080,
          "m_flBrightnessDuration": 2068,
          "m_flBrightnessTimeStart": 2120,
          "m_flDestScale": 2104,
          "m_flDieTime": 2048,
          "m_flFrame": 2044,
          "m_flGlowProxySize": 2084,
          "m_flHDRColorScale": 2088,
          "m_flLastTime": 2092,
          "m_flMaxFrame": 2096,
          "m_flScaleDuration": 2076,
          "m_flScaleTimeStart": 2108,
          "m_flSpriteFramerate": 2040,
          "m_flSpriteScale": 2072,
          "m_flStartScale": 2100,
          "m_hAttachedToEntity": 2032,
          "m_hSpriteMaterial": 2024,
          "m_nAttachment": 2036,
          "m_nBrightness": 2064,
          "m_nDestBrightness": 2116,
          "m_nSpriteHeight": 2128,
          "m_nSpriteWidth": 2124,
          "m_nStartBrightness": 2112
        },
        "metadata": [
          {
            "name": "m_hSpriteMaterial",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_hAttachedToEntity",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBaseEntity>"
          },
          {
            "name": "m_nAttachment",
            "type": "NetworkVarNames",
            "type_name": "AttachmentHandle_t"
          },
          {
            "name": "m_flSpriteFramerate",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flFrame",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nBrightness",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_flBrightnessDuration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flSpriteScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flScaleDuration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_bWorldSpaceScale",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flGlowProxySize",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_flHDRColorScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CSpriteAlias_env_glow": {
        "fields": {},
        "metadata": [],
        "parent": "CSprite"
      },
      "CSpriteOriented": {
        "fields": {},
        "metadata": [],
        "parent": "CSprite"
      },
      "CTakeDamageInfoAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CTankTargetChange": {
        "fields": {
          "m_newTarget": 1264,
          "m_newTargetName": 1280
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CTankTrainAI": {
        "fields": {
          "m_engineSoundName": 1304,
          "m_hTargetEntity": 1268,
          "m_hTrain": 1264,
          "m_movementSoundName": 1312,
          "m_soundPlaying": 1272,
          "m_startSoundName": 1296,
          "m_targetEntityName": 1320
        },
        "metadata": [],
        "parent": "CPointEntity"
      },
      "CTeam": {
        "fields": {
          "m_aPlayerControllers": 1264,
          "m_aPlayers": 1288,
          "m_iScore": 1312,
          "m_szTeamname": 1316
        },
        "metadata": [
          {
            "name": "MNetworkIncludeByName",
            "type": "Unknown"
          },
          {
            "name": "m_aPlayerControllers",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerController>"
          },
          {
            "name": "m_aPlayers",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CBasePlayerPawn>"
          },
          {
            "name": "m_iScore",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_szTeamname",
            "type": "NetworkVarNames",
            "type_name": "char"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CTeamplayRules": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "CTestEffect": {
        "fields": {
          "m_flBeamTime": 1464,
          "m_flStartTime": 1560,
          "m_iBeam": 1268,
          "m_iLoop": 1264,
          "m_pBeam": 1272
        },
        "metadata": [],
        "parent": "CBaseEntity"
      },
      "CTestPulseIO": {
        "fields": {
          "m_OnVariantBool": 1304,
          "m_OnVariantColor": 1464,
          "m_OnVariantFloat": 1384,
          "m_OnVariantInt": 1344,
          "m_OnVariantString": 1424,
          "m_OnVariantVector": 1504,
          "m_OnVariantVoid": 1264,
          "m_bAllowEmptyInputs": 1544
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CTestPulseIOAPI": {
        "fields": {},
        "metadata": [
          {
            "name": "MPulseLibraryBindings",
            "type": "Unknown"
          },
          {
            "name": "MPulseProvideFeatureTag",
            "type": "Unknown"
          },
          {
            "name": "MPulseDomainHookInfo",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "CTextureBasedAnimatable": {
        "fields": {
          "m_bLoop": 2024,
          "m_flFPS": 2028,
          "m_flStartFrame": 2076,
          "m_flStartTime": 2072,
          "m_hPositionKeys": 2032,
          "m_hRotationKeys": 2040,
          "m_vAnimationBoundsMax": 2060,
          "m_vAnimationBoundsMin": 2048
        },
        "metadata": [
          {
            "name": "m_bLoop",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_flFPS",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_hPositionKeys",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_hRotationKeys",
            "type": "NetworkVarNames",
            "type_name": "HRenderTextureStrong"
          },
          {
            "name": "m_vAnimationBoundsMin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vAnimationBoundsMax",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_flStartTime",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flStartFrame",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseModelEntity"
      },
      "CTimeline": {
        "fields": {
          "m_bStopped": 544,
          "m_flFinalValue": 536,
          "m_flInterval": 532,
          "m_flValues": 16,
          "m_nBucketCount": 528,
          "m_nCompressionType": 540,
          "m_nValueCounts": 272
        },
        "metadata": [
          {
            "name": "m_flValues",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nValueCounts",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nBucketCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_flInterval",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFinalValue",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_nCompressionType",
            "type": "NetworkVarNames",
            "type_name": "TimelineCompression_t"
          },
          {
            "name": "m_bStopped",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": ""
      },
      "CTimerEntity": {
        "fields": {
          "m_OnTimer": 1264,
          "m_OnTimerHigh": 1304,
          "m_OnTimerLow": 1344,
          "m_bPauseAfterFiring": 1404,
          "m_bPaused": 1420,
          "m_bUpDownState": 1396,
          "m_flInitialDelay": 1388,
          "m_flLowerRandomBound": 1408,
          "m_flRefireTime": 1392,
          "m_flRemainingTime": 1416,
          "m_flUpperRandomBound": 1412,
          "m_iDisabled": 1384,
          "m_iUseRandomTime": 1400
        },
        "metadata": [],
        "parent": "CLogicalEntity"
      },
      "CTonemapController2": {
        "fields": {
          "m_flAutoExposureMax": 1268,
          "m_flAutoExposureMin": 1264,
          "m_flExposureAdaptationSpeedDown": 1276,
          "m_flExposureAdaptationSpeedUp": 1272,
          "m_flTonemapEVSmoothingRange": 1280
        },
        "metadata": [
          {
            "name": "m_flAutoExposureMin",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flAutoExposureMax",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flExposureAdaptationSpeedUp",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flExposureAdaptationSpeedDown",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flTonemapEVSmoothingRange",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CTonemapController2Alias_env_tonemap_controller2": {
        "fields": {},
        "metadata": [],
        "parent": "CTonemapController2"
      },
      "CTonemapTrigger": {
        "fields": {
          "m_hTonemapController": 2496,
          "m_tonemapControllerName": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTouchExpansionComponent": {
        "fields": {},
        "metadata": [],
        "parent": "CEntityComponent"
      },
      "CTriggerActiveWeaponDetect": {
        "fields": {
          "m_OnTouchedActiveWeapon": 2488,
          "m_iszWeaponClassName": 2528
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerBombReset": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerBrush": {
        "fields": {
          "m_OnEndTouch": 2064,
          "m_OnStartTouch": 2024,
          "m_OnUse": 2104,
          "m_iDontMessageParent": 2148,
          "m_iInputFilter": 2144
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CTriggerBuoyancy": {
        "fields": {
          "m_BuoyancyHelper": 2488,
          "m_flFluidDensity": 2768
        },
        "metadata": [
          {
            "name": "m_flFluidDensity",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CTriggerCallback": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerDetectBulletFire": {
        "fields": {
          "m_OnDetectedBulletFire": 2496,
          "m_bPlayerFireOnly": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerDetectExplosion": {
        "fields": {
          "m_OnDetectedExplosion": 2520
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerFan": {
        "fields": {
          "m_RampTimer": 2592,
          "m_bFalloff": 2584,
          "m_bPlayerWindblock": 2636,
          "m_bPushAwayFromInfoTarget": 2549,
          "m_bPushPlayer": 2656,
          "m_bPushTowardsInfoTarget": 2548,
          "m_bRampDown": 2657,
          "m_fNoiseDegrees": 2648,
          "m_fNoiseSpeed": 2652,
          "m_flForce": 2580,
          "m_flNPCForce": 2640,
          "m_flParticleForceScale": 2628,
          "m_flPlayerForce": 2632,
          "m_flRampTime": 2644,
          "m_flRopeForceScale": 2624,
          "m_hInfoFan": 2576,
          "m_iszInfoFan": 2616,
          "m_nManagerFanIdx": 2660,
          "m_qNoiseDelta": 2560,
          "m_vDirection": 2536,
          "m_vFanEnd": 2512,
          "m_vFanOrigin": 2488,
          "m_vFanOriginOffset": 2500,
          "m_vNoiseDirectionTarget": 2524
        },
        "metadata": [
          {
            "name": "m_vFanOrigin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vFanOriginOffset",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vFanEnd",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vNoiseDirectionTarget",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vDirection",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bPushTowardsInfoTarget",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bPushAwayFromInfoTarget",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_qNoiseDelta",
            "type": "NetworkVarNames",
            "type_name": "Quaternion"
          },
          {
            "name": "m_hInfoFan",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CInfoFan>"
          },
          {
            "name": "m_flForce",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bFalloff",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_RampTimer",
            "type": "NetworkVarNames",
            "type_name": "CountdownTimer"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CTriggerGameEvent": {
        "fields": {
          "m_strEndTouchEventName": 2496,
          "m_strStartTouchEventName": 2488,
          "m_strTriggerID": 2504
        },
        "metadata": [
          {
            "name": "m_strStartTouchEventName",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_strEndTouchEventName",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          },
          {
            "name": "m_strTriggerID",
            "type": "NetworkVarNames",
            "type_name": "CUtlString"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CTriggerGravity": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerHostageReset": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerHurt": {
        "fields": {
          "m_OnHurt": 2544,
          "m_OnHurtPlayer": 2584,
          "m_bNoDmgForce": 2516,
          "m_bitsDamageInflict": 2508,
          "m_damageModel": 2512,
          "m_flDamage": 2492,
          "m_flDamageCap": 2496,
          "m_flForgivenessDelay": 2504,
          "m_flLastDmgTime": 2500,
          "m_flOriginalDamage": 2488,
          "m_hurtEntities": 2624,
          "m_hurtThinkPeriod": 2536,
          "m_thinkAlways": 2532,
          "m_vDamageForce": 2520
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerImpact": {
        "fields": {
          "m_flMagnitude": 2528,
          "m_flNoise": 2532,
          "m_flViewkick": 2536,
          "m_pOutputForce": 2544
        },
        "metadata": [],
        "parent": "CTriggerMultiple"
      },
      "CTriggerLerpObject": {
        "fields": {
          "m_OnLerpFinished": 2616,
          "m_OnLerpStarted": 2576,
          "m_bAttachTouchingObject": 2568,
          "m_bLerpRestoreMoveType": 2520,
          "m_bSingleLerpObject": 2521,
          "m_flLerpDuration": 2516,
          "m_hEntityToWaitForDisconnect": 2572,
          "m_hLerpTarget": 2496,
          "m_hLerpTargetAttachment": 2512,
          "m_iszLerpEffect": 2552,
          "m_iszLerpSound": 2560,
          "m_iszLerpTarget": 2488,
          "m_iszLerpTargetAttachment": 2504,
          "m_vecLerpingObjects": 2528
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerLook": {
        "fields": {
          "m_OnEndLook": 2640,
          "m_OnStartLook": 2600,
          "m_OnTimeout": 2560,
          "m_b2DFOV": 2554,
          "m_bIsLooking": 2553,
          "m_bTestAllVisibleOcclusion": 2557,
          "m_bTestOcclusion": 2556,
          "m_bTimeoutFired": 2552,
          "m_bUseVelocity": 2555,
          "m_flFieldOfView": 2532,
          "m_flLookTime": 2536,
          "m_flLookTimeLast": 2544,
          "m_flLookTimeTotal": 2540,
          "m_flTimeoutDuration": 2548,
          "m_hLookTarget": 2528
        },
        "metadata": [
          {
            "name": "m_bTestOcclusion",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bTestAllVisibleOcclusion",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CTriggerOnce"
      },
      "CTriggerMultiple": {
        "fields": {
          "m_OnTrigger": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerOnce": {
        "fields": {},
        "metadata": [],
        "parent": "CTriggerMultiple"
      },
      "CTriggerPhysics": {
        "fields": {
          "m_angularDamping": 2520,
          "m_angularLimit": 2516,
          "m_bCollapseToForcePoint": 2548,
          "m_bConvertToDebrisWhenPossible": 2576,
          "m_flDampingRatio": 2532,
          "m_flFrequency": 2528,
          "m_gravityScale": 2504,
          "m_linearDamping": 2512,
          "m_linearForce": 2524,
          "m_linearLimit": 2508,
          "m_vecLinearForceDirection": 2564,
          "m_vecLinearForcePointAt": 2536,
          "m_vecLinearForcePointAtWorld": 2552
        },
        "metadata": [
          {
            "name": "m_gravityScale",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_linearLimit",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_linearDamping",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_angularLimit",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_angularDamping",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_linearForce",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flFrequency",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_flDampingRatio",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_vecLinearForcePointAt",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bCollapseToForcePoint",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_vecLinearForcePointAtWorld",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_vecLinearForceDirection",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "m_bConvertToDebrisWhenPossible",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseTrigger"
      },
      "CTriggerProximity": {
        "fields": {
          "m_NearestEntityDistance": 2512,
          "m_fRadius": 2504,
          "m_hMeasureTarget": 2488,
          "m_iszMeasureTarget": 2496,
          "m_nTouchers": 2508
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerPush": {
        "fields": {
          "m_PathSimple": 2528,
          "m_angPushEntitySpace": 2488,
          "m_bTriggerOnStartTouch": 2512,
          "m_bUsePathSimple": 2513,
          "m_iszPathSimpleName": 2520,
          "m_splinePushType": 2536,
          "m_vecPushDirEntitySpace": 2500
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerRemove": {
        "fields": {
          "m_OnRemove": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerSave": {
        "fields": {
          "m_bForceNewLevelUnit": 2488,
          "m_fDangerousTimer": 2492,
          "m_minHitPoints": 2496
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerSndSosOpvar": {
        "fields": {
          "m_VecNormPos": 3332,
          "m_bVolIs2D": 2560,
          "m_flCenterSize": 2524,
          "m_flMaxVal": 2532,
          "m_flMinVal": 2528,
          "m_flNormCenterSize": 3344,
          "m_flPosition": 2512,
          "m_hTouchingPlayers": 2488,
          "m_operatorName": 2552,
          "m_operatorNameChar": 3073,
          "m_opvarName": 2536,
          "m_opvarNameChar": 2561,
          "m_stackName": 2544,
          "m_stackNameChar": 2817
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerSoundscape": {
        "fields": {
          "m_SoundscapeName": 2496,
          "m_hSoundscape": 2488,
          "m_spectators": 2504
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerTeleport": {
        "fields": {
          "m_bCheckDestIfClearForPlayer": 2498,
          "m_bMirrorPlayer": 2497,
          "m_bUseLandmarkAngles": 2496,
          "m_iLandmark": 2488
        },
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerToggleSave": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseTrigger"
      },
      "CTriggerVolume": {
        "fields": {
          "m_hFilter": 2032,
          "m_iFilterName": 2024
        },
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CVoteController": {
        "fields": {
          "m_VoteOptions": 1672,
          "m_acceptingVotesTimer": 1304,
          "m_bIsYesNoVote": 1296,
          "m_executeCommandTimer": 1328,
          "m_iActiveIssueIndex": 1264,
          "m_iOnlyTeamToVote": 1268,
          "m_nHighestCountIndex": 1640,
          "m_nPotentialVotes": 1292,
          "m_nVoteOptionCount": 1272,
          "m_nVotesCast": 1376,
          "m_playerHoldingVote": 1632,
          "m_playerOverrideForVote": 1636,
          "m_potentialIssues": 1648,
          "m_resetVoteTimer": 1352
        },
        "metadata": [
          {
            "name": "m_iActiveIssueIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_iOnlyTeamToVote",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nVoteOptionCount",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPotentialVotes",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bIsYesNoVote",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CBaseEntity"
      },
      "CWaterBullet": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseAnimGraph"
      },
      "CWeaponAWP": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponAug": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponBaseItem": {
        "fields": {
          "m_SequenceCompleteTimer": 4152,
          "m_bRedraw": 4176
        },
        "metadata": [
          {
            "name": "m_SequenceCompleteTimer",
            "type": "NetworkVarNames",
            "type_name": "CountdownTimer"
          },
          {
            "name": "m_bRedraw",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CCSWeaponBase"
      },
      "CWeaponBizon": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponCZ75a": {
        "fields": {
          "m_bMagazineRemoved": 4184
        },
        "metadata": [
          {
            "name": "m_bMagazineRemoved",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponElite": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponFamas": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponFiveSeven": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponG3SG1": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponGalilAR": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponGlock": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponHKP2000": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponM249": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponM4A1": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponM4A1Silencer": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponMAC10": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponMP5SD": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponMP7": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponMP9": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponMag7": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponNOVA": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBase"
      },
      "CWeaponNegev": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponP250": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponP90": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponRevolver": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponSCAR20": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponSG556": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponSSG08": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponSawedoff": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBase"
      },
      "CWeaponTaser": {
        "fields": {
          "m_fFireTime": 4184,
          "m_nLastAttackTick": 4188
        },
        "metadata": [
          {
            "name": "m_fFireTime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          }
        ],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponTec9": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponUMP45": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponUSPSilencer": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBaseGun"
      },
      "CWeaponXM1014": {
        "fields": {},
        "metadata": [],
        "parent": "CCSWeaponBase"
      },
      "CWorld": {
        "fields": {},
        "metadata": [],
        "parent": "CBaseModelEntity"
      },
      "CountdownTimer": {
        "fields": {
          "m_duration": 8,
          "m_nWorldGroupId": 20,
          "m_timescale": 16,
          "m_timestamp": 12
        },
        "metadata": [
          {
            "name": "m_duration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_timestamp",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_timescale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_nWorldGroupId",
            "type": "NetworkVarNames",
            "type_name": "WorldGroupId_t"
          }
        ],
        "parent": ""
      },
      "EngineCountdownTimer": {
        "fields": {
          "m_duration": 8,
          "m_timescale": 16,
          "m_timestamp": 12
        },
        "metadata": [
          {
            "name": "m_duration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_timestamp",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "m_timescale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          }
        ],
        "parent": ""
      },
      "EntityRenderAttribute_t": {
        "fields": {
          "m_ID": 48,
          "m_Values": 52
        },
        "metadata": [
          {
            "name": "m_ID",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          },
          {
            "name": "m_Values",
            "type": "NetworkVarNames",
            "type_name": "Vector4D"
          }
        ],
        "parent": ""
      },
      "EntitySpottedState_t": {
        "fields": {
          "m_bSpotted": 8,
          "m_bSpottedByMask": 12
        },
        "metadata": [
          {
            "name": "m_bSpotted",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bSpottedByMask",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": null
      },
      "FilterDamageType": {
        "fields": {
          "m_iDamageType": 1352
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "FilterHealth": {
        "fields": {
          "m_bAdrenalineActive": 1352,
          "m_iHealthMax": 1360,
          "m_iHealthMin": 1356
        },
        "metadata": [],
        "parent": "CBaseFilter"
      },
      "IntervalTimer": {
        "fields": {
          "m_nWorldGroupId": 12,
          "m_timestamp": 8
        },
        "metadata": [
          {
            "name": "m_timestamp",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "m_nWorldGroupId",
            "type": "NetworkVarNames",
            "type_name": "WorldGroupId_t"
          }
        ],
        "parent": ""
      },
      "OutflowWithRequirements_t": {
        "fields": {
          "m_Connection": 0,
          "m_DestinationFlowNodeID": 72,
          "m_RequirementNodeIDs": 80,
          "m_nCursorStateBlockIndex": 104
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PhysicsRagdollPose_t": {
        "fields": {
          "m_Transforms": 8,
          "m_bSetFromDebugHistory": 36,
          "m_hOwner": 32
        },
        "metadata": [
          {
            "name": "m_Transforms",
            "type": "NetworkVarNames",
            "type_name": "CTransform"
          },
          {
            "name": "m_hOwner",
            "type": "NetworkVarNames",
            "type_name": "EHANDLE"
          }
        ],
        "parent": ""
      },
      "PredictedDamageTag_t": {
        "fields": {
          "flFlinchModLarge": 56,
          "flFlinchModSmall": 52,
          "flFriendlyFireDamageReductionRatio": 60,
          "nTagTick": 48
        },
        "metadata": [
          {
            "name": "nTagTick",
            "type": "NetworkVarNames",
            "type_name": "GameTick_t"
          },
          {
            "name": "flFlinchModSmall",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "flFlinchModLarge",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "flFriendlyFireDamageReductionRatio",
            "type": "NetworkVarNames",
            "type_name": "float"
          }
        ],
        "parent": null
      },
      "PulseNodeDynamicOutflows_t": {
        "fields": {
          "m_Outflows": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseNodeDynamicOutflows_t__DynamicOutflow_t": {
        "fields": {
          "m_Connection": 8,
          "m_OutflowID": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseObservableBoolExpression_t": {
        "fields": {
          "m_DependentObservableBlackboardReferences": 96,
          "m_DependentObservableVars": 72,
          "m_EvaluateConnection": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "PulseSelectorOutflowList_t": {
        "fields": {
          "m_Outflows": 0
        },
        "metadata": [
          {
            "name": "MGetKV3ClassDefaults",
            "type": "Unknown"
          }
        ],
        "parent": null
      },
      "SellbackPurchaseEntry_t": {
        "fields": {
          "m_bPrevHelmet": 60,
          "m_hItem": 64,
          "m_nCost": 52,
          "m_nPrevArmor": 56,
          "m_unDefIdx": 48
        },
        "metadata": [
          {
            "name": "m_unDefIdx",
            "type": "NetworkVarNames",
            "type_name": "item_definition_index_t"
          },
          {
            "name": "m_nCost",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_nPrevArmor",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "m_bPrevHelmet",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_hItem",
            "type": "NetworkVarNames",
            "type_name": "CEntityHandle"
          }
        ],
        "parent": ""
      },
      "SequenceHistory_t": {
        "fields": {
          "m_flCyclesPerSecond": 20,
          "m_flPlaybackRate": 16,
          "m_flSeqFixedCycle": 8,
          "m_flSeqStartTime": 4,
          "m_hSequence": 0,
          "m_nSeqLoopMode": 12
        },
        "metadata": [],
        "parent": ""
      },
      "SignatureOutflow_Continue": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "SignatureOutflow_Resume": {
        "fields": {},
        "metadata": [],
        "parent": null
      },
      "SpawnPoint": {
        "fields": {
          "m_bEnabled": 1268,
          "m_iPriority": 1264,
          "m_nType": 1272
        },
        "metadata": [],
        "parent": "CServerOnlyPointEntity"
      },
      "VPhysicsCollisionAttribute_t": {
        "fields": {
          "m_nCollisionFunctionMask": 43,
          "m_nCollisionGroup": 42,
          "m_nEntityId": 32,
          "m_nHierarchyId": 40,
          "m_nInteractsAs": 8,
          "m_nInteractsExclude": 24,
          "m_nInteractsWith": 16,
          "m_nOwnerId": 36
        },
        "metadata": [
          {
            "name": "m_nInteractsAs",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_nInteractsWith",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_nInteractsExclude",
            "type": "NetworkVarNames",
            "type_name": "uint64"
          },
          {
            "name": "m_nEntityId",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nOwnerId",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          },
          {
            "name": "m_nHierarchyId",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_nCollisionGroup",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "m_nCollisionFunctionMask",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          }
        ],
        "parent": ""
      },
      "ViewAngleServerChange_t": {
        "fields": {
          "nIndex": 64,
          "nType": 48,
          "qAngle": 52
        },
        "metadata": [
          {
            "name": "nType",
            "type": "NetworkVarNames",
            "type_name": "FixAngleSet_t"
          },
          {
            "name": "qAngle",
            "type": "NetworkVarNames",
            "type_name": "QAngle"
          },
          {
            "name": "nIndex",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": null
      },
      "WeaponPurchaseCount_t": {
        "fields": {
          "m_nCount": 50,
          "m_nItemDefIndex": 48
        },
        "metadata": [
          {
            "name": "m_nItemDefIndex",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          },
          {
            "name": "m_nCount",
            "type": "NetworkVarNames",
            "type_name": "uint16"
          }
        ],
        "parent": ""
      },
      "WeaponPurchaseTracker_t": {
        "fields": {
          "m_weaponPurchases": 8
        },
        "metadata": [
          {
            "name": "m_weaponPurchases",
            "type": "NetworkVarNames",
            "type_name": "WeaponPurchaseCount_t"
          }
        ],
        "parent": ""
      },
      "audioparams_t": {
        "fields": {
          "localBits": 108,
          "localSound": 8,
          "soundEventHash": 116,
          "soundscapeEntityListIndex": 112,
          "soundscapeIndex": 104
        },
        "metadata": [
          {
            "name": "localSound",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "soundscapeIndex",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "localBits",
            "type": "NetworkVarNames",
            "type_name": "uint8"
          },
          {
            "name": "soundscapeEntityListIndex",
            "type": "NetworkVarNames",
            "type_name": "int"
          },
          {
            "name": "soundEventHash",
            "type": "NetworkVarNames",
            "type_name": "uint32"
          }
        ],
        "parent": ""
      },
      "fogparams_t": {
        "fields": {
          "HDRColorScale": 56,
          "blend": 101,
          "blendtobackground": 88,
          "colorPrimary": 20,
          "colorPrimaryLerpTo": 28,
          "colorSecondary": 24,
          "colorSecondaryLerpTo": 32,
          "dirPrimary": 8,
          "duration": 84,
          "enable": 100,
          "end": 40,
          "endLerpTo": 72,
          "exponent": 52,
          "farz": 44,
          "lerptime": 80,
          "locallightscale": 96,
          "m_bPadding": 103,
          "m_bPadding2": 102,
          "maxdensity": 48,
          "maxdensityLerpTo": 76,
          "scattering": 92,
          "skyboxFogFactor": 60,
          "skyboxFogFactorLerpTo": 64,
          "start": 36,
          "startLerpTo": 68
        },
        "metadata": [
          {
            "name": "dirPrimary",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "colorPrimary",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "colorSecondary",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "colorPrimaryLerpTo",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "colorSecondaryLerpTo",
            "type": "NetworkVarNames",
            "type_name": "Color"
          },
          {
            "name": "start",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "end",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "farz",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "maxdensity",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "exponent",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "HDRColorScale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "skyboxFogFactor",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "skyboxFogFactorLerpTo",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "startLerpTo",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "endLerpTo",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "maxdensityLerpTo",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "lerptime",
            "type": "NetworkVarNames",
            "type_name": "GameTime_t"
          },
          {
            "name": "duration",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "blendtobackground",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "scattering",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "locallightscale",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "enable",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "blend",
            "type": "NetworkVarNames",
            "type_name": "bool"
          }
        ],
        "parent": ""
      },
      "fogplayerparams_t": {
        "fields": {
          "m_NewColor": 40,
          "m_OldColor": 16,
          "m_flNewEnd": 48,
          "m_flNewFarZ": 60,
          "m_flNewHDRColorScale": 56,
          "m_flNewMaxDensity": 52,
          "m_flNewStart": 44,
          "m_flOldEnd": 24,
          "m_flOldFarZ": 36,
          "m_flOldHDRColorScale": 32,
          "m_flOldMaxDensity": 28,
          "m_flOldStart": 20,
          "m_flTransitionTime": 12,
          "m_hCtrl": 8
        },
        "metadata": [
          {
            "name": "m_hCtrl",
            "type": "NetworkVarNames",
            "type_name": "CHandle<CFogController>"
          }
        ],
        "parent": ""
      },
      "shard_model_desc_t": {
        "fields": {
          "m_SurfacePropStringToken": 120,
          "m_bHasParent": 116,
          "m_bParentFrozen": 117,
          "m_flGlassHalfThickness": 112,
          "m_hMaterialBase": 16,
          "m_hMaterialDamageOverlay": 24,
          "m_nModelID": 8,
          "m_solid": 32,
          "m_vInitialPanelVertices": 88,
          "m_vecPanelSize": 36,
          "m_vecPanelVertices": 64,
          "m_vecStressPositionA": 44,
          "m_vecStressPositionB": 52
        },
        "metadata": [
          {
            "name": "m_nModelID",
            "type": "NetworkVarNames",
            "type_name": "int32"
          },
          {
            "name": "m_hMaterialBase",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_hMaterialDamageOverlay",
            "type": "NetworkVarNames",
            "type_name": "HMaterialStrong"
          },
          {
            "name": "m_solid",
            "type": "NetworkVarNames",
            "type_name": "ShardSolid_t"
          },
          {
            "name": "m_vecPanelSize",
            "type": "NetworkVarNames",
            "type_name": "Vector2D"
          },
          {
            "name": "m_vecStressPositionA",
            "type": "NetworkVarNames",
            "type_name": "Vector2D"
          },
          {
            "name": "m_vecStressPositionB",
            "type": "NetworkVarNames",
            "type_name": "Vector2D"
          },
          {
            "name": "m_vecPanelVertices",
            "type": "NetworkVarNames",
            "type_name": "Vector2D"
          },
          {
            "name": "m_vInitialPanelVertices",
            "type": "NetworkVarNames",
            "type_name": "Vector4D"
          },
          {
            "name": "m_flGlassHalfThickness",
            "type": "NetworkVarNames",
            "type_name": "float"
          },
          {
            "name": "m_bHasParent",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_bParentFrozen",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "m_SurfacePropStringToken",
            "type": "NetworkVarNames",
            "type_name": "CUtlStringToken"
          }
        ],
        "parent": ""
      },
      "sky3dparams_t": {
        "fields": {
          "bClip3DSkyBoxNearToWorldFar": 24,
          "flClip3DSkyBoxNearToWorldFarOffset": 28,
          "fog": 32,
          "m_nWorldGroupID": 136,
          "origin": 12,
          "scale": 8
        },
        "metadata": [
          {
            "name": "scale",
            "type": "NetworkVarNames",
            "type_name": "int16"
          },
          {
            "name": "origin",
            "type": "NetworkVarNames",
            "type_name": "Vector"
          },
          {
            "name": "bClip3DSkyBoxNearToWorldFar",
            "type": "NetworkVarNames",
            "type_name": "bool"
          },
          {
            "name": "flClip3DSkyBoxNearToWorldFarOffset",
            "type": "NetworkVarNames",
            "type_name": "float32"
          },
          {
            "name": "fog",
            "type": "NetworkVarNames",
            "type_name": "fogparams_t"
          },
          {
            "name": "m_nWorldGroupID",
            "type": "NetworkVarNames",
            "type_name": "WorldGroupId_t"
          }
        ],
        "parent": ""
      }
    },
    "enums": {
      "AmmoFlags_t": {
        "alignment": 4,
        "members": {
          "AMMO_FLAG_MAX": 2,
          "AMMO_FORCE_DROP_IF_CARRIED": 1,
          "AMMO_RESERVE_STAYS_WITH_WEAPON": 2
        },
        "type": "uint32"
      },
      "AmmoPosition_t": {
        "alignment": 4,
        "members": {
          "AMMO_POSITION_COUNT": 2,
          "AMMO_POSITION_INVALID": -1,
          "AMMO_POSITION_PRIMARY": 0,
          "AMMO_POSITION_SECONDARY": 1
        },
        "type": "uint32"
      },
      "AnimLoopMode_t": {
        "alignment": 4,
        "members": {
          "ANIM_LOOP_MODE_COUNT": 3,
          "ANIM_LOOP_MODE_INVALID": -1,
          "ANIM_LOOP_MODE_LOOPING": 1,
          "ANIM_LOOP_MODE_NOT_LOOPING": 0,
          "ANIM_LOOP_MODE_USE_SEQUENCE_SETTINGS": 2
        },
        "type": "uint32"
      },
      "BaseExplosionTypes_t": {
        "alignment": 4,
        "members": {
          "EXPLOSION_TYPE_COUNT": 16,
          "EXPLOSION_TYPE_CUSTOM": 15,
          "EXPLOSION_TYPE_DEFAULT": 0,
          "EXPLOSION_TYPE_ELECTRICAL": 7,
          "EXPLOSION_TYPE_EMP": 8,
          "EXPLOSION_TYPE_EXPLOSIVEBARREL": 6,
          "EXPLOSION_TYPE_FIREWORKS": 3,
          "EXPLOSION_TYPE_FLASHBANG": 11,
          "EXPLOSION_TYPE_GASCAN": 4,
          "EXPLOSION_TYPE_GASCYLINDER": 5,
          "EXPLOSION_TYPE_GRENADE": 1,
          "EXPLOSION_TYPE_ICE": 13,
          "EXPLOSION_TYPE_MOLOTOV": 2,
          "EXPLOSION_TYPE_NONE": 14,
          "EXPLOSION_TYPE_SHRAPNEL": 9,
          "EXPLOSION_TYPE_SMOKEGRENADE": 10,
          "EXPLOSION_TYPE_TRIPMINE": 12
        },
        "type": "uint32"
      },
      "BeamClipStyle_t": {
        "alignment": 4,
        "members": {
          "kBEAMCLIPSTYLE_NUMBITS": 2,
          "kGEOCLIP": 1,
          "kMODELCLIP": 2,
          "kNOCLIP": 0
        },
        "type": "uint32"
      },
      "BeamType_t": {
        "alignment": 4,
        "members": {
          "BEAM_ENTPOINT": 2,
          "BEAM_ENTS": 3,
          "BEAM_HOSE": 4,
          "BEAM_INVALID": 0,
          "BEAM_LASER": 6,
          "BEAM_POINTS": 1,
          "BEAM_SPLINE": 5
        },
        "type": "uint32"
      },
      "BeginDeathLifeStateTransition_t": {
        "alignment": 1,
        "members": {
          "TRANSITION_TO_LIFESTATE_DEAD": 1,
          "TRANSITION_TO_LIFESTATE_DYING": 0
        },
        "type": "uint8"
      },
      "BloodType": {
        "alignment": 4,
        "members": {
          "ColorGreen": 2,
          "ColorRed": 0,
          "ColorRedLVL2": 3,
          "ColorRedLVL3": 4,
          "ColorRedLVL4": 5,
          "ColorRedLVL5": 6,
          "ColorRedLVL6": 7,
          "ColorYellow": 1,
          "None": -1
        },
        "type": "uint32"
      },
      "BreakableContentsType_t": {
        "alignment": 4,
        "members": {
          "BC_DEFAULT": 0,
          "BC_EMPTY": 1,
          "BC_PARTICLE_SYSTEM_OVERRIDE": 3,
          "BC_PROP_GROUP_OVERRIDE": 2
        },
        "type": "uint32"
      },
      "BrushSolidities_e": {
        "alignment": 4,
        "members": {
          "BRUSHSOLID_ALWAYS": 2,
          "BRUSHSOLID_NEVER": 1,
          "BRUSHSOLID_TOGGLE": 0
        },
        "type": "uint32"
      },
      "C4LightEffect_t": {
        "alignment": 4,
        "members": {
          "eLightEffectDropped": 1,
          "eLightEffectNone": 0,
          "eLightEffectThirdPersonHeld": 2
        },
        "type": "uint32"
      },
      "CDebugOverlayCombinedTypes_t": {
        "alignment": 4,
        "members": {
          "ALL": 0,
          "ANY": 1,
          "COUNT": 2
        },
        "type": "uint32"
      },
      "CDebugOverlayFilterTextType_t": {
        "alignment": 4,
        "members": {
          "COUNT": 3,
          "FILTER_TEXT_NONE": 0,
          "HIERARCHY": 2,
          "MATCH": 1
        },
        "type": "uint32"
      },
      "CDebugOverlayFilterType_t": {
        "alignment": 4,
        "members": {
          "AI_EVENT": 7,
          "AI_PATHFINDING": 8,
          "AI_SCHEDULE": 5,
          "AI_TASK": 6,
          "COMBINED": -1,
          "COUNT": 3,
          "END_SIM_HISTORY_TYPES": 9,
          "ENTITY": 2,
          "NONE": 0,
          "TACTICAL_SEARCH": 4,
          "TEXT": 1
        },
        "type": "uint32"
      },
      "CRR_Response__ResponseEnum_t": {
        "alignment": 4,
        "members": {
          "MAX_RESPONSE_NAME": 192,
          "MAX_RULE_NAME": 128
        },
        "type": "uint32"
      },
      "CSPlayerBlockingUseAction_t": {
        "alignment": 4,
        "members": {
          "k_CSPlayerBlockingUseAction_DefusingDefault": 1,
          "k_CSPlayerBlockingUseAction_DefusingWithKit": 2,
          "k_CSPlayerBlockingUseAction_HostageDropping": 4,
          "k_CSPlayerBlockingUseAction_HostageGrabbing": 3,
          "k_CSPlayerBlockingUseAction_MapLongUseEntity_Pickup": 5,
          "k_CSPlayerBlockingUseAction_MapLongUseEntity_Place": 6,
          "k_CSPlayerBlockingUseAction_MaxCount": 7,
          "k_CSPlayerBlockingUseAction_None": 0
        },
        "type": "uint32"
      },
      "CSPlayerState": {
        "alignment": 4,
        "members": {
          "NUM_PLAYER_STATES": 9,
          "STATE_ACTIVE": 0,
          "STATE_DEATH_ANIM": 4,
          "STATE_DEATH_WAIT_FOR_KEY": 5,
          "STATE_DORMANT": 8,
          "STATE_GUNGAME_RESPAWN": 7,
          "STATE_OBSERVER_MODE": 6,
          "STATE_PICKINGCLASS": 3,
          "STATE_PICKINGTEAM": 2,
          "STATE_WELCOME": 1
        },
        "type": "uint32"
      },
      "CSWeaponCategory": {
        "alignment": 4,
        "members": {
          "WEAPONCATEGORY_COUNT": 6,
          "WEAPONCATEGORY_HEAVY": 5,
          "WEAPONCATEGORY_MELEE": 1,
          "WEAPONCATEGORY_OTHER": 0,
          "WEAPONCATEGORY_RIFLE": 4,
          "WEAPONCATEGORY_SECONDARY": 2,
          "WEAPONCATEGORY_SMG": 3
        },
        "type": "uint32"
      },
      "CSWeaponMode": {
        "alignment": 4,
        "members": {
          "Primary_Mode": 0,
          "Secondary_Mode": 1,
          "WeaponMode_MAX": 2
        },
        "type": "uint32"
      },
      "CSWeaponSilencerType": {
        "alignment": 4,
        "members": {
          "WEAPONSILENCER_DETACHABLE": 1,
          "WEAPONSILENCER_INTEGRATED": 2,
          "WEAPONSILENCER_NONE": 0
        },
        "type": "uint32"
      },
      "CSWeaponType": {
        "alignment": 4,
        "members": {
          "WEAPONTYPE_C4": 7,
          "WEAPONTYPE_EQUIPMENT": 10,
          "WEAPONTYPE_GRENADE": 9,
          "WEAPONTYPE_KNIFE": 0,
          "WEAPONTYPE_MACHINEGUN": 6,
          "WEAPONTYPE_PISTOL": 1,
          "WEAPONTYPE_RIFLE": 3,
          "WEAPONTYPE_SHOTGUN": 4,
          "WEAPONTYPE_SNIPER_RIFLE": 5,
          "WEAPONTYPE_STACKABLEITEM": 11,
          "WEAPONTYPE_SUBMACHINEGUN": 2,
          "WEAPONTYPE_TASER": 8,
          "WEAPONTYPE_UNKNOWN": 12
        },
        "type": "uint32"
      },
      "CanPlaySequence_t": {
        "alignment": 4,
        "members": {
          "CANNOT_PLAY": 0,
          "CAN_PLAY_ENQUEUED": 2,
          "CAN_PLAY_NOW": 1
        },
        "type": "uint32"
      },
      "ChatIgnoreType_t": {
        "alignment": 4,
        "members": {
          "CHAT_IGNORE_ALL": 1,
          "CHAT_IGNORE_NONE": 0,
          "CHAT_IGNORE_TEAM": 2
        },
        "type": "uint32"
      },
      "ChickenActivity": {
        "alignment": 4,
        "members": {
          "FEED": 9,
          "GLIDE": 4,
          "IDLE": 0,
          "LAND": 5,
          "PANIC": 6,
          "RUN": 3,
          "SLEEP": 10,
          "SQUAT": 1,
          "TRICK": 7,
          "TURN_IN_PLACE": 8,
          "WALK": 2
        },
        "type": "uint32"
      },
      "ChoreoLookAtMode_t": {
        "alignment": 4,
        "members": {
          "eChest": 0,
          "eEyesOnly": 2,
          "eHead": 1,
          "eInvalid": -1
        },
        "type": "uint32"
      },
      "ChoreoLookAtSpeed_t": {
        "alignment": 4,
        "members": {
          "eFast": 2,
          "eInvalid": -1,
          "eMedium": 1,
          "eSlow": 0
        },
        "type": "uint32"
      },
      "Class_T": {
        "alignment": 4,
        "members": {
          "CLASS_C4_FOR_RADAR": 3,
          "CLASS_DOOR": 10,
          "CLASS_FOOT_CONTACT_SHADOW": 4,
          "CLASS_HUDMODEL_ARMS": 8,
          "CLASS_HUDMODEL_WEAPON": 7,
          "CLASS_NONE": 0,
          "CLASS_PLAYER": 1,
          "CLASS_PLAYER_ALLY": 2,
          "CLASS_WATER_SPLASHER": 6,
          "CLASS_WEAPON": 5,
          "CLASS_WORLDMODEL_GLOVES": 9,
          "NUM_CLASSIFY_CLASSES": 11
        },
        "type": "uint32"
      },
      "DamageTypes_t": {
        "alignment": 4,
        "members": {
          "DMG_ACID": 262144,
          "DMG_BLAST": 64,
          "DMG_BLAST_SURFACE": 4194304,
          "DMG_BUCKSHOT": 2048,
          "DMG_BULLET": 2,
          "DMG_BURN": 8,
          "DMG_CLUB": 128,
          "DMG_CRUSH": 1,
          "DMG_DANGERZONE": 16777216,
          "DMG_DISSOLVE": 2097152,
          "DMG_DROWN": 16384,
          "DMG_DROWNRECOVER": 131072,
          "DMG_ENERGYBEAM": 1024,
          "DMG_FALL": 32,
          "DMG_GENERIC": 0,
          "DMG_HEADSHOT": 8388608,
          "DMG_LASTGENERICFLAG": 4194304,
          "DMG_PHYSGUN": 1048576,
          "DMG_POISON": 32768,
          "DMG_RADIATION": 65536,
          "DMG_SHOCK": 256,
          "DMG_SLASH": 4,
          "DMG_SONIC": 512,
          "DMG_VEHICLE": 16
        },
        "type": "uint32"
      },
      "DebugOverlayBits_t": {
        "alignment": 8,
        "members": {
          "OVERLAY_ABSBOX_BIT": 32,
          "OVERLAY_ACTORNAME_BIT": 274877906944,
          "OVERLAY_ATTACHMENTS_BIT": 256,
          "OVERLAY_AUTOAIM_BIT": 65536,
          "OVERLAY_BBOX_BIT": 4,
          "OVERLAY_BUDDHA_MODE": 1073741824,
          "OVERLAY_HITBOX_BIT": 16384,
          "OVERLAY_INTERPOLATED_ATTACHMENTS_BIT": 512,
          "OVERLAY_INTERPOLATED_HITBOX_BIT": 32768,
          "OVERLAY_INTERPOLATED_PIVOT_BIT": 1024,
          "OVERLAY_INTERPOLATED_SKELETON_BIT": 4096,
          "OVERLAY_JOINT_INFO_BIT": 262144,
          "OVERLAY_MESSAGE_BIT": 16,
          "OVERLAY_MINIMAL_TEXT": 2199023255552,
          "OVERLAY_NAME_BIT": 2,
          "OVERLAY_NPC_ABILITY_RANGE_DEBUG_BIT": 1099511627776,
          "OVERLAY_NPC_BODYLOCATIONS": 67108864,
          "OVERLAY_NPC_COMBAT_BIT": 16777216,
          "OVERLAY_NPC_CONDITIONS_BIT": 8388608,
          "OVERLAY_NPC_CONDITIONS_TEXT_BIT": 549755813888,
          "OVERLAY_NPC_ENEMIES_BIT": 4194304,
          "OVERLAY_NPC_KILL_BIT": 268435456,
          "OVERLAY_NPC_RELATION_BIT": 17179869184,
          "OVERLAY_NPC_ROUTE_BIT": 524288,
          "OVERLAY_NPC_SCRIPTED_COMMANDS_BIT": 137438953472,
          "OVERLAY_NPC_SELECTED_BIT": 131072,
          "OVERLAY_NPC_STEERING_REGULATIONS": 2147483648,
          "OVERLAY_NPC_TASK_BIT": 33554432,
          "OVERLAY_NPC_TASK_TEXT_BIT": 4294967296,
          "OVERLAY_NPC_VIEWCONE_BIT": 134217728,
          "OVERLAY_PIVOT_BIT": 8,
          "OVERLAY_PROP_DEBUG": 8589934592,
          "OVERLAY_RBOX_BIT": 64,
          "OVERLAY_SHOW_BLOCKSLOS": 128,
          "OVERLAY_SKELETON_BIT": 2048,
          "OVERLAY_TEXT_BIT": 1,
          "OVERLAY_TRIGGER_BOUNDS_BIT": 8192,
          "OVERLAY_VCOLLIDE_WIREFRAME_BIT": 68719476736,
          "OVERLAY_VIEWOFFSET": 34359738368,
          "OVERLAY_VISIBILITY_TRACES_BIT": 1048576,
          "OVERLAY_WC_CHANGE_ENTITY": 536870912
        },
        "type": "uint64"
      },
      "DestructiblePartDestructionDeathBehavior_t": {
        "alignment": 4,
        "members": {
          "eDoNotKill": 0,
          "eGib": 2,
          "eKill": 1,
          "eRemove": 3
        },
        "type": "uint32"
      },
      "Disposition_t": {
        "alignment": 4,
        "members": {
          "D_ER": 0,
          "D_ERROR": 0,
          "D_FEAR": 2,
          "D_FR": 2,
          "D_HATE": 1,
          "D_HT": 1,
          "D_LI": 3,
          "D_LIKE": 3,
          "D_NEUTRAL": 4,
          "D_NU": 4
        },
        "type": "uint32"
      },
      "DoorState_t": {
        "alignment": 4,
        "members": {
          "DOOR_STATE_AJAR": 4,
          "DOOR_STATE_CLOSED": 0,
          "DOOR_STATE_CLOSING": 3,
          "DOOR_STATE_OPEN": 2,
          "DOOR_STATE_OPENING": 1
        },
        "type": "uint32"
      },
      "EContributionScoreFlag_t": {
        "alignment": 1,
        "members": {
          "k_EContributionScoreFlag_Bullets": 2,
          "k_EContributionScoreFlag_Default": 0,
          "k_EContributionScoreFlag_Objective": 1
        },
        "type": "uint8"
      },
      "EDestructiblePartDamagePassThroughType": {
        "alignment": 4,
        "members": {
          "Absorb": 1,
          "InvinciblePassthrough": 2,
          "Normal": 0
        },
        "type": "uint32"
      },
      "EDestructiblePartRadiusDamageApplyType": {
        "alignment": 4,
        "members": {
          "PrioritizeClosestPart": 1,
          "ScaleByExplosionRadius": 0
        },
        "type": "uint32"
      },
      "EDestructibleParts_DestroyParameterFlags": {
        "alignment": 4,
        "members": {
          "Default": 3,
          "EnableFlinches": 2,
          "ForceDamageApply": 4,
          "GenerateBreakpieces": 1,
          "IgnoreHealthCheck": 16,
          "IgnoreKillEntityFlag": 8
        },
        "type": "uint32"
      },
      "EInButtonState": {
        "alignment": 4,
        "members": {
          "IN_BUTTON_DOWN": 1,
          "IN_BUTTON_DOWN_UP": 2,
          "IN_BUTTON_DOWN_UP_DOWN": 5,
          "IN_BUTTON_DOWN_UP_DOWN_UP": 6,
          "IN_BUTTON_STATE_COUNT": 8,
          "IN_BUTTON_UP": 0,
          "IN_BUTTON_UP_DOWN": 3,
          "IN_BUTTON_UP_DOWN_UP": 4,
          "IN_BUTTON_UP_DOWN_UP_DOWN": 7
        },
        "type": "uint32"
      },
      "EKillTypes_t": {
        "alignment": 1,
        "members": {
          "KILLTYPE_COUNT": 7,
          "KILL_BLAST": 3,
          "KILL_BURN": 4,
          "KILL_DEFAULT": 1,
          "KILL_HEADSHOT": 2,
          "KILL_NONE": 0,
          "KILL_SHOCK": 6,
          "KILL_SLASH": 5
        },
        "type": "uint8"
      },
      "EOverrideBlockLOS_t": {
        "alignment": 4,
        "members": {
          "BLOCK_LOS_DEFAULT": 0,
          "BLOCK_LOS_FORCE_FALSE": 1,
          "BLOCK_LOS_FORCE_TRUE": 2
        },
        "type": "uint32"
      },
      "EProceduralRagdollWeightIndexPropagationMethod": {
        "alignment": 4,
        "members": {
          "Bone": 0,
          "BoneAndChildren": 1
        },
        "type": "uint32"
      },
      "EntFinderMethod_t": {
        "alignment": 4,
        "members": {
          "ENT_FIND_METHOD_FARTHEST": 1,
          "ENT_FIND_METHOD_NEAREST": 0,
          "ENT_FIND_METHOD_RANDOM": 2
        },
        "type": "uint32"
      },
      "EntityAttachmentType_t": {
        "alignment": 4,
        "members": {
          "eAbsOrigin": 0,
          "eAttachment": 3,
          "eCenter": 1,
          "eEyes": 2
        },
        "type": "uint32"
      },
      "EntityDisolveType_t": {
        "alignment": 4,
        "members": {
          "ENTITY_DISSOLVE_CORE": 3,
          "ENTITY_DISSOLVE_ELECTRICAL": 1,
          "ENTITY_DISSOLVE_ELECTRICAL_LIGHT": 2,
          "ENTITY_DISSOLVE_INVALID": -1,
          "ENTITY_DISSOLVE_NORMAL": 0
        },
        "type": "uint32"
      },
      "EntityDistanceMode_t": {
        "alignment": 4,
        "members": {
          "eAxisToAxis": 2,
          "eCenterToCenter": 1,
          "eOriginToOrigin": 0
        },
        "type": "uint32"
      },
      "EntityEffects_t": {
        "alignment": 2,
        "members": {
          "DEPRICATED_EF_NOINTERP": 8,
          "EF_MAX_BITS": 10,
          "EF_NODRAW": 32,
          "EF_NODRAW_BUT_TRANSMIT": 1024,
          "EF_NORECEIVESHADOW": 64,
          "EF_NOSHADOW": 16,
          "EF_PARENT_ANIMATES": 512
        },
        "type": "uint16"
      },
      "EntityPlatformTypes_t": {
        "alignment": 1,
        "members": {
          "ENTITY_NOT_PLATFORM": 0,
          "ENTITY_PLATFORM_PLAYER_FOLLOWS_YAW": 1,
          "ENTITY_PLATFORM_PLAYER_IGNORES_YAW": 2
        },
        "type": "uint8"
      },
      "EntitySubclassScope_t": {
        "alignment": 4,
        "members": {
          "SUBCLASS_SCOPE_COUNT": 2,
          "SUBCLASS_SCOPE_NONE": -1,
          "SUBCLASS_SCOPE_PLAYER_WEAPONS": 1,
          "SUBCLASS_SCOPE_PRECIPITATION": 0
        },
        "type": "uint32"
      },
      "Explosions": {
        "alignment": 4,
        "members": {
          "expDirected": 1,
          "expRandom": 0,
          "expUsePrecise": 2
        },
        "type": "uint32"
      },
      "FixAngleSet_t": {
        "alignment": 1,
        "members": {
          "Absolute": 1,
          "None": 0,
          "Relative": 2
        },
        "type": "uint8"
      },
      "Flags_t": {
        "alignment": 4,
        "members": {
          "FL_AIMTARGET": 65536,
          "FL_ATCONTROLS": 64,
          "FL_BASEVELOCITY": 8388608,
          "FL_BOT": 16,
          "FL_CLIENT": 128,
          "FL_CONVEYOR": 16777216,
          "FL_DISSOLVING": 268435456,
          "FL_DONTTOUCH": 4194304,
          "FL_DUCKING": 2,
          "FL_FAKECLIENT": 256,
          "FL_FLY": 1024,
          "FL_FROZEN": 32,
          "FL_GODMODE": 16384,
          "FL_GRENADE": 1048576,
          "FL_IN_VEHICLE": 4096,
          "FL_IN_VEHICLE_TRANSPORT": 8192,
          "FL_NOTARGET": 32768,
          "FL_OBJECT": 33554432,
          "FL_ONFIRE": 134217728,
          "FL_ONGROUND": 1,
          "FL_STATICPROP": 262144,
          "FL_SUPPRESS_SAVE": 2048,
          "FL_TRANSRAGDOLL": 536870912,
          "FL_UNBLOCKABLE_BY_PLAYER": 1073741824,
          "FL_WATERJUMP": 4
        },
        "type": "uint32"
      },
      "ForcedCrouchState_t": {
        "alignment": 4,
        "members": {
          "FORCEDCROUCH_CROUCHED": 1,
          "FORCEDCROUCH_NONE": 0,
          "FORCEDCROUCH_UNCROUCHED": 2
        },
        "type": "uint32"
      },
      "FuncDoorSpawnPos_t": {
        "alignment": 4,
        "members": {
          "FUNC_DOOR_SPAWN_CLOSED": 0,
          "FUNC_DOOR_SPAWN_OPEN": 1
        },
        "type": "uint32"
      },
      "GameAnimEventIndex_t": {
        "alignment": 4,
        "members": {
          "AE_BODYGROUP_SET_VALUE": 16,
          "AE_CL_CLOTH_ATTR": 19,
          "AE_CL_CLOTH_EFFECT": 22,
          "AE_CL_CLOTH_GROUND_OFFSET": 20,
          "AE_CL_CLOTH_STIFFEN": 21,
          "AE_CL_CREATE_ANIM_SCOPE_PROP": 23,
          "AE_CL_CREATE_PARTICLE_EFFECT": 7,
          "AE_CL_CREATE_PARTICLE_EFFECT_CFG": 9,
          "AE_CL_DISABLE_BODYGROUP": 15,
          "AE_CL_EJECT_MAG": 37,
          "AE_CL_ENABLE_BODYGROUP": 14,
          "AE_CL_PLAYSOUND": 1,
          "AE_CL_PLAYSOUND_ATTACHMENT": 2,
          "AE_CL_PLAYSOUND_LOOPING": 6,
          "AE_CL_PLAYSOUND_POSITION": 3,
          "AE_CL_STOPSOUND": 5,
          "AE_CL_STOP_PARTICLE_EFFECT": 8,
          "AE_CL_STOP_RAGDOLL_CONTROL": 13,
          "AE_CL_WEAPON_TRANSITION_INTO_HAND": 34,
          "AE_DESTRUCTIBLE_PART_DESTROY": 33,
          "AE_DISABLE_PLATFORM": 30,
          "AE_EMPTY": 0,
          "AE_ENABLE_PLATFORM_PLAYER_FOLLOWS_YAW": 31,
          "AE_ENABLE_PLATFORM_PLAYER_IGNORES_YAW": 32,
          "AE_FIRE_INPUT": 18,
          "AE_FOOTSTEP": 12,
          "AE_GRENADE_THROW_COMPLETE": 40,
          "AE_PULSE_GRAPH": 25,
          "AE_PULSE_GRAPH_AIMAT": 27,
          "AE_PULSE_GRAPH_IKLOCKLEFTARM": 28,
          "AE_PULSE_GRAPH_IKLOCKRIGHTARM": 29,
          "AE_PULSE_GRAPH_LOOKAT": 26,
          "AE_SV_ATTACH_SILENCER_COMPLETE": 35,
          "AE_SV_CREATE_PARTICLE_EFFECT_CFG": 10,
          "AE_SV_DETACH_SILENCER_COMPLETE": 36,
          "AE_SV_IKLOCK": 24,
          "AE_SV_PLAYSOUND": 4,
          "AE_SV_STOP_PARTICLE_EFFECT": 11,
          "AE_WEAPON_PERFORM_ATTACK": 17,
          "AE_WPN_COMPLETE_RELOAD": 38,
          "AE_WPN_HEALTHSHOT_INJECT": 39
        },
        "type": "uint32"
      },
      "GrenadeType_t": {
        "alignment": 4,
        "members": {
          "GRENADE_TYPE_DECOY": 3,
          "GRENADE_TYPE_EXPLOSIVE": 0,
          "GRENADE_TYPE_FIRE": 2,
          "GRENADE_TYPE_FLASH": 1,
          "GRENADE_TYPE_SMOKE": 4,
          "GRENADE_TYPE_TOTAL": 5
        },
        "type": "uint32"
      },
      "HierarchyType_t": {
        "alignment": 4,
        "members": {
          "HIERARCHY_ABSORIGIN": 3,
          "HIERARCHY_ATTACHMENT": 2,
          "HIERARCHY_BONE": 4,
          "HIERARCHY_BONE_MERGE": 1,
          "HIERARCHY_NONE": 0,
          "HIERARCHY_TYPE_COUNT": 5
        },
        "type": "uint32"
      },
      "HitGroup_t": {
        "alignment": 4,
        "members": {
          "HITGROUP_CHEST": 2,
          "HITGROUP_COUNT": 12,
          "HITGROUP_GEAR": 10,
          "HITGROUP_GENERIC": 0,
          "HITGROUP_HEAD": 1,
          "HITGROUP_INVALID": -1,
          "HITGROUP_LEFTARM": 4,
          "HITGROUP_LEFTLEG": 6,
          "HITGROUP_NECK": 8,
          "HITGROUP_RIGHTARM": 5,
          "HITGROUP_RIGHTLEG": 7,
          "HITGROUP_SPECIAL": 11,
          "HITGROUP_STOMACH": 3,
          "HITGROUP_UNUSED": 9
        },
        "type": "uint32"
      },
      "HoverPoseFlags_t": {
        "alignment": 1,
        "members": {
          "eAngles": 2,
          "eNone": 0,
          "ePosition": 1
        },
        "type": "uint8"
      },
      "Hull_t": {
        "alignment": 4,
        "members": {
          "HULL_HUMAN": 0,
          "HULL_LARGE": 6,
          "HULL_LARGE_CENTERED": 7,
          "HULL_MEDIUM": 4,
          "HULL_MEDIUM_TALL": 8,
          "HULL_NONE": 11,
          "HULL_SMALL": 9,
          "HULL_SMALL_CENTERED": 1,
          "HULL_TINY": 3,
          "HULL_TINY_CENTERED": 5,
          "HULL_WIDE_HUMAN": 2,
          "NUM_HULLS": 10
        },
        "type": "uint32"
      },
      "IChoreoServices__ChoreoState_t": {
        "alignment": 4,
        "members": {
          "STATE_PLAY_SCRIPT": 4,
          "STATE_PLAY_SCRIPT_POST_IDLE": 5,
          "STATE_PLAY_SCRIPT_POST_IDLE_DONE": 6,
          "STATE_PRE_SCRIPT": 0,
          "STATE_SYNCHRONIZE_SCRIPT": 3,
          "STATE_WAIT_FOR_SCRIPT": 1,
          "STATE_WALK_TO_MARK": 2
        },
        "type": "uint32"
      },
      "IChoreoServices__ScriptState_t": {
        "alignment": 4,
        "members": {
          "SCRIPT_CLEANUP": 3,
          "SCRIPT_MOVE_TO_MARK": 4,
          "SCRIPT_PLAYING": 0,
          "SCRIPT_POST_IDLE": 2,
          "SCRIPT_WAIT": 1
        },
        "type": "uint32"
      },
      "InputBitMask_t": {
        "alignment": 8,
        "members": {
          "IN_ALL": -1,
          "IN_ATTACK": 1,
          "IN_ATTACK2": 2048,
          "IN_BACK": 16,
          "IN_DUCK": 4,
          "IN_FIRST_MOD_SPECIFIC_BIT": 4294967296,
          "IN_FORWARD": 8,
          "IN_JOYAUTOSPRINT": 131072,
          "IN_JUMP": 2,
          "IN_LOOK_AT_WEAPON": 34359738368,
          "IN_MOVELEFT": 512,
          "IN_MOVERIGHT": 1024,
          "IN_NONE": 0,
          "IN_RELOAD": 8192,
          "IN_SCORE": 8589934592,
          "IN_SPEED": 65536,
          "IN_TURNLEFT": 128,
          "IN_TURNRIGHT": 256,
          "IN_USE": 32,
          "IN_USEORRELOAD": 4294967296,
          "IN_ZOOM": 17179869184
        },
        "type": "uint64"
      },
      "ItemFlagTypes_t": {
        "alignment": 1,
        "members": {
          "ITEM_FLAG_CAN_SELECT_WITHOUT_AMMO": 1,
          "ITEM_FLAG_DOHITLOCATIONDMG": 32,
          "ITEM_FLAG_EXHAUSTIBLE": 16,
          "ITEM_FLAG_LIMITINWORLD": 8,
          "ITEM_FLAG_NOAMMOPICKUPS": 64,
          "ITEM_FLAG_NOAUTORELOAD": 2,
          "ITEM_FLAG_NOAUTOSWITCHEMPTY": 4,
          "ITEM_FLAG_NOITEMPICKUP": 128,
          "ITEM_FLAG_NONE": 0
        },
        "type": "uint8"
      },
      "LatchDirtyPermission_t": {
        "alignment": 4,
        "members": {
          "LATCH_DIRTY_CLIENT_SIMULATED": 2,
          "LATCH_DIRTY_DISALLOW": 0,
          "LATCH_DIRTY_FRAMESIMULATE": 4,
          "LATCH_DIRTY_PARTICLE_SIMULATE": 5,
          "LATCH_DIRTY_PREDICTION": 3,
          "LATCH_DIRTY_SERVER_CONTROLLED": 1
        },
        "type": "uint32"
      },
      "LessonPanelLayoutFileTypes_t": {
        "alignment": 4,
        "members": {
          "LAYOUT_CUSTOM": 2,
          "LAYOUT_HAND_DEFAULT": 0,
          "LAYOUT_WORLD_DEFAULT": 1
        },
        "type": "uint32"
      },
      "LifeState_t": {
        "alignment": 4,
        "members": {
          "LIFE_ALIVE": 0,
          "LIFE_DEAD": 2,
          "LIFE_DYING": 1,
          "LIFE_RESPAWNABLE": 3,
          "LIFE_RESPAWNING": 4
        },
        "type": "uint32"
      },
      "Materials": {
        "alignment": 4,
        "members": {
          "matCeilingTile": 5,
          "matCinderBlock": 4,
          "matComputer": 6,
          "matFlesh": 3,
          "matGlass": 0,
          "matLastMaterial": 11,
          "matMetal": 2,
          "matNone": 10,
          "matRocks": 8,
          "matUnbreakableGlass": 7,
          "matWeb": 9,
          "matWood": 1
        },
        "type": "uint32"
      },
      "MedalRank_t": {
        "alignment": 4,
        "members": {
          "MEDAL_RANK_BRONZE": 1,
          "MEDAL_RANK_COUNT": 4,
          "MEDAL_RANK_GOLD": 3,
          "MEDAL_RANK_NONE": 0,
          "MEDAL_RANK_SILVER": 2
        },
        "type": "uint32"
      },
      "ModifyDamageReturn_t": {
        "alignment": 4,
        "members": {
          "ABORT_DO_NOT_APPLY_DAMAGE": 1,
          "CONTINUE_TO_APPLY_DAMAGE": 0
        },
        "type": "uint32"
      },
      "MoveCollide_t": {
        "alignment": 1,
        "members": {
          "MOVECOLLIDE_COUNT": 4,
          "MOVECOLLIDE_DEFAULT": 0,
          "MOVECOLLIDE_FLY_BOUNCE": 1,
          "MOVECOLLIDE_FLY_CUSTOM": 2,
          "MOVECOLLIDE_FLY_SLIDE": 3,
          "MOVECOLLIDE_MAX_BITS": 3
        },
        "type": "uint8"
      },
      "MoveLinearAuthoredPos_t": {
        "alignment": 4,
        "members": {
          "MOVELINEAR_AUTHORED_AT_CLOSED_POSITION": 2,
          "MOVELINEAR_AUTHORED_AT_OPEN_POSITION": 1,
          "MOVELINEAR_AUTHORED_AT_START_POSITION": 0
        },
        "type": "uint32"
      },
      "MoveMountingAmount_t": {
        "alignment": 4,
        "members": {
          "MOVE_MOUNT_HIGH": 2,
          "MOVE_MOUNT_LOW": 1,
          "MOVE_MOUNT_MAXCOUNT": 3,
          "MOVE_MOUNT_NONE": 0
        },
        "type": "uint32"
      },
      "MoveType_t": {
        "alignment": 1,
        "members": {
          "MOVETYPE_CUSTOM": 10,
          "MOVETYPE_FLY": 3,
          "MOVETYPE_FLYGRAVITY": 4,
          "MOVETYPE_INVALID": 11,
          "MOVETYPE_LADDER": 9,
          "MOVETYPE_LAST": 11,
          "MOVETYPE_MAX_BITS": 5,
          "MOVETYPE_NOCLIP": 7,
          "MOVETYPE_NONE": 0,
          "MOVETYPE_OBSERVER": 8,
          "MOVETYPE_OBSOLETE": 1,
          "MOVETYPE_PUSH": 6,
          "MOVETYPE_VPHYSICS": 5,
          "MOVETYPE_WALK": 2
        },
        "type": "uint8"
      },
      "NPCFollowFormation_t": {
        "alignment": 4,
        "members": {
          "CloseCircle": 0,
          "Default": -1,
          "MediumCircle": 5,
          "Sidekick": 6,
          "WideCircle": 1
        },
        "type": "uint32"
      },
      "NavAttributeEnum": {
        "alignment": 4,
        "members": {
          "NAV_ATTR_FIRST_GAME_INDEX": 19,
          "NAV_ATTR_LAST_INDEX": 31,
          "NAV_MESH_AVOID": 128,
          "NAV_MESH_CRAWL_HEIGHT": 262144,
          "NAV_MESH_CROUCH": 65536,
          "NAV_MESH_CROUCH_HEIGHT": 65536,
          "NAV_MESH_DONT_HIDE": 512,
          "NAV_MESH_JUMP": 2,
          "NAV_MESH_NON_ZUP": 32768,
          "NAV_MESH_NON_ZUP_TRANSITION": 131072,
          "NAV_MESH_NO_HOSTAGES": 2048,
          "NAV_MESH_NO_JUMP": 8,
          "NAV_MESH_NO_MERGE": 8192,
          "NAV_MESH_OBSTACLE_TOP": 16384,
          "NAV_MESH_PRECISE": 4,
          "NAV_MESH_RUN": 32,
          "NAV_MESH_STAIRS": 4096,
          "NAV_MESH_STAND": 1024,
          "NAV_MESH_STOP": 16,
          "NAV_MESH_TRANSIENT": 256,
          "NAV_MESH_WALK": 64
        },
        "type": "uint32"
      },
      "NavDirType": {
        "alignment": 4,
        "members": {
          "EAST": 1,
          "NORTH": 0,
          "NUM_NAV_DIR_TYPE_DIRECTIONS": 4,
          "SOUTH": 2,
          "WEST": 3
        },
        "type": "uint32"
      },
      "NavScopeFlags_t": {
        "alignment": 1,
        "members": {
          "eAir": 2,
          "eAll": 3,
          "eGround": 1,
          "eNone": 0
        },
        "type": "uint8"
      },
      "NavScope_t": {
        "alignment": 1,
        "members": {
          "eAir": 1,
          "eCount": 2,
          "eFirst": 0,
          "eGround": 0,
          "eInvalid": 255
        },
        "type": "uint8"
      },
      "ObserverInterpState_t": {
        "alignment": 4,
        "members": {
          "OBSERVER_INTERP_NONE": 0,
          "OBSERVER_INTERP_SETTLING": 2,
          "OBSERVER_INTERP_TRAVELING": 1
        },
        "type": "uint32"
      },
      "ObserverMode_t": {
        "alignment": 4,
        "members": {
          "NUM_OBSERVER_MODES": 6,
          "OBS_MODE_CHASE": 3,
          "OBS_MODE_DIRECTED": 5,
          "OBS_MODE_FIXED": 1,
          "OBS_MODE_IN_EYE": 2,
          "OBS_MODE_NONE": 0,
          "OBS_MODE_ROAMING": 4
        },
        "type": "uint32"
      },
      "OnFrame": {
        "alignment": 1,
        "members": {
          "ONFRAME_FALSE": 2,
          "ONFRAME_TRUE": 1,
          "ONFRAME_UNKNOWN": 0
        },
        "type": "uint8"
      },
      "PerformanceMode_t": {
        "alignment": 4,
        "members": {
          "PM_NORMAL": 0,
          "PM_NO_GIBS": 1
        },
        "type": "uint32"
      },
      "PlayerConnectedState": {
        "alignment": 4,
        "members": {
          "PlayerConnected": 0,
          "PlayerConnecting": 1,
          "PlayerDisconnected": 4,
          "PlayerDisconnecting": 3,
          "PlayerNeverConnected": -1,
          "PlayerReconnecting": 2,
          "PlayerReserved": 5
        },
        "type": "uint32"
      },
      "PointOrientConstraint_t": {
        "alignment": 4,
        "members": {
          "eNone": 0,
          "ePreserveUpAxis": 1
        },
        "type": "uint32"
      },
      "PointOrientGoalDirectionType_t": {
        "alignment": 4,
        "members": {
          "eAbsOrigin": 0,
          "eCenter": 1,
          "eEyesForward": 4,
          "eForward": 3,
          "eHead": 2
        },
        "type": "uint32"
      },
      "PointTemplateClientOnlyEntityBehavior_t": {
        "alignment": 4,
        "members": {
          "CREATE_FOR_CLIENTS_WHO_CONNECT_LATER": 1,
          "CREATE_FOR_CURRENTLY_CONNECTED_CLIENTS_ONLY": 0
        },
        "type": "uint32"
      },
      "PointTemplateOwnerSpawnGroupType_t": {
        "alignment": 4,
        "members": {
          "INSERT_INTO_CURRENTLY_ACTIVE_SPAWN_GROUP": 1,
          "INSERT_INTO_NEWLY_CREATED_SPAWN_GROUP": 2,
          "INSERT_INTO_POINT_TEMPLATE_SPAWN_GROUP": 0
        },
        "type": "uint32"
      },
      "PointWorldTextJustifyHorizontal_t": {
        "alignment": 4,
        "members": {
          "POINT_WORLD_TEXT_JUSTIFY_HORIZONTAL_CENTER": 1,
          "POINT_WORLD_TEXT_JUSTIFY_HORIZONTAL_LEFT": 0,
          "POINT_WORLD_TEXT_JUSTIFY_HORIZONTAL_RIGHT": 2
        },
        "type": "uint32"
      },
      "PointWorldTextJustifyVertical_t": {
        "alignment": 4,
        "members": {
          "POINT_WORLD_TEXT_JUSTIFY_VERTICAL_BOTTOM": 0,
          "POINT_WORLD_TEXT_JUSTIFY_VERTICAL_CENTER": 1,
          "POINT_WORLD_TEXT_JUSTIFY_VERTICAL_TOP": 2
        },
        "type": "uint32"
      },
      "PointWorldTextReorientMode_t": {
        "alignment": 4,
        "members": {
          "POINT_WORLD_TEXT_REORIENT_AROUND_UP": 1,
          "POINT_WORLD_TEXT_REORIENT_NONE": 0
        },
        "type": "uint32"
      },
      "PreviewCharacterMode": {
        "alignment": 4,
        "members": {
          "BANNER": 9,
          "BUY_MENU": 2,
          "DIORAMA": 0,
          "END_OF_MATCH": 4,
          "INVENTORY_INSPECT": 5,
          "MAIN_MENU": 1,
          "TEAM_INTRO": 7,
          "TEAM_SELECT": 3,
          "WALKING": 6,
          "WINGMAN_INTRO": 8
        },
        "type": "uint32"
      },
      "PreviewEOMCelebration": {
        "alignment": 4,
        "members": {
          "AVA_DEFEAT": 12,
          "CRASSWATER_DEFEAT": 18,
          "DARRYL_DEFEAT": 19,
          "DOCTOR_DEFEAT": 20,
          "DROPDOWN": 3,
          "GENDARMERIE": 9,
          "GENDARMERIE_DEFEAT": 13,
          "GUERILLA": 7,
          "GUERILLA02": 8,
          "MAE_DEFEAT": 14,
          "MASK_F": 6,
          "MUHLIK_DEFEAT": 21,
          "PUNCHING": 1,
          "RICKSAW_DEFEAT": 15,
          "SCUBA_FEMALE": 10,
          "SCUBA_FEMALE_DEFEAT": 16,
          "SCUBA_MALE": 11,
          "SCUBA_MALE_DEFEAT": 17,
          "STRETCH": 4,
          "SWAGGER": 2,
          "SWAT_FEMALE": 5,
          "VYPA_DEFEAT": 22,
          "WALKUP": 0
        },
        "type": "uint32"
      },
      "PreviewWeaponState": {
        "alignment": 4,
        "members": {
          "DEPLOYED": 2,
          "DROPPED": 0,
          "HOLSTERED": 1,
          "ICON": 5,
          "INSPECT": 4,
          "PLANTED": 3
        },
        "type": "uint32"
      },
      "PropDoorRotatingOpenDirection_e": {
        "alignment": 4,
        "members": {
          "DOOR_ROTATING_OPEN_BACKWARD": 2,
          "DOOR_ROTATING_OPEN_BOTH_WAYS": 0,
          "DOOR_ROTATING_OPEN_FORWARD": 1
        },
        "type": "uint32"
      },
      "PropDoorRotatingSpawnPos_t": {
        "alignment": 4,
        "members": {
          "DOOR_SPAWN_AJAR": 3,
          "DOOR_SPAWN_CLOSED": 0,
          "DOOR_SPAWN_OPEN_BACK": 2,
          "DOOR_SPAWN_OPEN_FORWARD": 1
        },
        "type": "uint32"
      },
      "PulseCollisionGroup_t": {
        "alignment": 4,
        "members": {
          "DEFAULT": 0
        },
        "type": "uint32"
      },
      "PulseNPCCondition_t": {
        "alignment": 4,
        "members": {
          "COND_HEAR_PLAYER": 3,
          "COND_LOST_PLAYER": 2,
          "COND_NO_PRIMARY_AMMO": 5,
          "COND_PLAYER_PUSHING": 4,
          "COND_SEE_PLAYER": 1
        },
        "type": "uint32"
      },
      "PulseTraceContents_t": {
        "alignment": 4,
        "members": {
          "SOLID": 1,
          "STATIC_LEVEL": 0
        },
        "type": "uint32"
      },
      "QuestProgress__Reason": {
        "alignment": 4,
        "members": {
          "QUEST_NONINITIALIZED": 0,
          "QUEST_NONOFFICIAL_SERVER": 5,
          "QUEST_NOT_CONNECTED_TO_STEAM": 4,
          "QUEST_NOT_ENOUGH_PLAYERS": 2,
          "QUEST_NOT_SYNCED_WITH_SERVER": 11,
          "QUEST_NO_ENTITLEMENT": 6,
          "QUEST_NO_QUEST": 7,
          "QUEST_OK": 1,
          "QUEST_PLAYER_IS_BOT": 8,
          "QUEST_REASON_MAX": 12,
          "QUEST_WARMUP": 3,
          "QUEST_WRONG_MAP": 9,
          "QUEST_WRONG_MODE": 10
        },
        "type": "uint32"
      },
      "RelativeLocationType_t": {
        "alignment": 1,
        "members": {
          "RELATIVE_TO_ENTITY_IN_LOCAL_SPACE": 1,
          "RELATIVE_TO_ENTITY_IN_WORLD_SPACE": 3,
          "RELATIVE_TO_ENTITY_YAW_ONLY": 2,
          "WORLD_SPACE_POSITION": 0
        },
        "type": "uint8"
      },
      "RenderFx_t": {
        "alignment": 1,
        "members": {
          "kRenderFxFadeFast": 6,
          "kRenderFxFadeIn": 16,
          "kRenderFxFadeOut": 15,
          "kRenderFxFadeSlow": 5,
          "kRenderFxFlickerFast": 13,
          "kRenderFxFlickerSlow": 12,
          "kRenderFxGlowShell": 18,
          "kRenderFxMax": 19,
          "kRenderFxNoDissipation": 14,
          "kRenderFxNone": 0,
          "kRenderFxPulseFast": 2,
          "kRenderFxPulseFastWide": 4,
          "kRenderFxPulseFastWider": 17,
          "kRenderFxPulseSlow": 1,
          "kRenderFxPulseSlowWide": 3,
          "kRenderFxSolidFast": 8,
          "kRenderFxSolidSlow": 7,
          "kRenderFxStrobeFast": 10,
          "kRenderFxStrobeFaster": 11,
          "kRenderFxStrobeSlow": 9
        },
        "type": "uint8"
      },
      "RenderMode_t": {
        "alignment": 1,
        "members": {
          "kRenderDevVisualizer": 11,
          "kRenderEnvironmental": 6,
          "kRenderGlow": 3,
          "kRenderModeCount": 12,
          "kRenderNone": 10,
          "kRenderNormal": 0,
          "kRenderTransAdd": 5,
          "kRenderTransAddFrameBlend": 7,
          "kRenderTransAlpha": 4,
          "kRenderTransAlphaAdd": 8,
          "kRenderTransColor": 1,
          "kRenderTransTexture": 2,
          "kRenderWorldGlow": 9
        },
        "type": "uint8"
      },
      "RumbleEffect_t": {
        "alignment": 4,
        "members": {
          "NUM_RUMBLE_EFFECTS": 25,
          "RUMBLE_357": 2,
          "RUMBLE_AIRBOAT_GUN": 10,
          "RUMBLE_AR2": 4,
          "RUMBLE_AR2_ALT_FIRE": 7,
          "RUMBLE_CROWBAR_SWING": 9,
          "RUMBLE_DMG_HIGH": 17,
          "RUMBLE_DMG_LOW": 15,
          "RUMBLE_DMG_MED": 16,
          "RUMBLE_FALL_LONG": 18,
          "RUMBLE_FALL_SHORT": 19,
          "RUMBLE_FLAT_BOTH": 14,
          "RUMBLE_FLAT_LEFT": 12,
          "RUMBLE_FLAT_RIGHT": 13,
          "RUMBLE_INVALID": -1,
          "RUMBLE_JEEP_ENGINE_LOOP": 11,
          "RUMBLE_PHYSCANNON_HIGH": 24,
          "RUMBLE_PHYSCANNON_LOW": 22,
          "RUMBLE_PHYSCANNON_MEDIUM": 23,
          "RUMBLE_PHYSCANNON_OPEN": 20,
          "RUMBLE_PHYSCANNON_PUNT": 21,
          "RUMBLE_PISTOL": 1,
          "RUMBLE_RPG_MISSILE": 8,
          "RUMBLE_SHOTGUN_DOUBLE": 6,
          "RUMBLE_SHOTGUN_SINGLE": 5,
          "RUMBLE_SMG1": 3,
          "RUMBLE_STOP_ALL": 0
        },
        "type": "uint32"
      },
      "SceneOnPlayerDeath_t": {
        "alignment": 4,
        "members": {
          "SCENE_ONPLAYERDEATH_CANCEL": 1,
          "SCENE_ONPLAYERDEATH_DO_NOTHING": 0
        },
        "type": "uint32"
      },
      "ScriptedConflictResponse_t": {
        "alignment": 4,
        "members": {
          "SS_CONFLICT_ENQUEUE": 0,
          "SS_CONFLICT_INTERRUPT": 1
        },
        "type": "uint32"
      },
      "ScriptedOnDeath_t": {
        "alignment": 4,
        "members": {
          "SS_ONDEATH_ANIMATED_DEATH": 2,
          "SS_ONDEATH_NOT_APPLICABLE": -1,
          "SS_ONDEATH_RAGDOLL": 1,
          "SS_ONDEATH_UNDEFINED": 0
        },
        "type": "uint32"
      },
      "SequenceFinishNotifyState_t": {
        "alignment": 1,
        "members": {
          "eDoNotNotify": 0,
          "eNotifyTriggered": 2,
          "eNotifyWhenFinished": 1
        },
        "type": "uint8"
      },
      "ShadowType_t": {
        "alignment": 4,
        "members": {
          "SHADOWS_NONE": 0,
          "SHADOWS_SIMPLE": 1
        },
        "type": "uint32"
      },
      "ShakeCommand_t": {
        "alignment": 4,
        "members": {
          "SHAKE_AMPLITUDE": 2,
          "SHAKE_FREQUENCY": 3,
          "SHAKE_START": 0,
          "SHAKE_START_NORUMBLE": 5,
          "SHAKE_START_RUMBLEONLY": 4,
          "SHAKE_STOP": 1
        },
        "type": "uint32"
      },
      "ShardSolid_t": {
        "alignment": 1,
        "members": {
          "SHARD_DEBRIS": 1,
          "SHARD_SOLID": 0
        },
        "type": "uint8"
      },
      "ShatterDamageCause": {
        "alignment": 1,
        "members": {
          "SHATTERDAMAGE_BULLET": 0,
          "SHATTERDAMAGE_EXPLOSIVE": 4,
          "SHATTERDAMAGE_MELEE": 1,
          "SHATTERDAMAGE_SCRIPT": 3,
          "SHATTERDAMAGE_THROWN": 2
        },
        "type": "uint8"
      },
      "ShatterGlassStressType": {
        "alignment": 1,
        "members": {
          "SHATTERGLASS_BALLISTIC": 1,
          "SHATTERGLASS_BLUNT": 0,
          "SHATTERGLASS_EXPLOSIVE": 3,
          "SHATTERGLASS_PULSE": 2
        },
        "type": "uint8"
      },
      "SimpleConstraintSoundProfile__SimpleConstraintsSoundProfileKeypoints_t": {
        "alignment": 4,
        "members": {
          "kHIGHWATER": 2,
          "kMIN_FULL": 1,
          "kMIN_THRESHOLD": 0
        },
        "type": "uint32"
      },
      "SolidType_t": {
        "alignment": 1,
        "members": {
          "SOLID_BBOX": 2,
          "SOLID_BSP": 1,
          "SOLID_CAPSULE": 7,
          "SOLID_LAST": 8,
          "SOLID_NONE": 0,
          "SOLID_OBB": 3,
          "SOLID_POINT": 5,
          "SOLID_SPHERE": 4,
          "SOLID_VPHYSICS": 6
        },
        "type": "uint8"
      },
      "SoundEventStartType_t": {
        "alignment": 4,
        "members": {
          "SOUNDEVENT_START_ENTITY": 2,
          "SOUNDEVENT_START_PLAYER": 0,
          "SOUNDEVENT_START_WORLD": 1
        },
        "type": "uint32"
      },
      "StanceType_t": {
        "alignment": 4,
        "members": {
          "NUM_STANCES": 3,
          "STANCE_CROUCHING": 1,
          "STANCE_CURRENT": -1,
          "STANCE_DEFAULT": 0,
          "STANCE_PRONE": 2
        },
        "type": "uint32"
      },
      "SubclassVDataChangeType_t": {
        "alignment": 4,
        "members": {
          "SUBCLASS_VDATA_CREATED": 0,
          "SUBCLASS_VDATA_RELOADED": 2,
          "SUBCLASS_VDATA_SUBCLASS_CHANGED": 1
        },
        "type": "uint32"
      },
      "SurroundingBoundsType_t": {
        "alignment": 1,
        "members": {
          "SURROUNDING_TYPE_BIT_COUNT": 3,
          "USE_BEST_COLLISION_BOUNDS": 1,
          "USE_COLLISION_BOUNDS_NEVER_VPHYSICS": 7,
          "USE_GAME_CODE": 4,
          "USE_HITBOXES": 2,
          "USE_OBB_COLLISION_BOUNDS": 0,
          "USE_ROTATION_EXPANDED_BOUNDS": 5,
          "USE_ROTATION_EXPANDED_ORIENTED_BOUNDS": 6,
          "USE_ROTATION_EXPANDED_SEQUENCE_BOUNDS": 8,
          "USE_SPECIFIED_BOUNDS": 3
        },
        "type": "uint8"
      },
      "TOGGLE_STATE": {
        "alignment": 4,
        "members": {
          "DOOR_CLOSED": 1,
          "DOOR_CLOSING": 3,
          "DOOR_OPEN": 0,
          "DOOR_OPENING": 2,
          "TS_AT_BOTTOM": 1,
          "TS_AT_TOP": 0,
          "TS_GOING_DOWN": 3,
          "TS_GOING_UP": 2
        },
        "type": "uint32"
      },
      "TRAIN_CODE": {
        "alignment": 4,
        "members": {
          "TRAIN_BLOCKING": 1,
          "TRAIN_FOLLOWING": 2,
          "TRAIN_SAFE": 0
        },
        "type": "uint32"
      },
      "TakeDamageFlags_t": {
        "alignment": 8,
        "members": {
          "DFLAGS_ONLY_DAMAGE_DESTRUCTIBLE_PARTS": 16384,
          "DFLAG_ALWAYS_FIRE_DAMAGE_EVENTS": 512,
          "DFLAG_ALWAYS_GIB": 32,
          "DFLAG_FORCEREDUCEARMOR_DMG": 2048,
          "DFLAG_FORCE_DEATH": 16,
          "DFLAG_IGNORE_ARMOR": 32768,
          "DFLAG_IGNORE_DESTRUCTIBLE_PARTS": 8192,
          "DFLAG_NEVER_GIB": 64,
          "DFLAG_NONE": 0,
          "DFLAG_PREVENT_DEATH": 8,
          "DFLAG_RADIUS_DMG": 1024,
          "DFLAG_REMOVE_NO_RAGDOLL": 128,
          "DFLAG_SUPPRESS_DAMAGE_MODIFICATION": 256,
          "DFLAG_SUPPRESS_EFFECTS": 4,
          "DFLAG_SUPPRESS_HEALTH_CHANGES": 1,
          "DFLAG_SUPPRESS_INTERRUPT_FLINCH": 4096,
          "DFLAG_SUPPRESS_PHYSICS_FORCE": 2,
          "DFLAG_SUPPRESS_UTILREMOVE": 65536,
          "DMG_LASTDFLAG": 16384
        },
        "type": "uint64"
      },
      "TestInputOutputCombinationsEnum_t": {
        "alignment": 4,
        "members": {
          "ONE": 1,
          "TWO": 2,
          "ZERO": 0
        },
        "type": "uint32"
      },
      "TimelineCompression_t": {
        "alignment": 4,
        "members": {
          "TIMELINE_COMPRESSION_AVERAGE": 2,
          "TIMELINE_COMPRESSION_AVERAGE_BLEND": 3,
          "TIMELINE_COMPRESSION_COUNT_PER_INTERVAL": 1,
          "TIMELINE_COMPRESSION_SUM": 0,
          "TIMELINE_COMPRESSION_TOTAL": 4
        },
        "type": "uint32"
      },
      "Touch_t": {
        "alignment": 4,
        "members": {
          "touch_none": 0,
          "touch_npc_only": 2,
          "touch_player_only": 1,
          "touch_player_or_npc": 3,
          "touch_player_or_npc_or_physicsprop": 4
        },
        "type": "uint32"
      },
      "TrackOrientationType_t": {
        "alignment": 4,
        "members": {
          "TrackOrientation_FacePath": 1,
          "TrackOrientation_FacePathAngles": 2,
          "TrackOrientation_Fixed": 0
        },
        "type": "uint32"
      },
      "TrainOrientationType_t": {
        "alignment": 4,
        "members": {
          "TrainOrientation_AtPathTracks": 1,
          "TrainOrientation_EaseInEaseOut": 3,
          "TrainOrientation_Fixed": 0,
          "TrainOrientation_LinearBlend": 2
        },
        "type": "uint32"
      },
      "TrainVelocityType_t": {
        "alignment": 4,
        "members": {
          "TrainVelocity_EaseInEaseOut": 2,
          "TrainVelocity_Instantaneous": 0,
          "TrainVelocity_LinearBlend": 1
        },
        "type": "uint32"
      },
      "ValueRemapperHapticsType_t": {
        "alignment": 4,
        "members": {
          "HaticsType_Default": 0,
          "HaticsType_None": 1
        },
        "type": "uint32"
      },
      "ValueRemapperInputType_t": {
        "alignment": 4,
        "members": {
          "InputType_PlayerShootPosition": 0,
          "InputType_PlayerShootPositionAroundAxis": 1
        },
        "type": "uint32"
      },
      "ValueRemapperMomentumType_t": {
        "alignment": 4,
        "members": {
          "MomentumType_Friction": 1,
          "MomentumType_None": 0,
          "MomentumType_SpringAwayFromSnapValue": 3,
          "MomentumType_SpringTowardSnapValue": 2
        },
        "type": "uint32"
      },
      "ValueRemapperOutputType_t": {
        "alignment": 4,
        "members": {
          "OutputType_AnimationCycle": 0,
          "OutputType_RotationX": 1,
          "OutputType_RotationY": 2,
          "OutputType_RotationZ": 3
        },
        "type": "uint32"
      },
      "ValueRemapperRatchetType_t": {
        "alignment": 4,
        "members": {
          "RatchetType_Absolute": 0,
          "RatchetType_EachEngage": 1
        },
        "type": "uint32"
      },
      "WaterLevel_t": {
        "alignment": 1,
        "members": {
          "WL_Chest": 4,
          "WL_Count": 6,
          "WL_Feet": 1,
          "WL_FullyUnderwater": 5,
          "WL_Knees": 2,
          "WL_NotInWater": 0,
          "WL_Waist": 3
        },
        "type": "uint8"
      },
      "WeaponAttackType_t": {
        "alignment": 4,
        "members": {
          "eCount": 2,
          "eInvalid": -1,
          "ePrimary": 0,
          "eSecondary": 1
        },
        "type": "uint32"
      },
      "WeaponGameplayAnimState": {
        "alignment": 2,
        "members": {
          "WEAPON_LEGACY_STATE_CLEAR_FIRING": 1101,
          "WPN_ANIMSTATE_C4_PLANT": 300,
          "WPN_ANIMSTATE_CHARGE": 103,
          "WPN_ANIMSTATE_DEPLOY": 11,
          "WPN_ANIMSTATE_DROPPED": 1,
          "WPN_ANIMSTATE_END_VALID": 1100,
          "WPN_ANIMSTATE_GRENADE_PULL_PIN": 200,
          "WPN_ANIMSTATE_GRENADE_READY": 201,
          "WPN_ANIMSTATE_GRENADE_THROW": 202,
          "WPN_ANIMSTATE_HEALTHSHOT_INJECT": 400,
          "WPN_ANIMSTATE_HOLSTERED": 10,
          "WPN_ANIMSTATE_IDLE": 50,
          "WPN_ANIMSTATE_INSPECT": 1000,
          "WPN_ANIMSTATE_INSPECT_OUTRO": 1001,
          "WPN_ANIMSTATE_KNIFE_PRIMARY_HIT": 500,
          "WPN_ANIMSTATE_KNIFE_PRIMARY_MISS": 501,
          "WPN_ANIMSTATE_KNIFE_PRIMARY_STAB": 504,
          "WPN_ANIMSTATE_KNIFE_SECONDARY_HIT": 502,
          "WPN_ANIMSTATE_KNIFE_SECONDARY_MISS": 503,
          "WPN_ANIMSTATE_KNIFE_SECONDARY_STAB": 505,
          "WPN_ANIMSTATE_RELOAD": 800,
          "WPN_ANIMSTATE_RELOAD_OUTRO": 801,
          "WPN_ANIMSTATE_SHOOT_DRYFIRE": 102,
          "WPN_ANIMSTATE_SHOOT_PRIMARY": 100,
          "WPN_ANIMSTATE_SHOOT_SECONDARY": 101,
          "WPN_ANIMSTATE_SILENCER_APPLY": 600,
          "WPN_ANIMSTATE_SILENCER_REMOVE": 601,
          "WPN_ANIMSTATE_UNINITIALIZED": 0
        },
        "type": "uint16"
      },
      "WeaponSound_t": {
        "alignment": 4,
        "members": {
          "WEAPON_SOUND_DROP": 22,
          "WEAPON_SOUND_EMPTY": 0,
          "WEAPON_SOUND_IMPACT": 13,
          "WEAPON_SOUND_MELEE_HIT": 5,
          "WEAPON_SOUND_MELEE_HIT_NPC": 8,
          "WEAPON_SOUND_MELEE_HIT_PLAYER": 7,
          "WEAPON_SOUND_MELEE_HIT_WORLD": 6,
          "WEAPON_SOUND_MELEE_MISS": 4,
          "WEAPON_SOUND_MOUSE_PRESSED": 21,
          "WEAPON_SOUND_NEARLYEMPTY": 12,
          "WEAPON_SOUND_NUM_TYPES": 24,
          "WEAPON_SOUND_RADIO_USE": 23,
          "WEAPON_SOUND_REFLECT": 14,
          "WEAPON_SOUND_RELOAD": 17,
          "WEAPON_SOUND_SECONDARY_ATTACK": 3,
          "WEAPON_SOUND_SECONDARY_EMPTY": 1,
          "WEAPON_SOUND_SECONDARY_IMPACT": 15,
          "WEAPON_SOUND_SECONDARY_REFLECT": 16,
          "WEAPON_SOUND_SINGLE": 2,
          "WEAPON_SOUND_SINGLE_ACCURATE": 18,
          "WEAPON_SOUND_SPECIAL1": 9,
          "WEAPON_SOUND_SPECIAL2": 10,
          "WEAPON_SOUND_SPECIAL3": 11,
          "WEAPON_SOUND_ZOOM_IN": 19,
          "WEAPON_SOUND_ZOOM_OUT": 20
        },
        "type": "uint32"
      },
      "WeaponSwitchReason_t": {
        "alignment": 4,
        "members": {
          "eDrawn": 0,
          "eEquipped": 1,
          "eUserInitiatedSwitchHands": 4,
          "eUserInitiatedSwitchToLast": 2,
          "eUserInitiatedUIKeyPress": 3
        },
        "type": "uint32"
      },
      "WorldTextPanelHorizontalAlign_t": {
        "alignment": 4,
        "members": {
          "WORLDTEXT_HORIZONTAL_ALIGN_CENTER": 1,
          "WORLDTEXT_HORIZONTAL_ALIGN_LEFT": 0,
          "WORLDTEXT_HORIZONTAL_ALIGN_RIGHT": 2
        },
        "type": "uint32"
      },
      "WorldTextPanelOrientation_t": {
        "alignment": 4,
        "members": {
          "WORLDTEXT_ORIENTATION_DEFAULT": 0,
          "WORLDTEXT_ORIENTATION_FACEUSER": 1,
          "WORLDTEXT_ORIENTATION_FACEUSER_UPRIGHT": 2
        },
        "type": "uint32"
      },
      "WorldTextPanelVerticalAlign_t": {
        "alignment": 4,
        "members": {
          "WORLDTEXT_VERTICAL_ALIGN_BOTTOM": 2,
          "WORLDTEXT_VERTICAL_ALIGN_CENTER": 1,
          "WORLDTEXT_VERTICAL_ALIGN_TOP": 0
        },
        "type": "uint32"
      },
      "attributeprovidertypes_t": {
        "alignment": 4,
        "members": {
          "PROVIDER_GENERIC": 0,
          "PROVIDER_WEAPON": 1
        },
        "type": "uint32"
      },
      "doorCheck_e": {
        "alignment": 4,
        "members": {
          "DOOR_CHECK_BACKWARD": 1,
          "DOOR_CHECK_FORWARD": 0,
          "DOOR_CHECK_FULL": 2
        },
        "type": "uint32"
      },
      "eSplinePushType": {
        "alignment": 4,
        "members": {
          "k_eSplinePushAlong": 0,
          "k_eSplinePushAway": 1,
          "k_eSplinePushTowards": 2
        },
        "type": "uint32"
      },
      "filter_t": {
        "alignment": 4,
        "members": {
          "FILTER_AND": 0,
          "FILTER_OR": 1
        },
        "type": "uint32"
      },
      "gear_slot_t": {
        "alignment": 4,
        "members": {
          "GEAR_SLOT_BOOSTS": 11,
          "GEAR_SLOT_C4": 4,
          "GEAR_SLOT_COUNT": 13,
          "GEAR_SLOT_FIRST": 0,
          "GEAR_SLOT_GRENADES": 3,
          "GEAR_SLOT_INVALID": -1,
          "GEAR_SLOT_KNIFE": 2,
          "GEAR_SLOT_LAST": 12,
          "GEAR_SLOT_PISTOL": 1,
          "GEAR_SLOT_RESERVED_SLOT10": 9,
          "GEAR_SLOT_RESERVED_SLOT11": 10,
          "GEAR_SLOT_RESERVED_SLOT6": 5,
          "GEAR_SLOT_RESERVED_SLOT7": 6,
          "GEAR_SLOT_RESERVED_SLOT8": 7,
          "GEAR_SLOT_RESERVED_SLOT9": 8,
          "GEAR_SLOT_RIFLE": 0,
          "GEAR_SLOT_UTILITY": 12
        },
        "type": "uint32"
      },
      "loadout_slot_t": {
        "alignment": 4,
        "members": {
          "LOADOUT_SLOT_C4": 1,
          "LOADOUT_SLOT_CLOTHING_APPEARANCE": 46,
          "LOADOUT_SLOT_CLOTHING_CUSTOMHEAD": 39,
          "LOADOUT_SLOT_CLOTHING_CUSTOMPLAYER": 38,
          "LOADOUT_SLOT_CLOTHING_EYEWEAR": 42,
          "LOADOUT_SLOT_CLOTHING_FACEMASK": 40,
          "LOADOUT_SLOT_CLOTHING_HANDS": 41,
          "LOADOUT_SLOT_CLOTHING_HAT": 43,
          "LOADOUT_SLOT_CLOTHING_LOWERBODY": 44,
          "LOADOUT_SLOT_CLOTHING_TORSO": 45,
          "LOADOUT_SLOT_COUNT": 57,
          "LOADOUT_SLOT_EQUIPMENT0": 32,
          "LOADOUT_SLOT_EQUIPMENT1": 33,
          "LOADOUT_SLOT_EQUIPMENT2": 34,
          "LOADOUT_SLOT_EQUIPMENT3": 35,
          "LOADOUT_SLOT_EQUIPMENT4": 36,
          "LOADOUT_SLOT_EQUIPMENT5": 37,
          "LOADOUT_SLOT_FIRST_ALL_CHARACTER": 54,
          "LOADOUT_SLOT_FIRST_AUTO_BUY_WEAPON": 0,
          "LOADOUT_SLOT_FIRST_COSMETIC": 41,
          "LOADOUT_SLOT_FIRST_PRIMARY_WEAPON": 8,
          "LOADOUT_SLOT_FIRST_WHEEL_EQUIPMENT": 32,
          "LOADOUT_SLOT_FIRST_WHEEL_GRENADE": 26,
          "LOADOUT_SLOT_FIRST_WHEEL_WEAPON": 2,
          "LOADOUT_SLOT_FLAIR0": 55,
          "LOADOUT_SLOT_GRENADE0": 26,
          "LOADOUT_SLOT_GRENADE1": 27,
          "LOADOUT_SLOT_GRENADE2": 28,
          "LOADOUT_SLOT_GRENADE3": 29,
          "LOADOUT_SLOT_GRENADE4": 30,
          "LOADOUT_SLOT_GRENADE5": 31,
          "LOADOUT_SLOT_HEAVY0": 20,
          "LOADOUT_SLOT_HEAVY1": 21,
          "LOADOUT_SLOT_HEAVY2": 22,
          "LOADOUT_SLOT_HEAVY3": 23,
          "LOADOUT_SLOT_HEAVY4": 24,
          "LOADOUT_SLOT_HEAVY5": 25,
          "LOADOUT_SLOT_INVALID": -1,
          "LOADOUT_SLOT_LAST_ALL_CHARACTER": 56,
          "LOADOUT_SLOT_LAST_AUTO_BUY_WEAPON": 1,
          "LOADOUT_SLOT_LAST_COSMETIC": 41,
          "LOADOUT_SLOT_LAST_PRIMARY_WEAPON": 25,
          "LOADOUT_SLOT_LAST_WHEEL_EQUIPMENT": 37,
          "LOADOUT_SLOT_LAST_WHEEL_GRENADE": 31,
          "LOADOUT_SLOT_LAST_WHEEL_WEAPON": 25,
          "LOADOUT_SLOT_MELEE": 0,
          "LOADOUT_SLOT_MISC0": 47,
          "LOADOUT_SLOT_MISC1": 48,
          "LOADOUT_SLOT_MISC2": 49,
          "LOADOUT_SLOT_MISC3": 50,
          "LOADOUT_SLOT_MISC4": 51,
          "LOADOUT_SLOT_MISC5": 52,
          "LOADOUT_SLOT_MISC6": 53,
          "LOADOUT_SLOT_MUSICKIT": 54,
          "LOADOUT_SLOT_PROMOTED": -2,
          "LOADOUT_SLOT_RIFLE0": 14,
          "LOADOUT_SLOT_RIFLE1": 15,
          "LOADOUT_SLOT_RIFLE2": 16,
          "LOADOUT_SLOT_RIFLE3": 17,
          "LOADOUT_SLOT_RIFLE4": 18,
          "LOADOUT_SLOT_RIFLE5": 19,
          "LOADOUT_SLOT_SECONDARY0": 2,
          "LOADOUT_SLOT_SECONDARY1": 3,
          "LOADOUT_SLOT_SECONDARY2": 4,
          "LOADOUT_SLOT_SECONDARY3": 5,
          "LOADOUT_SLOT_SECONDARY4": 6,
          "LOADOUT_SLOT_SECONDARY5": 7,
          "LOADOUT_SLOT_SMG0": 8,
          "LOADOUT_SLOT_SMG1": 9,
          "LOADOUT_SLOT_SMG2": 10,
          "LOADOUT_SLOT_SMG3": 11,
          "LOADOUT_SLOT_SMG4": 12,
          "LOADOUT_SLOT_SMG5": 13,
          "LOADOUT_SLOT_SPRAY0": 56
        },
        "type": "uint32"
      },
      "navproperties_t": {
        "alignment": 4,
        "members": {
          "NAV_IGNORE": 1
        },
        "type": "uint32"
      },
      "vote_create_failed_t": {
        "alignment": 4,
        "members": {
          "VOTE_FAILED_CANNOT_KICK_ADMIN": 12,
          "VOTE_FAILED_CANT_ROUND_END": 31,
          "VOTE_FAILED_CONTINUE": 33,
          "VOTE_FAILED_DISABLED": 21,
          "VOTE_FAILED_FAILED_RECENTLY": 8,
          "VOTE_FAILED_FAILED_RECENT_CHANGEMAP": 16,
          "VOTE_FAILED_FAILED_RECENT_KICK": 15,
          "VOTE_FAILED_FAILED_RECENT_RESTART": 19,
          "VOTE_FAILED_FAILED_RECENT_SCRAMBLETEAMS": 18,
          "VOTE_FAILED_FAILED_RECENT_SWAPTEAMS": 17,
          "VOTE_FAILED_GENERIC": 0,
          "VOTE_FAILED_ISSUE_DISABLED": 5,
          "VOTE_FAILED_MAP_NAME_REQUIRED": 7,
          "VOTE_FAILED_MAP_NOT_FOUND": 6,
          "VOTE_FAILED_MATCH_NOT_PAUSED": 25,
          "VOTE_FAILED_MATCH_PAUSED": 24,
          "VOTE_FAILED_MAX": 34,
          "VOTE_FAILED_NEXTLEVEL_SET": 22,
          "VOTE_FAILED_NOT_10_PLAYERS": 27,
          "VOTE_FAILED_NOT_IN_WARMUP": 26,
          "VOTE_FAILED_PLAYERNOTFOUND": 11,
          "VOTE_FAILED_QUORUM_FAILURE": 4,
          "VOTE_FAILED_RATE_EXCEEDED": 2,
          "VOTE_FAILED_REMATCH": 32,
          "VOTE_FAILED_SCRAMBLE_IN_PROGRESS": 13,
          "VOTE_FAILED_SPECTATOR": 14,
          "VOTE_FAILED_SWAP_IN_PROGRESS": 20,
          "VOTE_FAILED_TEAM_CANT_CALL": 9,
          "VOTE_FAILED_TIMEOUT_ACTIVE": 28,
          "VOTE_FAILED_TIMEOUT_EXHAUSTED": 30,
          "VOTE_FAILED_TIMEOUT_INACTIVE": 29,
          "VOTE_FAILED_TOO_EARLY_SURRENDER": 23,
          "VOTE_FAILED_TRANSITIONING_PLAYERS": 1,
          "VOTE_FAILED_WAITINGFORPLAYERS": 10,
          "VOTE_FAILED_YES_MUST_EXCEED_NO": 3
        },
        "type": "uint32"
      }
    }
  }
}